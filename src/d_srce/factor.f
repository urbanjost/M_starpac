*FACTOR
      SUBROUTINE FACTOR(N, NPF, IPF, IPFEXP)
C
C     LATEST REVISION  -  03/15/90  (JRD)
C
C     THIS ROUTINE FACTORS AN INPUT INTEGER   N   AND RETURNS
C     THE NUMBER OF PRIME FACTORS IN   NPF   , THE VALUE OF THE
C     PRIME FACTORS IN THE VECTOR   IPF   , AND THE EXPONENT
C     OF EACH OF THE PRIME FACTORS IN THE VECTOR   IPFEXP   .
C     THE ELEMENTS OF    IPF   ARE STORED IN INCREASING ORDER.
C     THE LENGTH OF THE VECTORS IS SUFFICIENT TO ACCOMODATE
C     THE PRIME FACTORS OF AN INTEGER UP TO 2 ** 128 (APPROXIMATELY
C     10 ** 40).
C
C     THIS ROUTINE IS ADAPTED FROM THE FACTORING ROUTINE GIVEN
C     IN ACM ALGORITHM 467 (CACM, 1973, VOL. 16, NO. 11, PAGE 692-694).
C
C     ADAPTED BY  -  JANET R. DONALDSON
C                    STATISTICAL ENGINEERING DIVISION
C                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
C
C     CREATION DATE  -  OCTOBER 23, 1980
C
C
C  VARIABLE DECLARATIONS
C
C  SCALAR ARGUMENTS
      INTEGER
     +   N,NPF
C
C  ARRAY ARGUMENTS
      INTEGER
     +   IPF(50),IPFEXP(50)
C
C  LOCAL SCALARS
      INTEGER
     +   IDIV,IFCUR,IQUOT,NPART
C
C     VARIABLE DEFINITIONS (ALPHABETICALLY)
C
C     INTEGER IDIV, IFCUR
C        VARIOUS VARIABLES USED TO FACTOR    N   .
C     INTEGER IPF(50), IPFEXP(50)
C        THE VECTORS OF PRIME FACTORS OF   N   , AND THEIR EXPONENTS,
C        RESPECTIVELY.
C     INTEGER IQUOT
C        A VARIABLE USED TO FACTOR   N   .
C     INTEGER N
C        THE VALUE TO BE FACTORED.
C     INTEGER NPART
C        A VARIABLE USED TO FACTOR   N   .
C     INTEGER NPF
C        THE NUMBER OF FACTORS FOUND IN    N   .
C
C  DETERMINE THE FACTORS OF N
C
      NPF = 0
      IFCUR = 0
      NPART = N
      IDIV = 2
   10 IQUOT = NPART/IDIV
      IF (NPART.NE.IDIV*IQUOT) GO TO 40
      IF (IDIV.LE.IFCUR) GO TO 20
      NPF = NPF + 1
      IPF(NPF) = IDIV
      IFCUR = IDIV
      IPFEXP(NPF) = 1
      GO TO 30
   20 IPFEXP(NPF) = IPFEXP(NPF) + 1
   30 NPART = IQUOT
      GO TO 10
   40 IF (IQUOT.LE.IDIV) GO TO 60
      IF (IDIV.GE.3) GO TO 50
      IDIV = 3
      GO TO 10
   50 IDIV = IDIV + 2
      GO TO 10
   60 IF (NPART.LE.1) RETURN
      IF (NPART.LE.IFCUR) GO TO 70
      NPF = NPF + 1
      IPF(NPF) = NPART
      IPFEXP(NPF) = 1
      RETURN
   70 IPFEXP(NPF) = IPFEXP(NPF) + 1
C
      RETURN
      END
