*AOV1ER
      SUBROUTINE AOV1ER(Y, TAG, N, IGSTAT, NZTAGS, NG, LDSTAK, NMSUB,
     +   INDEX, ISAOV1, NALL0)
C
C     LATEST REVISION  -  03/15/90  (JRD)
C
C     THIS ROUTINE DOES PRELIMINARY CHECKING FOR ERRORS IN THE INPUT
C     PARAMETERS OF THE ONEWAY FAMILY.
C
C     WRITTEN BY -
C        LINDA L. MITCHELL AND JANET R. DONALDSON
C        STATISTICAL ENGINEERING DIVISION
C        NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
C
C     CREATION DATE  -  MAY 17, 1982
C
C
C  VARIABLE DECLARATIONS
C
C  SCALAR ARGUMENTS
      INTEGER
     +   IGSTAT,INDEX,ISAOV1,LDSTAK,N,NALL0,NG,NZTAGS
C
C  ARRAY ARGUMENTS
      DOUBLE PRECISION
     +   TAG(*),Y(*)
      CHARACTER
     +   NMSUB(6)*1
C
C  SCALARS IN COMMON
      INTEGER
     +   IERR
C
C  ARRAYS IN COMMON
      DOUBLE PRECISION DSTAK(12)
C
C  LOCAL SCALARS
      INTEGER
     +   I,IPRT,J,LDSMIN,NV
      LOGICAL
     +   ERROR,HEAD
C
C  LOCAL ARRAYS
      INTEGER
     +   ISTAK(12)
      CHARACTER
     +   LIGSTA(8)*1,LLDS(8)*1,LN(8)*1,LNG(8)*1,LTAG(8)*1,
     +   LTWO(8)*1,LZERO(8)*1
C
C  EXTERNAL FUNCTIONS
      INTEGER
     +   STKGET,STKST
      EXTERNAL STKGET,STKST
C
C  EXTERNAL SUBROUTINES
      EXTERNAL EISGE,EISII,ERVGT,GENI,IPRINT,LDSCMP,SRTIRR,SRTRRI,
     +   STKCLR,STKSET
C
C  COMMON BLOCKS
      COMMON /CSTAK/DSTAK
      COMMON /ERRCHK/IERR
C
C  EQUIVALENCES
      EQUIVALENCE (DSTAK(1),ISTAK(1))
C
C     VARIABLE DEFINITIONS (ALPHABETICALLY)
C
C     DOUBLE PRECISION DSTAK(12)
C        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
C     LOGICAL ERROR
C        SET TRUE IF THE ERROR CHECKING ROUTINE FOUND ANY ERRORS
C     LOGICAL HEAD
C        INDICATES WHETHER HEADING NEEDS TO BE PRINTED
C        TRUE - YES, NEEDS TO BE PRINTED
C        FALSE - NO, HAS BEEN PRINTED
C     INTEGER I
C        *
C     INTEGER IERR
C        IF IERR .NE. 0, THEN ERRORS WHERE FOUND IN THE PARAMETERS
C     INTEGER IGSTAT
C        *
C     INTEGER INDEX
C        THE STARTING LOCATION IN THE STACH AREA OF THE INDEX FOR
C        THE SORTED TAGS.
C     INTEGER IPRT
C        THE OUTPUT LOGICAL UNIT NUMBER
C     INTEGER ISAOV1
C        AN INDICATOR VARIABLE USED FOR THE COMPUTATION OF WORK
C        SPACE.  IF ISAOV1 = 0, THE CALLING ROUTINE IS AOV1S.  IF
C        ISAOV1 = 1, THE CALLING ROUTINE IS AOV1.
C     INTEGER ISTAK(12)
C        THE INTEGER VERSION OF THE /CSTAK/ WORK AREA.
C     INTEGER J
C        *
C     INTEGER LDSMIN
C        THE MINIMUM SIZE ALLOWED FOR THE STACK
C     INTEGER LDSTAK
C        SIZE OF STACK ALLOCATED IN THE USERS MAIN PROGRAM
C     CHARACTER*1 LIGSTA(8), LLDS(8), LN(8), LNG(8), LTAG(8),
C    *   LTWO(8), LZERO(8)
C        THE ARRAY(S) CONTAINING THE NAME(S) OF THE VARIABLE(S) CHECKED
C        ERRORS
C     INTEGER N
C        THE NUMBER OF OBSERVATIONS
C     INTEGER NALL0
C        OUTPUT PARAMETER.  NUMBER OF STACK ALLOCATIONS AFTER
C        STACK IS INITIALIZED.
C     INTEGER NG
C        *
C     CHARACTER*1 NMSUB(6)
C        NAME OF THE CALLING SUBROUTINE
C     INTEGER NV
C        THE NUMBER OF VALUES LESS THAN OR EQUAL TO ZERO.
C     INTEGER NZTAGS
C        THE NUMBER OF POSITIVE NON-ZERO TAGS, TO BE DETERMINED BY
C        THIS ROUTINE
C     DOUBLE PRECISION TAG(N)
C        THE VECTOR OF TAGS.
C     DOUBLE PRECISION Y(N)
C        THE VECTOR OF OBSERVATIONS.
C
      DATA  LIGSTA(1),LIGSTA(2),LIGSTA(3),LIGSTA(4),LIGSTA(5),LIGSTA(6),
     +      LIGSTA(7),LIGSTA(8)
     +     / 'I', 'G', 'S', 'T', 'A', 'T', ' ', ' '/
      DATA   LLDS(1),  LLDS(2),  LLDS(3),  LLDS(4),  LLDS(5),  LLDS(6),
     +       LLDS(7),  LLDS(8)
     +     / 'L', 'D', 'S', 'T', 'A', 'K', ' ', ' '/
      DATA     LN(1),    LN(2),    LN(3),    LN(4),    LN(5),    LN(6),
     +         LN(7),    LN(8)
     +     / 'N', ' ', ' ', ' ', ' ', ' ', ' ', ' '/
      DATA    LNG(1),   LNG(2),   LNG(3),   LNG(4),   LNG(5),   LNG(6),
     +        LNG(7),   LNG(8)
     +     / 'N', 'G', ' ', ' ', ' ', ' ', ' ', ' '/
      DATA   LTAG(1),  LTAG(2),  LTAG(3),  LTAG(4),  LTAG(5),  LTAG(6),
     +       LTAG(7),  LTAG(8)
     +     / 'T', 'A', 'G', ' ', ' ', ' ', ' ', ' '/
      DATA   LTWO(1),  LTWO(2),  LTWO(3),  LTWO(4),  LTWO(5),  LTWO(6),
     +       LTWO(7),  LTWO(8)
     +     / 'T', 'W', 'O', ' ', ' ', ' ', ' ', ' '/
      DATA  LZERO(1), LZERO(2), LZERO(3), LZERO(4), LZERO(5), LZERO(6),
     +      LZERO(7), LZERO(8)
     +     / 'Z', 'E', 'R', 'O', ' ', ' ', ' ', ' '/
C
C     COMMENCE BODY OF ROUTINE
C
      IERR = 0
      HEAD = .TRUE.
C
C     SET UP OUTPUT UNIT
      CALL IPRINT(IPRT)
C
C     BEGIN ERROR CHECKING.
C
C     NUMBER OF OBSERVATIONS LESS THAN 2
C
      CALL EISGE(NMSUB, LN, N, 2, 2, HEAD, ERROR, LTWO)
      IF (ERROR) GO TO 50
C
C     NUMBER OF NON-ZERO TAGS LESS THAN 2
C
      CALL ERVGT(NMSUB, LTAG, TAG, N, 0.0D0, (N-2), HEAD, 7, NV, ERROR,
     +   LZERO)
      IF (ERROR) GO TO 50
C
      NZTAGS = N - NV
C
C     STACK MUST BE LARGE ENOUGH FOR A VECTOR OF LENGTH N TO CONTINUE
C
      CALL LDSCMP(1, 0, N, 0, 0, 0, 'D', 0, LDSMIN)
      CALL EISGE(NMSUB, LLDS, LDSTAK, LDSMIN, 9, HEAD, ERROR, LLDS)
      IF (ERROR) WRITE(IPRT, 1000)
      IF (ERROR) GO TO 50
C
C     INITIALIZE STACK AND NALL0
C
      CALL STKSET(LDSTAK, 4)
      NALL0 = STKST(1)
C
      INDEX = STKGET(N,2)
C
C     SORT TAG VECTOR CARRYING ALONG INDEX TO ORIGINAL ORDER AND THE
C     VECTOR OF OBSERVATIONS
C
      CALL GENI(ISTAK(INDEX), N, 1, 1)
      CALL SRTIRR(ISTAK(INDEX), Y, N, TAG)
C
C     COUNT THE NUMBER OF DIFFERENT TAG VALUES
C
      J = N - NZTAGS + 2
      NG = 1
      DO 10 I=J,N
         IF (TAG(I).GT.TAG(I-1)) NG = NG + 1
   10 CONTINUE
C
C     LESS THAN 2 DIFFERENT TAG GROUPS
C
      CALL EISII(NMSUB, LNG, NG, 2, NZTAGS-1, 3, HEAD, ERROR,
     +  LTWO, LN)
      IF (ERROR) GO TO 40
C
C     CHECK THAT DIMENSION OF STATISTICS MATRIX IS SUFFICIENT
C
      CALL EISGE(NMSUB, LIGSTA, IGSTAT, NG, 3, HEAD, ERROR, LNG)
      IF (ERROR) GO TO 40
C
C     COMPUTE AND CHECK FOR SUFFICIENT STACK
C
      CALL LDSCMP(11, 0, N+NZTAGS, 0, 0, 0,
     +            'D', ISAOV1*4*NG+4*NG+NZTAGS, LDSMIN)
C
      CALL EISGE(NMSUB, LLDS, LDSTAK, LDSMIN, 9, HEAD, ERROR, LLDS)
      IF (.NOT.ERROR) RETURN
C
   40 CONTINUE
C
C     REORDER DATA
C
      CALL SRTRRI(TAG, Y, N, ISTAK(INDEX))
C
C     CLEAR STACK, IN CASE WHERE ERROR FOLLOWS ALLOCATION OF STACK.
C
      CALL STKCLR (NALL0)
C
   50 CONTINUE
      IERR = 1
      RETURN
C
C     FORMAT STATEMENTS
C
 1000 FORMAT(/' NOTE.  THE VALUE OF LDSTAK MENTIONED ABOVE IS THE',
     +  ' MINIMUM NECESSARY'/
     +  ' TO CONTINUE CHECKING FOR ERRORS AND',
     +  ' TO CALCULATE THE CORRECT VALUE'/
     +  ' OF LDSTAK.  THE CORRECT',
     +  ' VALUE WILL BE LARGER.  CONSULT THE DOCUMENTATION'/
     +  ' FOR THE FORMULAS USED TO CALCULATE LDSTAK.')
      END
