*STAT2
      SUBROUTINE STAT2(Y, N, STS, SUMDA, SUMDI, SUMD2, SUMD3, SUMD4)
C
C     LATEST REVISION  -  03/15/90  (JRD)
C
C     THIS SUBROUTINE COMPUTES FOR A VECTOR Y THE STATISTICS THAT DO
C     NOT REQUIRE SORTING OF THE VECTOR, THAT IS, THOSE NOT COMPUTED
C     BY STAT1.  NO WEIGHTS ARE USED.
C
C     THIS SUBROUTINE IS BASED ON A MODIFICATION OF THE STATIS
C     CODE USED IN OMNITAB, VERSION 5 (6/16/72), WRITTEN BY
C     SALLY PEAVY.  THE ORIGINAL ADAPTATION TO STARPAC WAS
C     DONE BY JANET DONALDSON.
C
C     WRITTEN BY - JOHN E. KOONTZ
C                  STATISTICAL ENGINEERING DIVISION
C                  NATIONAL BUREAU OF STANDARDS
C
C     CREATION DATE  -  MAY 17, 1982
C
C
C  VARIABLE DECLARATIONS
C
C  SCALAR ARGUMENTS
      DOUBLE PRECISION
     +   SUMD2,SUMD3,SUMD4,SUMDA,SUMDI
      INTEGER
     +   N
C
C  ARRAY ARGUMENTS
      DOUBLE PRECISION
     +   STS(53),Y(N)
C
C  SCALARS IN COMMON
      INTEGER
     +   IERR
C
C  LOCAL SCALARS
      DOUBLE PRECISION
     +   DIF,T,TA,TK1,TK2
      INTEGER
     +   I,IC,ICI,IDRUNS,IMINUS,IPLUS,IRUN
C
C  EXTERNAL FUNCTIONS
      DOUBLE PRECISION
     +   CDFF,PPFCHS,PPFT
      EXTERNAL CDFF,PPFCHS,PPFT
C
C  INTRINSIC FUNCTIONS
      INTRINSIC ABS,SQRT
C
C  COMMON BLOCKS
      COMMON /ERRCHK/IERR
C
C     VARIABLE DEFINITIONS (ALPHABETICALLY)
C
C     DOUBLE PRECISION DIF
C        THE SUM OF THE DIFFERENCES BETWEEN SUCCEEDING ELEMENTS
C        IN Y.
C     INTEGER I
C        A LOOP INDEX.
C     INTEGER IC
C        PREVIOUS SIGN IN RUNS CALCULATION.
C     INTEGER ICI
C        CURRENT SIGN IN RUNS CALCULATION.
C     INTEGER IDRUNS
C        THE NUMBER OF RUNS.
C     INTEGER IERR
C        AN ERROR FLAG SET IN COMMON ERRCHK.
C     INTEGER IMINUS, IPLUS
C        COUNTS OF SIGNS OF DEVIATIONS.
C     INTEGER IRUN
C        THE NUMBER OF RUNS UP AND DOWN.
C     INTEGER N
C        INPUT PARAMETER.  THE LENGTH OF Y AND WT.
C     DOUBLE PRECISION STS(53)
C        OUTPUT PARAMETER.  THE VECTOR OF 53 STATISTICS COMPUTED.
C        ROW STATISTIC                    ROW STATISTIC
C         1  LENGTH OF VECTOR             TESTS FOR NONRANDOMNESS
C         2  NUMBER OF NONZERO WEIGHTS    23  NUMBER OF RUNS UP AND DOWN
C        MEASURES OF LOCATION             24  EXPECTED NUMBER OF RUNS
C         3  UNWEIGHTED MEAN              25  S.D. OF NUMBER OF RUNS
C         4  WEIGHTED MEAN                26  MEAN SQR. SUCCESSIVE DIFF.
C         5  MEDIAN                       27  MEAN SQR. SUCC. DIFF./VAR.
C         6  MID-RANGE                    DEVIATIONS FROM WTD MEAN
C         7  25 P.C. UNWTD. TRIMMED MEAN  28  NUMBER OF + SIGNS
C         8  25 P.C. WTD. TRIMMED MEAN    29  NUMBER OF - SIGNS
C        MEASURES OF DISPERSION           30  NUMBER OF RUNS
C         9  STANDARD DEVIATION (S.D.)    31  EXPECTED NUMBER OF RUNS
C        10  S.D. OF MEAN                 32  S.D. OF RUNS
C        11  RANGE                        33  DIFF./S.D. OF RUNS
C        12  MEAN VARIATION               OTHER STATISTICS
C        13  VARIANCE (VAR.)              34  MINIMUM
C        14  COEFFICIENT OF VARIATION     35  MAXIMUM
C        CONFIDENCE INTERVALS             36  BETA 1
C        15  LOWER CONFIDENCE LIMIT, MEAN 37  BETA 2
C        16  UPPER CONFIDENCE LIMIT, MEAN 38  WTD. SUM OF VALUES
C        17  LOWER CONFIDENCE LIMIT, S.D. 39  WTD. SUM OF SQUARES
C        18  UPPER CONFIDENCE LIMIT, S.D. 40  WTD. SUM OF SQRD. DEVS.
C        LINEAR TREND STATISTICS          41  STUDENTS T
C        19  SLOPE                        42  WTD. SUM OF ABS. VALUES
C        20  S.D. OF SLOPE                43  WTD. AVG. ABS. VALUES
C        21  SLOPE/S.D. OF SLOPE = T      44-53 FREQ. DISTRIBUTION
C        22  PROB ( X .GT. ABS(OBS. T))
C     DOUBLE PRECISION SUMDA
C        INPUT PARAMETER.  THE SUM OF THE ABSOLUTE VALUES OF THE
C        DIFFERENCES DIFF.
C     DOUBLE PRECISION SUMDI
C        INPUT PARAMETER.  THE SUM OF THE PRODUCTS OF I AND THE
C        ITH DIFFERENCE DIFF.
C     DOUBLE PRECISION SUMD2
C        INPUT PARAMETER.  THE SUM OF THE SQUARES OF THE
C        DIFFERENCES DIFF.
C     DOUBLE PRECISION SUMD3
C        INPUT PARAMETER.  THE SUM OF THE CUBES OF THE
C        DIFFERENCES DIFF.
C     DOUBLE PRECISION SUMD4
C        INPUT PARAMETER.  THE SUM OF THE HYPERCUBES OF THE
C        DIFFERENCES DIFF.
C     DOUBLE PRECISION T
C        A RESIDUAL (Y(I) - MEANY)
C     DOUBLE PRECISION TA
C        A TEMPORARY VARIABLE IN THE RUNS CALCULATION.
C     DOUBLE PRECISION TK1, TK2
C        CHI-SQUARED VALUES.
C     DOUBLE PRECISION Y(N)
C        INPUT PARAMETER.  A SET OF N DATA POINTS, SORTED
C        INTO ASCENDING ORDER.
C
C
C     BEGIN STORAGE OF STATISTICS.
C
      STS(1) = N
      STS(2) = STS(1)
      STS(24) = (2.0D0*STS(1)-1.0D0)/3.0D0
      STS(25) = SQRT((16.0D0*STS(1)-29.0D0)/90.0D0)
      STS(43) = STS(42)/STS(1)
C
C     COMPUTE RESIDUALS AND STANDARD DEVIATIONS.
C
      ICI = 0
      IPLUS = 0
      IMINUS = 0
      IDRUNS = 0
      IC = 0
      DO 30 I=1,N
         T = Y(I) - STS(4)
         IF (T.LT.0.0D0) GO TO 10
         IPLUS = IPLUS + 1
         ICI = +1
         GO TO 20
   10    IMINUS = IMINUS + 1
         ICI = -1
   20    IF (IC.EQ.ICI) GO TO 30
         IC = ICI
         IDRUNS = IDRUNS + 1
   30 CONTINUE
      STS(28) = IPLUS
      STS(29) = IMINUS
      STS(31) = 1.0D0 + (2.0D0*STS(28)*STS(29)/STS(1))
      STS(32) = SQRT((2.0D0*STS(28)*STS(29)*
     +                 (2.0D0*STS(28)*STS(29) -
     +                  STS(28)-STS(29)))/
     +            ((STS(28)+STS(29))**2*(STS(1)-1.0D0)))
      STS(30) = IDRUNS
      STS(33) = 0.0D0
      IF (STS(32).NE.0.0D0)
     +   STS(33) = (STS(30)-STS(31))/STS(32)
      STS(13) = SUMD2/(STS(1)-1.0D0)
      STS(9) = SQRT(STS(13))
      STS(10) = STS(9)/SQRT(STS(1))
      IF (STS(4).NE.0.0D0)
     +   STS(14) = 100.0D0*ABS(STS(9)/STS(4))
      IF (STS(4).EQ.0.0D0) STS(14) = 0.0D0
      STS(36) = 0.0D0
      IF (SUMD2.GT.0.0D0)
     +   STS(36) = (SUMD3/STS(1))**2/((SUMD2/STS(1))**3)
      STS(37) = 0.0D0
      IF (SUMD2.GT.0.0D0)
     +   STS(37) = (SUMD4/STS(1))/((SUMD2/STS(1))**2)
      STS(40) = SUMD2
      STS(19) = (12.0D0*SUMDI)/(STS(1)*(STS(1)**2-1.0D0))
      STS(20) = (1.0D0/(STS(1)-2.0D0)*
     +             (12.0D0*(SUMD2/(STS(1)*(STS(1)**2-1.0D0)))-
     +              STS(19)**2))
      IF (STS(20).LE.0.0D0) STS(20) = 0.0D0
      STS(20) = SQRT(STS(20))
      IF (STS(20).EQ.0.0D0) STS(21) = 0.0D0
      IF (STS(20).GT.0.0D0) STS(21) = STS(19)/STS(20)
C
      STS(22) = 1.0D0 - CDFF(STS(21)*STS(21), 1.0D0, STS(1)-2.0D0)
C
C     COMPUTE NUMBER OF RUNS IN THE DATA.
C
      DIF = 0.0D0
      IRUN = 1
      TA = 0.0D0
      DO 40 I=1,N
         IF (I.GE.N) GO TO 50
         TA = Y(I+1) - Y(I)
         IF (TA.NE.0.0D0) GO TO 50
   40 CONTINUE
   50 DO 60 I=1,N
         IF (I.EQ.N) GO TO 60
         T = Y(I+1) - Y(I)
         DIF = DIF + T*T
         IF (TA*T.GE.0.0D0) GO TO 60
         TA = T
         IRUN = IRUN + 1
   60 CONTINUE
      STS(23) = IRUN
      STS(26) = DIF/(STS(1)-1.0D0)
      STS(27) = 0.0D0
      IF (STS(13).NE.0.0D0)
     +   STS(27) = STS(26)/STS(13)
      STS(41) = 0.0D0
      IF (STS(9).NE.0.0D0)
     +   STS(41) = (STS(4)*SQRT(STS(1)))/STS(9)
      STS(12) = SUMDA/STS(1)
      T = PPFT(0.975D0, N-1)
      TK1 = PPFCHS(0.975D0, N-1)
      TK2 = PPFCHS(0.025D0, N-1)
      STS(15) = STS(4) - T*STS(10)
      STS(16) = STS(4) + T*STS(10)
      STS(17) = SQRT((STS(1)-1.0D0)/TK1)*STS(9)
      STS(18) = SQRT((STS(1)-1.0D0)/TK2)*STS(9)
      RETURN
      END
