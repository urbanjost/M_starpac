!DCOPY
      subroutine dcopy(n,dx,incx,dy,incy)
!
!     COPY DOUBLE PRECISION DX TO DOUBLE PRECISION DY.
!     FOR I = 0 TO N-1, COPY DX(LX+I*INCX) TO DY(LY+I*INCY),
!     WHERE LX = 1 IF INCX .GE. 0, ELSE LX = (-INCX)*N, AND LY IS
!     DEFINED IN A SIMILAR WAY USING INCY.
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      integer incx,incy,n
!
!  ARRAY ARGUMENTS
      double precision dx(*),dy(*)
!
!  LOCAL SCALARS
      integer i,ix,iy,m,mp1,ns
!
!  INTRINSIC FUNCTIONS
      intrinsic mod
!
      if(n.le.0)return
      if(incx.eq.incy) if(incx-1) 5,20,60
    5 continue
!
!        CODE FOR UNEQUAL OR NONPOSITIVE INCREMENTS.
!
      ix = 1
      iy = 1
      if(incx.lt.0)ix = (-n+1)*incx + 1
      if(incy.lt.0)iy = (-n+1)*incy + 1
      do 10 i = 1,n
        dy(iy) = dx(ix)
        ix = ix + incx
        iy = iy + incy
   10 continue
      return
!
!        CODE FOR BOTH INCREMENTS EQUAL TO 1
!
!
!        CLEAN-UP LOOP SO REMAINING VECTOR LENGTH IS A MULTIPLE OF 7.
!
   20 m = mod(n,7)
      if( m .eq. 0 ) go to 40
      do 30 i = 1,m
        dy(i) = dx(i)
   30 continue
      if( n .lt. 7 ) return
   40 mp1 = m + 1
      do 50 i = mp1,n,7
        dy(i) = dx(i)
        dy(i + 1) = dx(i + 1)
        dy(i + 2) = dx(i + 2)
        dy(i + 3) = dx(i + 3)
        dy(i + 4) = dx(i + 4)
        dy(i + 5) = dx(i + 5)
        dy(i + 6) = dx(i + 6)
   50 continue
      return
!
!        CODE FOR EQUAL, POSITIVE, NONUNIT INCREMENTS.
!
   60 continue
      ns=n*incx
          do 70 i=1,ns,incx
          dy(i) = dx(i)
   70     continue
      return
      end
