!PGMS
      SUBROUTINE PGMS (YFFT, N, NFFT, LYFFT, IEXTND, NF, PER, LPER,
     &   FREQ, LFREQ, NPRT)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE USER CALLABLE ROUTINE FOR COMPUTING
!     THE (RAW) PERIODOGRAM OF A SERIES (LONG CALL).
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 7, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      INTEGER
     &   IEXTND,LFREQ,LPER,LYFFT,N,NF,NFFT,NPRT
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     &   FREQ(*),PER(*),YFFT(*)
!
!  SCALARS IN COMMON
      INTEGER
     &   IERR
!
!  LOCAL SCALARS
      INTEGER
     &   IPRT,NFFT2
      LOGICAL
     &   ERR01,ERR02,ERR03,ERR04,ERR05,HEAD
!
!  LOCAL ARRAYS
      CHARACTER
     &   LLFREQ(8)*1,LLPER(8)*1,LLYFFT(8)*1,LN(8)*1,NMSUB(6)*1
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL EISGE,ENFFT,IPRINT,PGMMN
!
!  COMMON BLOCKS
      COMMON /ERRCHK/IERR
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     LOGICAL ERR01, ERR02, ERR03, ERR04, ERR05
!        VALUE(S) INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     REAL FREQ(LFREQ)
!        THE ARRAY IN WHICH THE FREQUENCIES CORRESPONDING TO THE
!        INTEGRATED SPECTRUM VALUES ARE STORED.
!     LOGICAL HEAD
!        A VARIABLE USED TO INDICATE WHETHER A HEADING IS NEEDED FOR
!        ERROR MESSAGES (TRUE) OR NOT (FALSE).
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER IEXTND
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER ZERO
!        (IEXTND .EQ. 0) OR THE SERIES MEAN (IEXTND .NE. 0) IS TO BE
!        USED TO EXTEND THE SERIES.
!     INTEGER IPRT
!        THE LOGICAL UNIT USED FOR PRINTED OUTPUT.
!     INTEGER LFREQ
!        THE LENGTH OF THE ARRAY FREQ.
!     CHARACTER*1 LLFREQ(8), LLPER(8), LLYFFT(8), LN(8)
!        THE ARRAY(S) CONTAINING THE NAME(S) OF THE PARAMETER(S) CHECKED
!        FOR ERRORS.
!     INTEGER LPER
!        THE LENGTH OF THE ARRAY PER.
!     INTEGER LYFFT
!        THE LENGTH OF THE VECTOR YFFT.
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS.
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES AT WHICH THE PERIODOGRAM IS
!        TO BE COMPUTED.
!     INTEGER NFFT
!        THE EFFECTIVE LENGTH OF THE SERIES TO BE TRANSFORMED.
!     INTEGER NFFT2
!        THE EFFECTIVE SERIES LENGTH ACTUALLY USED.
!     INTEGER NPRT
!        THE VARIABLE CONTROLING PRINTED OUTPUT, WHERE
!        IF NPRT .LE. -2, THE OUTPUT CONSISTS OF A PAGE PLOT OF THE
!                         PERIODOGRAM ON A LOG-LINEAR SCALE,
!        IF NPRT .EQ. -1, THE OUTPUT CONSISTS OF A PAGE PLOT OF THE
!                         PERIODOGRAM IN DECIBELS ON A LINEAR SCALE,
!        IF NPRT .EQ.  0, THE OUTPUT IS SUPPRESSED,
!        IF NPRT .EQ.  1, THE OUTPUT CONSISTS OF A VERTICAL PLOT OF THE
!                         PERIODOGRAM IN DECIBELS ON A LINEAR SCALE.
!        IF NPRT .GE.  2, THE OUTPUT CONSISTS OF A VERTICAL PLOT OF THE
!                         PERIODOGRAM ON A LOG-LINEAR SCALE,
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THIS SUBROUTINE.
!     REAL PER(LPER)
!        THE ARRAY IN WHICH THE PERIODOGRAM IS STORED.
!     REAL YFFT(LYFFT)
!        THE ARRAY CONTAINING THE OBSERVED TIME SERIES.
!
!     SET UP NAME ARRAYS
!
      DATA
     &  NMSUB(1),  NMSUB(2),  NMSUB(3),  NMSUB(4),  NMSUB(5),  NMSUB(6)
     & /     'P',       'G',       'M',       'S',       ' ',       ' '/
      DATA
     & LLFREQ(1), LLFREQ(2), LLFREQ(3), LLFREQ(4), LLFREQ(5),
     &  LLFREQ(6), LLFREQ(7), LLFREQ(8)
     &  /'L','F','R','E','Q',' ',' ',' '/
      DATA
     & LLPER(1), LLPER(2), LLPER(3), LLPER(4), LLPER(5),
     &  LLPER(6), LLPER(7), LLPER(8) /'L','P','E','R',' ',' ',' ',' '/
      DATA
     & LLYFFT(1), LLYFFT(2), LLYFFT(3), LLYFFT(4), LLYFFT(5),
     &  LLYFFT(6), LLYFFT(7), LLYFFT(8)
     &  /'L','Y','F','F','T',' ',' ',' '/
      DATA
     & LN(1), LN(2), LN(3), LN(4), LN(5), LN(6), LN(7), LN(8)
     & /'N',' ',' ',' ',' ',' ',' ',' '/
!
!     SET UP FOR ERROR CHECKING
!
      IERR = 0
      HEAD = .TRUE.
!
!     CALL ERROR CHECKING ROUTINES
!
      CALL EISGE(NMSUB, LN, N, 17, 1, HEAD, ERR01, LN)
      IF (ERR01) GO TO 5
!
      CALL ENFFT(NMSUB, NFFT, 2, N, LYFFT, NFFT2, HEAD, ERR02)
      NF = NFFT2/2
!
      CALL EISGE(NMSUB, LLYFFT, LYFFT, NFFT2, 9, HEAD, ERR03, LLYFFT)
!
      CALL EISGE(NMSUB, LLPER, LPER, NF, 9, HEAD, ERR04, LLPER)
!
      CALL EISGE(NMSUB, LLFREQ, LFREQ, NF, 9, HEAD, ERR05, LLFREQ)
!
      IF (ERR02 .OR. ERR03 .OR. ERR04 .OR. ERR05) GO TO 5
      GO TO 10
!
    5 CONTINUE
      IERR = 1
      CALL IPRINT (IPRT)
      WRITE (IPRT, 1000)
      RETURN
!
   10 CONTINUE
!
      CALL PGMMN (YFFT, N, NFFT2, IEXTND, NF, PER, LPER, YFFT, FREQ,
     &   LFREQ, NPRT, NMSUB)
!
      RETURN
!
!     FORMAT STATEMENTS
!
 1000 FORMAT (/42H THE CORRECT FORM OF THE CALL STATEMENT IS//
     &  '       CALL PGMS (YFFT, N, NFFT, LYFFT,'/
     &  '      +           IEXTND, NF, PER, LPER, FREQ, LFREQ, NPRT)')
      END
