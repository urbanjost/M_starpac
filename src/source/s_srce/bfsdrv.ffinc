!BFSDRV
      SUBROUTINE BFSDRV(Y1, Y2, YMISS1, YMISS2, CCOV, NLPPC, SPCF1,
     &   SPCF2, NF, FMIN, FMAX, FREQ, N, NW, LAGMAX, LAGS, LAGMX1,
     &   WORK, LWORK, DELTA, ISYM, XAXIS, YAXIS, LPCV, ALPHA, NPRT,
     &   WINDOW, ICCOV, JCCOV, M, INDEX1, INDEX2, CSPC2, PHAS, ICSPC2,
     &   IPHAS, CODD, CEVEN, W, LW, NMSUB, LDSMIN, LDSTAK, OPTION,
     &   NFFT, INLPPC, JNLPPC, LY)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE CONTROLING ROUTINE FOR TIME SERIES FOURIER
!     SPECTRUM ANALYSIS .
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 2, 1985
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) :: ALPHA,DELTA,FMAX,FMIN,YMISS1,YMISS2
      INTEGER
     &   ICCOV,ICSPC2,INDEX1,INDEX2,INLPPC,IPHAS,JCCOV,JNLPPC,
     &   LAGMAX,LAGMX1,LDSMIN,LDSTAK,LPCV,LW,LWORK,LY,M,N,NF,NFFT,
     &   NPRT,NW
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     &   CCOV(*),CEVEN(*),CODD(*),CSPC2(*),FREQ(*),PHAS(*),SPCF1(*),
     &   SPCF2(*),W(*),WORK(*),XAXIS(*),Y1(*),Y2(*),YAXIS(*)
      INTEGER
     &   ISYM(*),LAGS(*),NLPPC(*)
      LOGICAL
     &   OPTION(4)
      CHARACTER
     &   NMSUB(6)*1
!
!  SUBROUTINE ARGUMENTS
      EXTERNAL WINDOW
!
!  SCALARS IN COMMON
      INTEGER
     &   IERR
!
!  LOCAL SCALARS
      REAL(KIND=WP) ::
     &   BW,DF,FMN,FMX,XPLTMN,XPLTMX,YMEAN1,YMEAN2,YPLTMN,YPLTMX
      INTEGER
     &   I,ILOG,ISPCER,J,K,LAG,LAGLST,NFUSED,NPTS,NWUSED
      LOGICAL
     &   NEWPG,UNIVAR
!
!  EXTERNAL FUNCTIONS
      INTEGER
     &   LSTLAG
      EXTERNAL LSTLAG
!
!  EXTERNAL SUBROUTINES
      EXTERNAL ACVF,ACVFF,ACVFM,BFSER,BFSLAG,BFSMN,CCVF,CCVFF,CCVFM,
     &   DFBW,DFBWM,SETFRQ,UFSEST,UFSOUT
!
!  INTRINSIC FUNCTIONS
      INTRINSIC INT,MAX,MIN
!
!  COMMON BLOCKS
      COMMON /ERRCHK/IERR
!
!  STATEMENT FUNCTIONS
      INTEGER
     &   I3C,I3N
!
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL ALPHA
!        THE DESIRED CONFIDENCE LEVEL.
!     REAL BW
!        THE BANDWIDTH.
!     REAL CCOV(ICCOV,JCCOV,M)
!        THE COVARIANCES.
!     REAL CEVEN(LAGMX1)
!        THE SUMS OF THE COVARIANCES FOR EACH LAG.
!     REAL CODD(LAGMX1)
!        THE DIFFERENCES OF THE COVARIANCES FOR EACH LAG.
!     REAL CSPC2(ICSPC2,NW)
!        THE SQUARED COHERENCY COMPONENT OF THE BIVARIATE SPECTRA.
!     REAL DELTA
!        THE SAMPLING INTERVAL.
!     REAL DF
!        THE EFFECTIVE DEGREES OF FREEDOM.
!     REAL FMAX, FMIN
!        THE MAXIMUM AND MINIMUM FREQUENCES AT WHICH THE
!        SPECTRUM IS TO BE COMPUTED.
!     REAL FMN, FMX
!        *
!     REAL FREQ(NF)
!        THE VECTOR OF FREQUENCIES AT WHICH THE SPECTRUM IS TO BE
!        COMPUTED.
!     INTEGER I
!        AN INDEX VARIABLE
!     INTEGER INDEX1, INDEX2
!        THE INDICES OF THE COVARIANCES OF THE TWO SERIES.
!     INTEGER INLPPC
!        THE FIRST DIMENSION OF THE ARRAY NLPPC.
!     INTEGER IPHAS
!        THE FIRST DIMENSION OF THE ARRAY PHAS.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER ILOG
!        A CODE USED TO SPECIFY THE TYPE OF PLOT, WHERE IF
!        ILOG = 0 THE PLOT IS LINEAR/LINEAR, IF
!        ILOG = 1 THE PLOT IS LOG/LINEAR, IF
!     INTEGER ISPCER
!        AN ERROR FLAG USED FOR THE SPECTRUM PLOTS.
!     INTEGER ISYM(LPCV)
!        THE ARRAY CONTAINING THE CODE FOR THE PLOT SYMBOLS.
!     INTEGER I3C
!        STATEMENT FUNCTION FOR FINDING LOCATIONS WITHIN CCOV.
!     INTEGER I3N
!        STATEMENT FUNCTION FOR FINDING LOCATIONS WITHIN NLPPC.
!     INTEGER JCCOV
!        THE SECOND DIMENSION OF CCOV
!     INTEGER JNLPPC
!        THE SECOND DIMENSION OF NLPPC
!     INTEGER LAG
!        THE LAG WINDWO TRUNCATION POINT USED FOR A SPECIFIC WINDOW.
!     INTEGER LAGLST
!        THE LAST LAG BEFORE MISSING DATA CAUSED AN ACVF
!        TO BE UNABLE TO BE COMPUTED.
!     INTEGER LAGMAX
!        THE MAXIMUM LAG VALUE TO BE USED.
!     INTEGER LAGMX1
!        THE VALUE LAGMAX+1.
!     INTEGER LAGS(NW)
!        THE ARRAY USED TO STORE THE LAG WINDOW TRUCCATION
!        POINTS USED FOR EACH SET OF SPECTRUM VALUES.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE VECTOR DSTAK IN COMMON CSTAK.
!     INTEGER LPCV
!        THE LENGTH OF THE VECTORS USED FOR PLOTTING.
!     INTEGER LWORK
!        THE LENGTH OF THE VECTOR W.
!     INTEGER LY
!        THE LENGTH OF THE VECTORS Y1 AND Y2.
!     INTEGER M
!        THE NUMBER OF SERIES FOR WHICH THE COVARIANCES WERE COMPUTED
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS IN EACH SERIES
!     LOGICAL NEWPG
!        THE LOGICAL VARIABLE USED TO DETERMINE IF OUTPUT
!        WILL BEGIN ON A NEW PAGE (TRUE) OR NOT (FALSE).
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES AT WHICH THE SPECTRUM IS
!        TO BE COMPUTED.
!     INTEGER NFFT
!        THE NUMBER OF OBSERVATIONS IN THE EXTENDED SERIES.
!     INTEGER NFUSED
!        THE NUMBER OF FREQUENCIES ACTUALLY USED.
!     INTEGER NLPPC(INLPPC,JNLPPC,M)
!         THE ARRAY CONTAINING THE NUMBER OF LAG PRODUCT PAIRS.
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THIS SUBROUTINE.
!     INTEGER NPRT
!        A CODE USED TO SPECIFY THE TYPE OF PLOT.
!        IF NPRT < 0 THE PLOT IS DECIBLES/LINEAR
!        IF NPRT = 0 THE PLOT IS SUPPRESSED.
!        IF NPRT > 0 THE PLOT IS LOG/LINEAR
!     INTEGER NPTS
!        THE NUMBER OF X, Y CO-ORDINATES TO BE PLOTTED.
!     INTEGER NW
!        THE VARIABLE USED TO DETERMINE THE NUMBER OF DIFFERENT
!        BANDWIDTHS TO BE USED.
!     INTEGER NWUSED
!        THE NUMBER OF DIFFERENT BANDWIDTHS ACTUALLY USED.
!     LOGICAL OPTION(4)
!        AN INDICATOR ARRAY USED TO DESIGNATE WHETHER ANY OF THE
!        FOUR POSSIBLE OPTIONS (F, M, V, OR S) HAVE BEEN USED (TRUE)
!        OR NOT (FALSE).
!     REAL PHAS(IPHAS,NW)
!        THE PHASE COMPONENT OF THE BIVARIATE SPECTRUM.
!     REAL SPCF1(NF), SPCF2(NF)
!        THE ARRAYS IN WHICH THE SPECTRUM IS STORED.
!     LOGICAL UNIVAR
!        THE LOGICAL VARIABLE USED TO DETERMINE IF THE OUTPUT
!        IS FOR UNIVARIATE (TRUE) OR BIVARIATE (FALSE) SPECTRA.
!     REAL W(LW)
!        THE VECTOR OF WINDOWS.
!     EXTERNAL WINDOW
!        THE SUBROUTINE USED TO COMPUTE THE WINDOW.
!     REAL WORK(LWORK)
!        THE VECTOR OF WORK SPACE.
!     REAL XAXIS(LPCV)
!        THE X AXIS VALUES FOR THE SPECTRUM PLOT.
!     REAL XPLTMN, XPLTMX
!        THE MINIMUM AND MAXIMUM VALUES TO BE PLOTTED FOR THE X AXIS.
!     REAL YAXIS(LPCV)
!        THE Y AXIS VALUES FOR THE SPECTRUM PLOTS.
!     REAL YMEAN1, YMEAN2
!        THE MEAN OF THE OBSERVED TIME SERIES
!     REAL YMISS1, YMISS2
!        THE USER SUPPLIED CODE WHICH IS USED TO DETERMINE WHETHER OR
!        NOT AN OBSERVATION IN THE SERIES IS MISSING.  IF Y(I) = YMISS,
!        THE VALUE IS ASSUMED MISSING, OTHERWISE IT IS NOT.
!     REAL YPLTMN, YPLTMX
!        THE MINIMUM AND MAXIMUM VALUES TO BE PLOTTED FOR THE Y AXIS.
!     REAL Y1(N), Y2(N)
!         THE ARRAY CONTAINING THE OBSERVED TIME SERIES.
!
!
!  STATEMENT FUNCTION DEFINITIONS
!
      I3C(I,J,K) = I + (J-1)*ICCOV + (K-1)*JCCOV*ICCOV
      I3N(I,J,K) = I + (J-1)*INLPPC + (K-1)*JNLPPC*INLPPC
!
      NFUSED = NF
      IF (OPTION(4)) THEN
        FMN = MAX(FMIN, 0.0E0)
        FMX = MIN(FMAX, 0.5E0)
        IF (FMN.GE.FMX) THEN
          FMN = 0.0E0
          FMX = 0.5E0
        END IF
      ELSE
!
!       SET VARIOUS VALUES FOR SHORT FORMS OF CALL STATEMENT
!
        NPRT = -1
        FMN = 0.0E0
        FMX = 0.5E0
        LAGMX1 = LAGMAX + 1
      END IF
!
!     CHECK FOR ERRORS
!
      CALL BFSER(NMSUB, N, LAGMAX, ICCOV, JCCOV, INLPPC, JNLPPC, M,
     &           INDEX1, INDEX2, ICSPC2, IPHAS, NF, NW, LAGS,
     &           LDSTAK, LDSMIN, LY, NFFT, OPTION)
!
      IF (IERR.EQ.1) RETURN
!
!     SET VARIOUS PROGRAM PARAMETERS.
!
      ALPHA = 0.95E0
      DELTA = 1.0E0
!
!     COMPUTE COVARIANCES
!
      LAGLST = LAGMAX
      IF (OPTION(1)) THEN
        CALL ACVFF(Y1, N, NFFT, YMEAN1,
     &             CCOV(I3C(1,INDEX1,INDEX1)),
     &             LAGMAX, ICCOV, N, WORK, NFFT)
        CALL ACVFF(Y2, N, NFFT, YMEAN2,
     &             CCOV(I3C(1,INDEX2,INDEX2)),
     &             LAGMAX, ICCOV, N, WORK, NFFT)
        CALL CCVFF(Y1, Y2, N, NFFT, LAGMAX,
     &             CCOV(I3C(1,INDEX1,INDEX2)),
     &             CCOV(I3C(1,INDEX2,INDEX1)), ICCOV, N, WORK, LWORK)
!
      ELSE
        IF (OPTION(3)) THEN
          IF (OPTION(2)) LAGLST = LSTLAG(NLPPC,LAGMAX,INLPPC)
        ELSE
          IF (OPTION(2)) THEN
            CALL ACVFM(Y1, YMISS1, N, YMEAN1,
     &                 CCOV(I3C(1,INDEX1,INDEX1)),
     &                 LAGMAX, LAGLST, NLPPC, ICCOV)
            CALL ACVFM(Y2, YMISS2, N, YMEAN2,
     &                 CCOV(I3C(1,INDEX2,INDEX2)),
     &                 LAGMAX, LAGLST, NLPPC, ICCOV)
            CALL CCVFM(Y1, YMISS1, Y2, YMISS2, N, LAGMAX, YMEAN1,
     &                 YMEAN2, CCOV(I3C(1,INDEX1,INDEX2)),
     &                 CCOV(I3C(1,INDEX2,INDEX1)), ICCOV,
     &                 NLPPC(I3N(1,INDEX1,INDEX2)),
     &                 NLPPC(I3N(1,INDEX2,INDEX1)))
!
          ELSE
            CALL ACVF(Y1, N, YMEAN1, CCOV(I3C(1,INDEX1,INDEX1)), LAGMAX,
     &                ICCOV)
            CALL ACVF(Y2, N, YMEAN2, CCOV(I3C(1,INDEX2,INDEX2)), LAGMAX,
     &                ICCOV)
            CALL CCVF(Y1, Y2, N, LAGMAX, YMEAN1, YMEAN2,
     &                CCOV(I3C(1,INDEX1,INDEX2)),
     &                CCOV(I3C(1,INDEX2,INDEX1)), ICCOV)
          END IF
        END IF
      END IF
!
      IF (LAGLST.LE.0) THEN
!
!     AN ERROR HAS BEEN DETECTED
!
         IERR = 2
         RETURN
      END IF
!
!     COMPUTE THE VECTOR OF LAG WINDOW TRUNCATION POINTS, ORDERED
!     SMALLEST TO LARGEST.
!
      NWUSED = NW
      IF (.NOT.OPTION(4)) CALL BFSLAG(CCOV, LAGLST, LAGS, N, NW, NWUSED,
     &                                ICCOV, JCCOV, INDEX1, INDEX2)
!
!     BEGIN COMPUTING FOURIER SPECTRUM FOR SERIES
!
      UNIVAR = .FALSE.
!
      ILOG = 0
!
      XPLTMN = FMN
      XPLTMX = FMX
!
      YPLTMN = 0.0E0
      YPLTMX = 1.0E0
!
!     SET FREQUENCIES FOR THE SPECTRUM.
!
      CALL SETFRQ(FREQ, NF, 1, FMN, FMX, DELTA)
!
!     COMPUTE AND PLOT SPECTRUM VALUES.
!
      NEWPG = .FALSE.
!
!     COMPUTE THE EVEN AND ODD CCVF ESTIMATES
!
      CEVEN(1) = CCOV(I3C(1,INDEX1,INDEX2))
      CODD(1) = 0.0E0
      DO 30 I=1,LAGLST
         CEVEN(I+1) = 0.5E0*
     &                (CCOV(I3C(I+1,INDEX1,INDEX2))+
     &                 CCOV(I3C(I+1,INDEX2,INDEX1)))
         CODD(I+1) = 0.5E0*
     &               (CCOV(I3C(I+1,INDEX1,INDEX2))-
     &                CCOV(I3C(I+1,INDEX2,INDEX1)))
   30 CONTINUE
!
      DO 60 I=1,NWUSED
         LAG = LAGS(I)
         IF (LAG.GT.LAGLST) THEN
            ISPCER = 2
            DF = 0.0E0
         ELSE
!
            ISPCER = 0
!
!     COMPUTE THE WINDOW, AND EFFECTIVE DEGREES OF FREEDOM AND
!     BANDWIDTH BASED ON THE WINDOW
!
            CALL WINDOW(LAG, W, LW)
            IF (OPTION(2)) THEN
               CALL DFBWM(N, LAG, W, LW, NLPPC(I3N(1,INDEX1,INDEX2)),
     &                    NLPPC(I3N(1,INDEX2,INDEX1)), INLPPC, DF, BW)
            ELSE
               CALL DFBW(N, LAG, W, LW, DF, BW)
            END IF
!
!     COMPUTE THE SPECTRUM FOR EACH INDIVIDUAL SERIES
!
            CALL UFSEST(CCOV(I3C(1,INDEX1,INDEX1)), W, LAG, SPCF1,
     &                  NFUSED, ICCOV, LAGMAX, NF, FREQ, DELTA)
!
            CALL UFSEST(CCOV(I3C(1,INDEX2,INDEX2)), W, LAG, SPCF2,
     &                  NFUSED, ICCOV, LAGMAX, NF, FREQ, DELTA)
!
            CALL BFSMN(SPCF1, SPCF2, CEVEN, CODD, W, LW, LAG, DF, NPRT,
     &                 NF, CSPC2(1+(I-1)*ICSPC2), PHAS(1+(I-1)*IPHAS),
     &                 FREQ, NPTS, XAXIS,
     &                 YAXIS, ISYM, LPCV, ALPHA, LAGMX1, DELTA)
!
            IF (NPRT.EQ.0) GO TO 60
!
         END IF
         CALL UFSOUT(XAXIS, YAXIS, ISYM, NPTS, BW, INT(DF+0.5E0), LAG,
     &               LAGMAX, NEWPG, ISPCER, NFUSED+5, XPLTMN, XPLTMX,
     &               YPLTMN, YPLTMX, ILOG, PHAS(1+(I-1)*IPHAS), FREQ,
     &               NF, UNIVAR, NMSUB)
!
         NEWPG = .TRUE.
!
   60 CONTINUE
!
      RETURN
!
      END
