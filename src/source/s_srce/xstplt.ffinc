!XSTPLT
      SUBROUTINE XSTPLT(LDSTAK,typ)
      real(kind=wp),intent(in) :: typ
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     ROUTINE TO TEST DERIVATIVE CHECKING ROUTINES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 21, 1983
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      INTEGER
     &   LDSTAK
!
!  SCALARS IN COMMON
      INTEGER
     &   IERR
!
!  ARRAYS IN COMMON
      DOUBLE PRECISION DSTAK(12)
!
!  LOCAL SCALARS
      REAL(KIND=WP) ::
     &   DELTA,EXMPT
      INTEGER
     &   I,IPRT,IXM,LDSMIN,M,N,NETA,NPAR,NPRT,NTEST
!
!  LOCAL ARRAYS
      REAL(KIND=WP) ::
     &   EXMTST(5),PAR(10),SCALE(10),STP(10),XM(200,2)
      INTEGER
     &   NETTST(6)
!
!  EXTERNAL FUNCTIONS
!      REAL(KIND=WP) ::
!     +   R1MACH
!      EXTERNAL R1MACH
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL IPRINT,LDSCMP,LSTVEC,MDL4,STPLS1,STPLS2,STPLSC
!
!  INTRINSIC FUNCTIONS
      INTRINSIC LOG10
!
!  COMMON BLOCKS
      COMMON /CSTAK/DSTAK
      COMMON /ERRCHK/IERR
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL DELTA
!        *
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     REAL EXMPT
!        THE PROPORTION OF OBSERVATIONS FOR WHICH THE COMPUTED
!        NUMERICAL DERIVATIVES WRT A GIVEN PARAMETER ARE EXEMPTED
!        FROM MEETING THE DERIVATIVE ACCEPTANCE CRITERIA.
!     REAL EXMTST(5)
!        VARIOUS TEST VALUES FOR EXMPT.
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .EQ. 1, ERRORS WERE DETECTED.
!     INTEGER IPRT
!        THE UNIT NUMBER FOR PRINTED OUTPUT.
!     INTEGER IXM
!        THE FIRST DIMENSION OF THE INDEPENDENT VARIABLE ARRAY XM.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH OF THE ARRAY DSTAK ALLOWED.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     EXTERNAL MDL4
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        PREDICTED VALUES BASED ON THE CURRENT PARAMETER ESTIMATES.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS OF DATA.
!     INTEGER NETA
!        THE NUMBER OF RELIABLE DIGITS IN THE MODEL.
!     INTEGER NETTST(6)
!        VARIOUS TEST VALUES FOR NETA.
!     INTEGER NPAR
!        THE NUMBER OF UNKNOWN PARAMETERS IN THE MODEL.
!     INTEGER NPRT
!        THE INDICATOR VARIABLE USED TO SPECIFY WHETHER OR NOT
!        PRINTED OUTPUT IS TO BE PROVIDED, WHERE IF THE VALUE OF
!        NPRT IS ZERO, NO PRINTED OUTPUT IS GIVEN.
!     INTEGER NTEST
!        THE NUMBER OF THE CURRENT TEST.
!     REAL PAR(10)
!        THE ARRAY IN WHICH THE CURRENT ESTIMATES OF THE UNKNOWN
!        PARAMETERS ARE STORED.
!     REAL SCALE(10)
!        A DUMMY ARRAY, INDICATING USE OF DEFAULT VALUES FOR
!        THE TYPICAL SIZE OF THE PARAMETERS.
!     REAL STP(10)
!        THE SELECTED STEP SIZES FOR EACH PARAMETER.
!     REAL XM(200,2)
!        THE ARRAY IN WHICH ONE ROW OF THE INDEPENDENT VARIABLE ARRAY
!        IS STORED.
!
      CALL IPRINT(IPRT)
!
!     SET PARAMETER VALUES
!
      CALL STPLS1(N, M, IXM, PAR, NPAR, NETA, EXMPT, SCALE, NPRT)
      CALL STPLS2(NPAR, STP)
      CALL LDSCMP(14, 0, 2*(N+NPAR), 0, 0, 0, 'S', 10*N, LDSMIN)
!
      IF (LDSMIN.LE.LDSTAK) GO TO 5
!
      WRITE (IPRT, 1000) LDSMIN
      RETURN
!
    5 CONTINUE
!
!     CREATE INDEPENDENT VARIABLE
!
      DELTA = 0.0625E0
      XM(1,1) = 0.0E0
      DO 10 I=2,N
         XM(I,1) = XM(I-1,1) + DELTA
   10 CONTINUE
!
      NTEST = 0
!
!
!     TEST VARIOUS VALUES OF EXMPT
!
      CALL STPLS1(N, M, IXM, PAR, NPAR, NETA, EXMPT, SCALE, NPRT)
      EXMTST(1) = -1.0E0
      EXMTST(2) = 0.0001E0
      EXMTST(3) = 0.5E0
      EXMTST(4) = 1.0E0
      EXMTST(5) = 1.1E0
!
      DO 20 I=1,5
!
         NTEST = NTEST + 1
         WRITE (IPRT,1090) NTEST
         WRITE (IPRT,1040)
         WRITE (IPRT,1060) NETA, EXMTST(I), SCALE(1), NPRT
         WRITE (IPRT,1010)
         CALL STPLS2(NPAR, STP)
         CALL STPLSC(XM, N, M, IXM, MDL4, PAR, NPAR, LDSTAK, STP, NETA,
     &      EXMTST(I), SCALE, NPRT)
         WRITE (IPRT,1100) NETA, EXMTST(I), SCALE(1), NPRT
         WRITE (IPRT,1050) IERR
         WRITE (IPRT,1080)
         CALL LSTVEC(4, STP)
!
   20 CONTINUE
!
!     TEST VARIOUS VALUES OF NETA
!
      NETTST(1) = -1
      NETTST(2) = 0
      NETTST(3) = 1
      NETTST(4) = 2
!
      NETTST(5) = -LOG10(R1MACH(4))
      NETTST(6) = NETTST(5) + 1
!
      SCALE(1) = 0.0E0
!
      DO 30 I=1,6
!
         NTEST = NTEST + 1
         WRITE (IPRT,1090) NTEST
         WRITE (IPRT,1040)
         WRITE (IPRT,1060) NETTST(I), EXMPT, SCALE(1), NPRT
         WRITE (IPRT,1010)
         CALL STPLS2(NPAR, STP)
         CALL STPLSC(XM, N, M, IXM, MDL4, PAR, NPAR, LDSTAK, STP,
     &      NETTST(I), EXMPT, SCALE, NPRT)
         WRITE (IPRT,1100) NETTST(I), EXMPT, SCALE(1), NPRT
         WRITE (IPRT,1050) IERR
         WRITE (IPRT,1080)
         CALL LSTVEC(4, STP)
!
   30 CONTINUE
!
!     SUPPRESS OUTPUT
!
      CALL STPLS1(N, M, IXM, PAR, NPAR, NETA, EXMPT, SCALE, NPRT)
      NPRT = 0
!
      NTEST = NTEST + 1
      WRITE (IPRT,1090) NTEST
      WRITE (IPRT,1040)
      WRITE (IPRT,1060) NETA, EXMPT, SCALE(1), NPRT
      WRITE (IPRT,1010)
      CALL STPLS2(NPAR, STP)
      CALL STPLSC(XM, N, M, IXM, MDL4, PAR, NPAR, LDSTAK, STP, NETA,
     &   EXMPT, SCALE, NPRT)
      WRITE (IPRT,1100) NETA, EXMPT, SCALE(1), NPRT
      WRITE (IPRT,1050) IERR
      WRITE (IPRT,1080)
      CALL LSTVEC(4, STP)
!
!     LARGE CALCULATION ERROR PROBLEM
!
      CALL STPLS1(N, M, IXM, PAR, NPAR, NETA, EXMPT, SCALE, NPRT)
      PAR(3) = 10.0E0**((NETTST(5)-1)/2)
      SCALE(1) = -1.0E0
!
      NTEST = NTEST + 1
      WRITE (IPRT,1090) NTEST
      WRITE (IPRT,1070)
      WRITE (IPRT,1060) NETA, EXMPT, SCALE(1), NPRT
      WRITE (IPRT,1010)
      CALL STPLS2(NPAR, STP)
      CALL STPLSC(XM, N, M, IXM, MDL4, PAR, NPAR, LDSTAK, STP, NETA,
     &   EXMPT, SCALE, NPRT)
      WRITE (IPRT,1100) NETA, EXMPT, SCALE(1), NPRT
      WRITE (IPRT,1050) IERR
      WRITE (IPRT,1080)
      CALL LSTVEC(4, STP)
!
      EXMPT = 0.11E0
      NPRT = 0
!
      NTEST = NTEST + 1
      WRITE (IPRT,1090) NTEST
      WRITE (IPRT,1070)
      WRITE (IPRT,1060) NETA, EXMPT, SCALE(1), NPRT
      WRITE (IPRT,1010)
      CALL STPLS2(NPAR, STP)
      CALL STPLSC(XM, N, M, IXM, MDL4, PAR, NPAR, LDSTAK, STP, NETA,
     &   EXMPT, SCALE, NPRT)
      WRITE (IPRT,1100) NETA, EXMPT, SCALE(1), NPRT
      WRITE (IPRT,1050) IERR
      WRITE (IPRT,1080)
      CALL LSTVEC(4, STP)
!
      RETURN
!
!     FORMAT STATEMENTS
!
 1000 FORMAT (45H1 *** LDSTAK MUST BE GREATER THAN OR EQUAL TO , I6)
 1010 FORMAT (15H TEST OF STPLSC)
 1040 FORMAT (15H SIMPLE EXAMPLE)
 1050 FORMAT (/29H ***** RETURNED RESULTS *****, 5X, 15H (-1 INDICATES ,
     &   39HVALUE NOT CHANGED BY CALLED SUBROUTINE)//9H IERR IS , I3)
 1060 FORMAT (19H INPUT   -  NETA = , I5, 10H, EXMPT = , G15.8,
     &   13H, SCALE(1) = , G15.8, 9H, NPRT = , I5)
 1070 FORMAT (32H LARGE CALCULATION ERROR PROBLEM)
 1080 FORMAT (//23H RETURNED VALUES OF STP)
 1090 FORMAT (54H1DERIVATIVE STEP SIZE SELECTION SUBROUTINE TEST NUMBER,
     &   I5)
 1100 FORMAT (//19H OUTPUT  -  NETA = , I5, 10H, EXMPT = , G15.8,
     &   13H, SCALE(1) = , G15.8, 9H, NPRT = , I5//)
      END
