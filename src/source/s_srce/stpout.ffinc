!STPOUT
      SUBROUTINE STPOUT(HEAD, N, EXM, NEXMPT, NETA, J, PAR, NPAR, STP,
     &   NFAIL, IFAIL, SCALE, LSCALE, HDR, PAGE, WIDE, ISUBHD, NPRT,
     &   PRTFXD, IFIXD)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE PRINTS THE RESULTS OF THE STEP SIZE SELECTING
!     SUBROUTINES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  APRIL 2, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) ::
     &   EXM
      INTEGER
     &   ISUBHD,J,LSCALE,N,NETA,NEXMPT,NPAR,NPRT
      LOGICAL
     &   HEAD,PAGE,PRTFXD,WIDE
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     &   PAR(NPAR),SCALE(LSCALE),STP(NPAR)
      INTEGER
     &   IFAIL(N),IFIXD(NPAR),NFAIL(NPAR)
!
!  SUBROUTINE ARGUMENTS
       EXTERNAL HDR
!
!  LOCAL SCALARS
      INTEGER
     &   I,IPRT,K,NFLABS,NK,NPERL
      LOGICAL
     &   SAMELN
      CHARACTER
     &   BLANK*1,C*1,F*1,PLUS*1
!
!  LOCAL ARRAYS
      INTEGER
     &   INDEX(25)
      CHARACTER
     &   FIXED(3)*1
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL FIXPRT,IPRINT
!
!  INTRINSIC FUNCTIONS
      INTRINSIC IABS
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     CHARACTER*1 BLANK
!        THE CHARACTER BLANK.
!     CHARACTER*1 C
!        THE CHARACTER FLAG INDICATING HIGH CURVATURE.
!     REAL EXM
!        THE PROPORTION OF OBSERVATIONS ACTUALLY USED FOR WHICH THE
!        COMPUTED NUMERICAL DERIVATIVES WRT A GIVEN PARAMETER ARE
!        EXEMPTED FROM MEETING THE DERIVATIVE ACCEPTANCE CRITERIA.
!     CHARACTER*1 F
!        THE CHARACTER FLAG INDICATING NUMBER OF OBSERVATIONS
!        FAILING SELECTION CRITERIA EXCEEDED EXEMPTED NUMBER.
!     CHARACTER*1 FIXED(3)
!        THE CHARACTERS USED TO LABEL THE PARAMETERS FIXED OR NOT.
!     EXTERNAL HDR
!        THE NAME OF THE ROUTINE WHICH PRODUCES THE HEADING
!     LOGICAL HEAD
!        A FLAG INDICATING WHETHER THE HEADING SHOULD BE PRINTED
!        (TRUE) OR NOT (FALSE).  IF A HEADING IS PRINTED, THE VALUE
!        OF HEAD WILL BE CHANGED TO FALSE.
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IFAIL(N)
!        THE ARRAY OF INDICATOR VARIABLES DESIGNATING WHETHER
!        THE STEP SIZE SELECTED WAS SATISFACTORY FOR A GIVEN
!        OBSERVATION AND PARAMETER.
!     INTEGER INDEX(25)
!        THE ROW NUMBERS OF OBSERVATIONS FOR WHICH THE STEP SIZE
!        SELECTED FAILED.
!     INTEGER IPRT
!        THE UNIT NUMBER FOR PRINTED OUTPUT.
!     INTEGER IFIXD(NPAR)
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.  IF
!        IFIXD(I).NE.0, THEN PAR(I) WILL BE OPTIMIZED.  IF
!        IFIXD(I).EQ.0, THEN PAR(I) WILL BE HELD FIXED.
!     INTEGER J
!        THE INDEX OF THE PARAMETER BEING EXAMINED.
!     INTEGER K
!        AN INDEX VARIABLE.
!     INTEGER LSCALE
!        THE LENGTH OF VECTOR SCALE.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NPAR
!        THE NUMBER OF PARAMETERS IN THE MODEL.
!     INTEGER NETA
!        THE NUMBER OF RELIABLE DIGITS IN THE MODEL.
!     INTEGER NEXMPT
!        THE NUMBER OF OBSERVATIONS FOR WHICH A GIVEN STEP SIZE
!        DOES NOT HAVE TO BE SATISFACTORY AND THE SELECTED STEP
!        SIZE STILL BE CONSIDERED OK.
!     INTEGER NFAIL(NPAR)
!        THE NUMBER OF OBSERVATIONS FOR WHICH THE SELECTED STEP
!        SIZE DOES NOT MEET THE CRITERIA.
!     INTEGER NFLABS
!        THE ABSOLUTE VALUE OF NFAIL.
!     INTEGER NK
!        AN INDEX VARIABLE.
!     INTEGER NPERL
!        THE NUMBER OF OBSERVATIONS TO BE PRINTED PER LINE.
!     INTEGER NPRT
!        THE INDICATOR VARIABLE USED TO SPECIFY WHETHER OR NOT
!        PRINTED OUTPUT IS TO BE PROVIDED, WHERE IF THE VALUE OF
!        NPRT IS ZERO, NO PRINTED OUTPUT IS GIVEN.
!     LOGICAL PAGE
!        THE VARIABLE USED TO INDICATE WHETHER OR NOT THE OUTPUT
!        IS TO BEGIN ON A NEW PAGE.
!     REAL PAR(NPAR)
!        THE ARRAY IN WHICH THE CURRENT ESTIMATES OF THE
!        PARAMETERS ARE STORED.
!     CHARACTER*1 PLUS
!        THE CHARACTER PLUS.
!     LOGICAL PRTFXD
!        THE INDICATOR VALUE USED TO DESIGNATE WHETHER THE
!        OUTPUT IS TO INCLUDE INFORMATION ON WHETHER THE
!        PARAMETER IS FIXED (TRUE) OR NOT (FALSE).
!     LOGICAL SAMELN
!        AN INDICATOR VALUE TO DESIGNATE WHETHER THE LINE IS TO BE
!        PRINTED ON THE SAME LINE AS THE PREVIOUS LINE PRINTED (TRUE)
!        OR NOT (FALSE).
!     REAL SCALE(LSCALE)
!        THE TYPICAL SIZE OF THE PARAMETERS.
!     REAL STP(NPAR)
!        THE SELECTED STEP SIZE.
!     LOGICAL WIDE
!        THE VARIABLE USED TO INDICATE WHETHER THE HEADING SHOULD
!        BE FULL WIDTH (TRUE) OR NOT (FALSE).
!
      DATA BLANK /' '/, PLUS /'+'/
      CALL IPRINT(IPRT)
!
!     INITIALIZE ARRAY FIXED
!
      DO 10 K=1,3
         FIXED(K) = BLANK
   10 CONTINUE
!
      IF (HEAD) THEN
!
!     PRINT HEADING
!
         HEAD = .FALSE.
!
         CALL HDR(PAGE, WIDE, ISUBHD)
         IF (PRTFXD) THEN
            WRITE (IPRT,1000)
         ELSE
            WRITE (IPRT,1010)
         END IF
!
!     PRINT INFORMATION OTHERWISE SUPPRESSED BY PRINT CONTROL
!
         DO 20 I=1,J-1
            IF (PRTFXD) CALL FIXPRT(IFIXD(I), FIXED)
            IF (IFIXD(I).EQ.0) THEN
               F = BLANK
               C = BLANK
               NFLABS = IABS(NFAIL(I))
               IF (NFLABS.GT.NEXMPT) F = PLUS
               IF (NFAIL(I).LT.0) C = PLUS
               IF (SCALE(1).GT.0.0E0) THEN
                  WRITE (IPRT,1020) I, (FIXED(K),K=1,3), PAR(I),
     &                              SCALE(I),
     &                              STP(I), NFLABS, F, C
               ELSE
                  WRITE (IPRT,1040) I, (FIXED(K),K=1,3), PAR(I),
     &                              STP(I), NFLABS, F, C
               END IF
               IF (NFLABS.GT.NEXMPT) WRITE (IPRT,1030)
            ELSE
               WRITE (IPRT,1045) I, (FIXED(K),K=1,3), PAR(I)
            END IF
   20    CONTINUE
      END IF
!
!     PRINT INFORMATION FOR CURRENT PARAMETER
!
      I = J
      IF (PRTFXD) CALL FIXPRT(IFIXD(I), FIXED)
      IF (IFIXD(I).EQ.0) THEN
         F = BLANK
         C = BLANK
         NFLABS = IABS(NFAIL(I))
         IF (NFLABS.GT.NEXMPT) F = PLUS
         IF (NFAIL(I).LT.0) C = PLUS
         IF (SCALE(1).GT.0.0E0) THEN
            WRITE (IPRT,1020) I, (FIXED(K),K=1,3), PAR(I),
     &                        SCALE(I),
     &                        STP(I), NFLABS, F, C
         ELSE
            WRITE (IPRT,1040) I, (FIXED(K),K=1,3), PAR(I),
     &                        STP(I), NFLABS, F, C
         END IF
         IF (NFLABS.GE.1) THEN
            IF ((NPRT.EQ.0) .AND. (NFLABS.LE.NEXMPT)) THEN
               WRITE (IPRT,1030)
            ELSE
!
!     PRINT ROW NUMBERS
!
               NPERL = 7
!
               SAMELN = .TRUE.
               NK = 0
               DO 60 I=1,N
                  IF (IFAIL(I).EQ.0) GO TO 60
                  NK = NK + 1
                  INDEX(NK) = I
                  IF (NK.LT.NPERL) GO TO 60
                  IF (SAMELN) THEN
                     WRITE (IPRT,1050) (INDEX(K),K=1,NK)
                  ELSE
                     WRITE (IPRT,1060) (INDEX(K),K=1,NK)
                  END IF
                  SAMELN = .FALSE.
                  NK = 0
   60          CONTINUE
               IF (SAMELN) THEN
                  WRITE (IPRT,1050) (INDEX(K),K=1,NK)
               ELSE
                  WRITE (IPRT,1060) (INDEX(K),K=1,NK)
               END IF
            END IF
         END IF
      ELSE
         WRITE (IPRT,1045) I, (FIXED(K),K=1,3), PAR(I)
      END IF
      IF (J.LT.NPAR) RETURN
!
!     PRINT FINAL NOTES AND SUMMARY
!
      WRITE (IPRT,1070)
      IF (NPRT.NE.0) GO TO 100
      DO 90 I=1,NPAR
         IF (IFIXD(I).EQ.0) THEN
            IF (IABS(NFAIL(I)).GT.NEXMPT) GO TO 90
            WRITE (IPRT,1080)
            GO TO 100
         END IF
   90 CONTINUE
!
  100 CONTINUE
!
!     PRINT CONTROL VALUES USED.
!
      WRITE (IPRT,1090) NETA
      WRITE (IPRT,1100) EXM
      WRITE (IPRT,1110) NEXMPT
      WRITE (IPRT,1120) N
!
      RETURN
!
!     FORMAT STATEMENTS
!
 1000 FORMAT (//50X, 13HSTEP SIZE FOR, 4X, 25HOBSERVATIONS FAILING STEP,
     &   24H SIZE SELECTION CRITERIA/50X, 13HAPPROXIMATING, 21X, 1H*/7X,
     &   24HPARAMETER STARTING VALUE, 6X, 5HSCALE, 10X, 10HDERIVATIVE,
     &   7X, 5HCOUNT, 5X, 5HNOTES, 5X, 10HROW NUMBER/1X, 5HINDEX, 2X,
     &   5HFIXED, 6X, 5H(PAR), 12X, 7H(SCALE), 11X, 5H(STP), 21X, 3HF C/
     &   )
 1010 FORMAT (//50X, 13HSTEP SIZE FOR, 4X, 25HOBSERVATIONS FAILING STEP,
     &   24H SIZE SELECTION CRITERIA/18X, 9HPARAMETER, 23X, 9HAPPROXIMA,
     &   4HTING, 21X, 1H*/16X, 14HSTARTING VALUE, 7X, 5HSCALE, 10X,
     &   10HDERIVATIVE, 7X, 5HCOUNT, 5X, 5HNOTES, 5X, 13HROW NUMBER(S)/
     &   1X, 5HINDEX, 13X, 5H(PAR), 12X, 7H(SCALE), 11X, 5H(STP), 21X,
     &   3HF C/)
 1020 FORMAT (1X, I3, 5X, 3A1, 3G17.8, 5X, I5, 7X, A1, 1X, A1)
 1030 FORMAT ('+', 89X, 2H**)
 1040 FORMAT (1X, I3, 5X, 3A1, G17.8, 7X, 7HDEFAULT, 3X, G17.8, 5X, I5,
     &   7X, A1, 1X, A1)
 1045 FORMAT (1X, I3, 5X, 3A1, G17.8, 9X, '---', 14X, '---',
     &        14X, '-')
 1050 FORMAT ('+', 86X, 7I5)
 1060 FORMAT (87X, 7I5)
 1070 FORMAT (//1X, 36H*  NOTES.  A PLUS (+) IN THE COLUMNS, 8H HEADED ,
     &   33HF OR C HAS THE FOLLOWING MEANING.//4X, 17HF - NUMBER OF OBS,
     &   27HERVATIONS FAILING STEP SIZE, 27H SELECTION CRITERIA EXCEEDS/
     &   8X, 29HNUMBER OF EXEMPTIONS ALLOWED.//4X, 17HC - HIGH CURVATUR,
     &   30HE IN THE MODEL IS SUSPECTED AS, 13H THE CAUSE OF/8X,
     &   19HALL FAILURES NOTED.)
 1080 FORMAT (//46H ** ROW NUMBERS ARE ONLY LISTED WHEN NUMBER OF,
     &   26H OBSERVATIONS FAILING STEP/4X, 25HSIZE SELECTION CRITERIA E,
     &   27HXCEEDS NUMBER OF EXEMPTIONS, 9H ALLOWED.)
 1090 FORMAT (/43H NUMBER OF RELIABLE DIGITS IN MODEL RESULTS, 25X,
     &   6H(NETA), 1X, I5)
 1100 FORMAT (/41H PROPORTION OF OBSERVATIONS EXEMPTED FROM, 8H SELECTI,
     &   11HON CRITERIA, 7X, 7H(EXMPT), 2X, F6.4)
 1110 FORMAT (/37H NUMBER OF OBSERVATIONS EXEMPTED FROM, 11H SELECTION ,
     &   8HCRITERIA, 19X, I5)
 1120 FORMAT (/23H NUMBER OF OBSERVATIONS, 48X, 3H(N), 1X, I5)
      END
