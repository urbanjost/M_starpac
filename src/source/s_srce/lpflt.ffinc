!LPFLT
      subroutine lpflt (fc, k, hlp)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE COMPUTES THE LOPASS FILTER COEFFICIENTS.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 26, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   fc
     integer&
     &   k
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   hlp(k)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   arg,con,pi,sum
     integer&
     &   i,ihm,ihp,khalf,kmid
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL GETPI
!
!  INTRINSIC FUNCTIONS
      intrinsic sin
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: ARG, CON
!        VARIABLES USED IN THE COMPUTATION OF THE LOW PASS FILTER
!        COEFFICIENTS.
!     REAL(KIND=WP) :: FC
!        THE CUTOFF FREQUENCY USED FOR THE LOW PASS FILTER.
!     REAL(KIND=WP) :: HLP(K)
!        THE ARRAY IN WHICH THE INPUT LOW PASS FILTER COEFFICIENTS
!        ARE STORED.
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IHM, IHP
!        INDEX VARIABLES FOR SYMMETRIC LOCATIONS AROUND THE MIDPOINT
!        OF THE FILTER.
!     INTEGER K
!        THE NUMBER OF TERMS IN THE FILTER.
!     INTEGER KHALF
!        THE VALUE OF THE MIDPOINT OF K MINUS 1.
!     INTEGER KMID
!        THE MIDPOINT OF THE FILTER.
!     REAL(KIND=WP) :: PI
!        THE VALUE OF PI.
!     REAL(KIND=WP) :: SUM
!        A VALUE USED FOR SUMMING.
!
      call getpi(pi)
!
      kmid = (k + 1) / 2
!
      hlp(kmid) = 1.0e0
!
      if (k .eq. 1) return
!
      hlp(kmid) = 2.0e0 * fc
      con = 2.0e0 * pi / k
      sum = hlp(kmid)
!
      khalf = (k - 1) / 2
!
      do 10 i = 1, khalf
         arg = i * con
         ihp = kmid + i
        hlp(ihp) = sin(i * fc * 2.0e0 * pi) * sin(arg) /&
     &      (i * pi * arg)
         ihm = kmid - i
         hlp(ihm) = hlp(ihp)
         sum = sum + hlp(ihm) + hlp(ihp)
   10 continue
      do 20 i = 1, k
         hlp(i) = hlp(i) / sum
   20 continue
      return
      end
