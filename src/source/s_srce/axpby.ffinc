!AXPBY
      subroutine axpby(n,sa,sx,incx,sb,sy,incy,sz,incz)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE IS ADAPTED FROM BLAS SUBROUTINE SAXPY.
!
!     OVERWRITE REAL SZ WITH REAL SA*SX + SB*SY.
!     FOR I = 0 TO N-1, REPLACE  SZ(LZ+I*INCZ) WITH SA*SX(LX+I*INCX) +
!     SY(LY+I*INCY), WHERE LX = 1 IF INCX .GE. 0, ELSE LX = (-INCX)*N,
!     AND LY AND LZ ARE DEFINED IN A SIMILAR WAY USING INCY AND INCZ,
!     RESPECTIVELY.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  APRIL 2, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   sa,sb
     integer&
     &   incx,incy,incz,n
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   sx(*),sy(*),sz(*)
!
!  LOCAL SCALARS
     integer&
     &   i,ix,iy,iz,m,mp1,ns
!
!  INTRINSIC FUNCTIONS
      intrinsic mod
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL SX(N), SY(N), SZ(N)
!
      if(n.le.0) return
     if ((incx .eq. 1) .and. (incy .eq. 1) .and. (incz .eq. 1))&
     &   go to 20
     if ((incx .ge. 2) .and. (incx .eq. incy) .and. (incx .eq. incz))&
     &   go to 60
!
!        CODE FOR NONEQUAL OR NONPOSITIVE INCREMENTS.
!
      ix = 1
      iy = 1
      iz = 1
      if(incx.lt.0)ix = (-n+1)*incx + 1
      if(incy.lt.0)iy = (-n+1)*incy + 1
      if(incz.lt.0)iz = (-n+1)*incz + 1
      do 10 i = 1,n
        sz(iz) = sa*sx(ix) + sb*sy(iy)
        ix = ix + incx
        iy = iy + incy
        iz = iz + incz
   10 continue
      return
!
!        CODE FOR BOTH INCREMENTS EQUAL TO 1
!
!
!        CLEAN-UP LOOP SO REMAINING VECTOR LENGTH IS A MULTIPLE OF 4.
!
   20 m = mod(n,4)
      if( m .eq. 0 ) go to 40
      do 30 i = 1,m
        sz(i) = sa*sx(i) + sb*sy(i)
   30 continue
      if( n .lt. 4 ) return
   40 mp1 = m + 1
      do 50 i = mp1,n,4
        sz(i) = sa*sx(i) + sb*sy(i)
        sz(i+1) = sa*sx(i+1) + sb*sy(i+1)
        sz(i+2) = sa*sx(i+2) + sb*sy(i+2)
        sz(i+3) = sa*sx(i+3) + sb*sy(i+3)
   50 continue
      return
!
!        CODE FOR EQUAL, POSITIVE, NONUNIT INCREMENTS.
!
   60 continue
      ns = n*incx
      do 70 i=1,ns,incx
        sz(i) = sa*sx(i) + sb*sy(i)
   70 continue
      return
      end
