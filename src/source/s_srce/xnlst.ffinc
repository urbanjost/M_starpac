!XNLST
      subroutine xnlst(ldstak,typ)
      real(kind=wp),intent(in) :: typ
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     DEMONSTRATE THE USER CALLABLE ROUTINES IN THE NONLINEAR
!     LEAST SQUARES FAMILY.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 21, 1983
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   ldstak
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      double precision dstak(12)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   delta,rsd,stopp,stopss
     integer&
    &   i,idrvck,iprt,ivaprx,ivcv,ixm1,ixm2,ixm3,ldsa1,ldsmin,&
    &   ldsn1b,m1,m2,m3,mit,n1,n2,n3,nnzw,npar1,npar2,npar3,npare,&
     &   nprt,ntest
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
    &   par1(10),par2(10),par3(10),pv(100),res(100),scale(10),&
    &   sdpv(100),sdres(100),stop(8),stp(10),vcv(6,6),wt(100),&
     &   xm1(10,2),xm2(10,3),xm3(101,5),y1(10),y2(10),y3(100)
     integer&
     &   ifixed(10),ivctst(9)
!
!  EXTERNAL FUNCTIONS
!     REAL(KIND=WP) :: RMDCON
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL DRV1A,DRV2,DRV3,FITXSP,IPRINT,LDSCMP,MDL1,MDL2,MDL3,NLSC,
!     +   NLSDC,NLSDS,NLSS,NLSWC,NLSWDC,NLSWDS,NLSWS,NLSX1,NLSX2,
!     +   SETRV
!
!  INTRINSIC FUNCTIONS
      intrinsic max
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: DELTA
!        THE MAXIMUM CHANGE ALLOWED IN THE MODEL PARAMETERS AT THE
!        FIRST ITERATION.
!     EXTERNAL DRV1A, DRV2, DRV3
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        DERIVATIVE (JACOBIAN) MATRIX OF THE MODEL.
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER I
!        AN INDEX VALUE.
!     INTEGER IDRVCK
!        THE VARIABLE USED TO INDICATE WHETHER THE DERIVATIVES ARE
!        TO BE CHECKED (IDRVCK = 1) OR NOT (IDRVCK = 0).
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .GE. 1, ERRORS WERE DETECTED.
!     INTEGER IFIXED(10)
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.  IF
!        IFIXED(I).NE.0, THEN PAR(I) WILL BE OPTIMIZED.  IF
!        IFIXED(I).EQ.0, THEN PAR(I) WILL BE HELD FIXED.
!        IFIXED(I).LT.0, THEN ALL PAR(I),I=1,NPAR, WILL BE OPTIMIZED..
!     INTEGER IPRT
!        THE UNIT NUMBER FOR PRINTED OUTPUT.
!     INTEGER IVCTST(9)
!        VARIANCE-COVARIANCE CODE TEST VALUES.
!     INTEGER IVAPRX
!        AN INDICATOR VALUE USED TO DESIGNATE WHICH OPTION IS TO BE USED
!        TO COMPUTE THE VARIANCE COVARIANCE MATRIX (VCV), WHERE
!        IVAPRX LE 0 INDICATES THE THE DEFAULT OPTION WILL BE USED
!        IVAPRX EQ 1 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                          *INVERSE(HESSIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 2 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 3 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 4 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                          *INVERSE(HESSIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVAPRX EQ 5 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVAPRX EQ 6 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVAPRX GE 7 INDICATES THE DEFAULT OPTION WILL BE USED
!     INTEGER IVCV
!        THE FIRST DIMENSION OF THE VARIANCE COVARIANCE MATRIX VCV.
!     INTEGER IXM1, IXM2, IXM3
!        THE FIRST DIMENSION OF THE INDEPENDENT VARIABLE ARRAY.
!     INTEGER LDSA1, LDSN1B
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK
!        FOR THE ROUTINES WITH ANALYTIC DERIVATIVES AND
!        NUMERICAL DERIVATIVES, RESPECTIVELY.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     INTEGER M1, M2, M3
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     INTEGER MIT
!        THE MAXIMUM NUMBER OF ITERATIONS ALLOWED.
!     EXTERNAL MDL1, MDL2, MDL3
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        PREDICTED VALUES BASED ON THE CURRENT PARAMETER ESTIMATE.
!     INTEGER N1, N2, N3
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NPARE
!        THE NUMBER OF PARAMETERS ESTIMATED BY THE ROUTINE.
!     INTEGER NPAR1, NPAR2, NPAR3
!        THE NUMBER OF UNKNOWN PARAMETERS IN THE MODEL.
!     INTEGER NNZW
!        THE NUMBER OF NON ZERO WEIGHTS.
!     INTEGER NPRT
!        THE PARAMETER USED TO INDICATE HOW MUCH PRINTED OUTPUT IS
!        TO BE PROVIDED.
!     INTEGER NTEST
!        THE NUMBER OF THE CURRENT TEST.
!     REAL(KIND=WP) :: PAR1(10), PAR2(10), PAR3(10)
!        THE ARRAY IN WHICH THE CURRENT ESTIMATES OF THE UNKNOWN
!        PARAMETERS ARE STORED.
!     REAL(KIND=WP) :: PV(100)
!        THE STARTING LOCATION IN RSTAK/DSTAK OF
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!     REAL(KIND=WP) :: RES(100)
!        THE RESIDUALS FROM THE FIT.
!     REAL(KIND=WP) :: RSD
!        THE VALUE OF THE RESIDUAL STANDARD DEVIATION AT THE SOLUTION.
!     REAL(KIND=WP) :: SCALE(10)
!        A VALUE TO INDICATE USE OF THE DEFAULT VALUES OF
!        THE TYPICAL SIZE OF THE UNKNOWN PARAMETERS.
!     REAL(KIND=WP) :: SDPV(100)
!        THE STARTING LOCATION IN RSTAK/DSTAK OF
!        THE STANDARD DEVIATION OF THE PREDICTED VALUE.
!     REAL(KIND=WP) :: SDRES(100)
!        THE STARTING LOCATION IN RSTAK/DSTAK OF THE
!        THE STANDARD DEVIATIONS OF THE RESIDUALS.
!     REAL(KIND=WP) :: STOP(8)
!        STOPPING CRITERIA TEST VARIABLE.
!     REAL(KIND=WP) :: STOPP
!        THE STOPPING CRITERION FOR THE TEST BASED ON THE MAXIMUM SCALED
!        RELATIVE CHANGE IN THE ELEMENTS OF THE MODEL PARAMETER VECTOR
!     REAL(KIND=WP) :: STOPSS
!        THE STOPPING CRITERION FOR THE TEST BASED ON THE RATIO OF THE
!        PREDICTED DECREASE IN THE RESIDUAL SUM OF SQUARES (COMPUTED
!        BY STARPAC) TO THE CURRENT RESIDUAL SUM OF SQUARES ESTIMATE.
!     REAL(KIND=WP) :: STP(10)
!        THE RCSTEP SIZE ARRAY.
!     REAL(KIND=WP) :: VCV(6,6)
!        THE COVARIANCE MATRIX.
!     REAL(KIND=WP) :: WT(100)
!        THE USER SUPPLIED WEIGHTS.
!     REAL(KIND=WP) :: XM1(10,2), XM2(10,3), XM3(101,5)
!        THE ARRAY IN WHICH ONE ROW OF THE INDEPENDENT VARIABLE ARRAY
!        IS STORED.
!     REAL(KIND=WP) :: Y1(10), Y2(10), Y3(100)
!        THE ARRAY OF THE DEPENDENT VARIABLE.
!
!     DEFINE CONSTANTS
!
     data y1(1), y1(2), y1(3), y1(4), y1(5), y1(6)&
     &   /2.138_wp, 3.421_wp, 3.597_wp, 4.340_wp, 4.882_wp, 5.660_wp/
!
     data xm1(1,1), xm1(2,1), xm1(3,1), xm1(4,1), xm1(5,1), xm1(6,1)&
     &   /1.309_wp, 1.471_wp, 1.490_wp, 1.565_wp, 1.611_wp, 1.680_wp/
!
      data n2 /10/, m2 /3/, ixm2 /10/, npar2 /3/
!
      data n3 /50/, m3 /5/, ixm3 /101/, npar3 /5/
!
      call iprint(iprt)
!
     call nlsx2(n1, m1, ixm1, npar1, ifixed, stp, idrvck, mit, stopss,&
     &   stopp, scale, delta, ivaprx, nprt, ivcv)
!
      call setrv(wt, n3, 1.0e0)
!
     call ldscmp(6, 0, 60+2*npar1, 0, 0, 0,&
     &   'S', 94+n1*(3+npar1)+npar1*(3*npar1+35)/2, ldsa1)
     call ldscmp(14, 0, 60+2*npar1, 0, 0, 0,&
     &   'S', 94+n1*(3+npar1)+npar1*(3*npar1+37)/2, ldsn1b)
     call ldscmp(14, 0, max(2*(n3+npar3),60+2*npar3), 0, 0, 0,&
     &   'S', max(10*n3,94+n3*(3+npar3)+npar3*(3*npar3+37)/2), ldsmin)
!
      if (ldsmin.le.ldstak) go to 5
!
      write (iprt, 1000) ldsmin
      return
!
    5 continue
!
      do 10 i=1,n2
         y2(i) = 0.0e0
         xm2(i,1) = i
         xm2(i,2) = i + 0.125e0
         xm2(i,3) = i + 0.25e0
   10 continue
!
      do 20 i=1,n3
         xm3(i,1) = 1.0e0
         xm3(i,2) = i
         xm3(i,3) = xm3(i,2)*xm3(i,2)
         xm3(i,4) = xm3(i,3)*xm3(i,2)
         xm3(i,5) = xm3(i,4)*xm3(i,2)
         y3(i) = xm3(i,1) + xm3(i,2) + xm3(i,3) + xm3(i,4) + xm3(i,5)
   20 continue
!
      ntest = 0
!
!
!
!     **TEST CHECKING OF CONTROL CRITERIA**
!
      write (iprt,1240)
!
      stop(1) = rmdcon(3,typ=0.0_wp)
      stop(2) = 0.1e0
      stop(3) = 0.9e0*rmdcon(3,typ=0.0_wp)
      stop(4) = 0.11e0
      stop(5) = 0.0e0
      stop(6) = 1.0e0
      stop(7) = -1.0e0
      stop(8) = 1.1e0
!
      nprt = 11000
      mit = 0
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1250) mit
     call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
      write (iprt,1100)
     write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp, scale(1),&
     &   delta, ivaprx, nprt
     call nlswdc(y1, wt, xm1, n1, m1, ixm1, mdl1, drv1a, par1, npar1,&
    &   res, ldstak, ifixed, idrvck, mit, stopss, stopp, scale, delta,&
     &   ivaprx, nprt)
     write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp, scale(1),&
     &   delta, ivaprx, nprt
      write (iprt,1120) ierr
!
      mit = 1
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1250) mit
     call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
      write (iprt,1100)
     write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp, scale(1),&
     &   delta, ivaprx, nprt
     call nlswdc(y1, wt, xm1, n1, m1, ixm1, mdl1, drv1a, par1, npar1,&
    &   res, ldstak, ifixed, idrvck, mit, stopss, stopp, scale, delta,&
     &   ivaprx, nprt)
     write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp, scale(1),&
     &   delta, ivaprx, nprt
      write (iprt,1120) ierr
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1250) mit
     call nlsx1(2, par2, npar2, pv, sdpv, res, sdres, vcv, n2, ivcv,&
     &   nnzw, npare, rsd)
      write (iprt,1050)
     write (iprt,1340) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsws(y2, wt, xm2, n2, m2, ixm2, mdl2, par2, npar2, res,&
    &   ldstak, ifixed, stp, mit, stopss, stopp, scale, delta, ivaprx,&
     &   nprt, nnzw, npare, rsd, pv, sdpv, sdres, vcv, ivcv)
     write (iprt,1350) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par2, pv, sdpv, res, sdres, vcv, n2, npar2, ivcv,&
     &   nnzw, npare, rsd)
!
     call nlsx2(n1, m1, ixm1, npar1, ifixed, stp, idrvck, mit, stopss,&
     &   stopp, scale, delta, ivaprx, nprt, ivcv)
      do 40 i=1,4
         ntest = ntest + 1
         write (iprt,1330) ntest
         write (iprt,1260) stop(i)
        call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1,&
     &      ivcv, nnzw, npare, rsd)
         write (iprt,1100)
        write (iprt,1360) ifixed(1), idrvck, mit, stop(i), stopp,&
     &      scale(1), delta, ivaprx, nprt
        call nlswdc(y1, wt, xm1, n1, m1, ixm1, mdl1, drv1a, par1,&
    &      npar1, res, ldstak, ifixed, idrvck, mit, stop(i), stopp,&
     &      scale, delta, ivaprx, nprt)
        write (iprt,1370) ifixed(1), idrvck, mit, stop(i), stopp,&
     &      scale(1), delta, ivaprx, nprt
         write (iprt,1120) ierr
   40 continue
      do 50 i=5,8
         ntest = ntest + 1
         write (iprt,1330) ntest
         write (iprt,1270) stop(i)
        call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1,&
     &      ivcv, nnzw, npare, rsd)
         write (iprt,1100)
        write (iprt,1360) ifixed(1), idrvck, mit, stopss, stop(i),&
     &      scale(1), delta, ivaprx, nprt
        call nlswdc(y1, wt, xm1, n1, m1, ixm1, mdl1, drv1a, par1,&
    &      npar1, res, ldstak, ifixed, idrvck, mit, stopss, stop(i),&
     &      scale, delta, ivaprx, nprt)
        write (iprt,1370) ifixed(1), idrvck, mit, stopss, stop(i),&
     &      scale(1), delta, ivaprx, nprt
         write (iprt,1120) ierr
   50 continue
      nprt = 100000
      do 60 i=1,6
         ntest = ntest + 1
         write (iprt,1330) ntest
         write (iprt,1280) nprt
        call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1,&
     &      ivcv, nnzw, npare, rsd)
         write (iprt,1110)
        write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &      scale(1), delta, ivaprx, nprt
        call nlswds(y1, wt, xm1, n1, m1, ixm1, mdl1, drv1a, par1,&
    &      npar1, res, ldsa1, ifixed, idrvck, mit, stopss, stopp,&
    &      scale, delta, ivaprx, nprt, nnzw, npare, rsd, pv, sdpv,&
     &      sdres, vcv, ivcv)
        write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &      scale(1), delta, ivaprx, nprt
         write (iprt,1120) ierr
        call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &      nnzw, npare, rsd)
         nprt = nprt/10
   60 continue
      nprt = 11000
      do 70 i=1,2
         ntest = ntest + 1
         write (iprt,1330) ntest
         write (iprt,1280) nprt
        call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1,&
     &      ivcv, nnzw, npare, rsd)
         write (iprt,1110)
        write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &      scale(1), delta, ivaprx, nprt
        call nlswds(y1, wt, xm1, n1, m1, ixm1, mdl1, drv1a, par1,&
    &      npar1, res, ldsa1, ifixed, idrvck, mit, stopss, stopp,&
    &      scale, delta, ivaprx, nprt, nnzw, npare, rsd, pv, sdpv,&
     &      sdres, vcv, ivcv)
        write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &      scale(1), delta, ivaprx, nprt
         write (iprt,1120) ierr
        call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &      nnzw, npare, rsd)
         nprt = 11001
   70 continue
!
      nprt = 0
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1280) nprt
!
      write (iprt,1010)
     write (iprt,1340) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
     call nlsc(y1, xm1, n1, m1, ixm1, mdl1, par1, npar1, res, ldsn1b,&
     &   ifixed, stp, mit, stopss, stopp, scale, delta, ivaprx, nprt)
     write (iprt,1350) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &   nnzw, npare, rsd)
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1280) nprt
      write (iprt,1020)
     write (iprt,1340) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
     call nlss(y1, xm1, n1, m1, ixm1, mdl1, par1, npar1, res, ldsn1b,&
    &   ifixed, stp, mit, stopss, stopp, scale, delta, ivaprx, nprt,&
     &   npare, rsd, pv, sdpv, sdres, vcv, ivcv)
     write (iprt,1350) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &   nnzw, npare, rsd)
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1280) nprt
      write (iprt,1040)
     write (iprt,1340) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
     call nlswc(y1, wt, xm1, n1, m1, ixm1, mdl1, par1, npar1, res,&
    &   ldsn1b, ifixed, stp, mit, stopss, stopp, scale, delta, ivaprx,&
     &   nprt)
     write (iprt,1350) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &   nnzw, npare, rsd)
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1280) nprt
      write (iprt,1050)
     write (iprt,1340) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
     call nlsws(y1, wt, xm1, n1, m1, ixm1, mdl1, par1, npar1, res,&
    &   ldsn1b, ifixed, stp, mit, stopss, stopp, scale, delta, ivaprx,&
     &   nprt, nnzw, npare, rsd, pv, sdpv, sdres, vcv, ivcv)
     write (iprt,1350) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &   nnzw, npare, rsd)
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1280) nprt
      write (iprt,1070)
     write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
     call nlsdc(y1, xm1, n1, m1, ixm1, mdl1, drv1a, par1, npar1, res,&
    &   ldsa1, ifixed, idrvck, mit, stopss, stopp, scale, delta,&
     &   ivaprx, nprt)
     write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &   nnzw, npare, rsd)
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1280) nprt
      write (iprt,1080)
     write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
     call nlsds(y1, xm1, n1, m1, ixm1, mdl1, drv1a, par1, npar1, res,&
    &   ldsa1, ifixed, idrvck, mit, stopss, stopp, scale, delta,&
     &   ivaprx, nprt, npare, rsd, pv, sdpv, sdres, vcv, ivcv)
     write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &   nnzw, npare, rsd)
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1280) nprt
      write (iprt,1100)
     write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
     call nlswdc(y1, wt, xm1, n1, m1, ixm1, mdl1, drv1a, par1, npar1,&
    &   res, ldsa1, ifixed, idrvck, mit, stopss, stopp, scale, delta,&
     &   ivaprx, nprt)
     write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &   nnzw, npare, rsd)
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1280) nprt
      write (iprt,1110)
     write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
     call nlswds(y1, wt, xm1, n1, m1, ixm1, mdl1, drv1a, par1, npar1,&
    &   res, ldsa1, ifixed, idrvck, mit, stopss, stopp, scale, delta,&
     &   ivaprx, nprt, nnzw, npare, rsd, pv, sdpv, sdres, vcv, ivcv)
     write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &   nnzw, npare, rsd)
!
      nprt = -1
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1280) nprt
      write (iprt,1110)
     write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
     call nlswds(y1, wt, xm1, n1, m1, ixm1, mdl1, drv1a, par1, npar1,&
    &   res, ldsa1, ifixed, idrvck, mit, stopss, stopp, scale, delta,&
     &   ivaprx, nprt, nnzw, npare, rsd, pv, sdpv, sdres, vcv, ivcv)
     write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &   nnzw, npare, rsd)
!
!
!     **TEST PARAMETER HANDLING**
!
      write (iprt,1190)
!
!     ALL ZERO
!
     call nlsx2(n1, m1, ixm1, npar1, ifixed, stp, idrvck, mit, stopss,&
     &   stopp, scale, delta, ivaprx, nprt, ivcv)
      stp(1) = -1.0e0
      scale(1) = -1.0e0
      delta = -1.0e0
      nprt = 11000
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1200)
     call nlsx1(4, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
      write (iprt,1010)
     write (iprt,1340) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsc(y1, xm1, n1, m1, ixm1, mdl1, par1, npar1, res, ldstak,&
     &   ifixed, stp, mit, stopss, stopp, scale, delta, ivaprx, nprt)
     write (iprt,1350) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &   nnzw, npare, rsd)
!
     call nlsx1(4, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1200)
      write (iprt,1100)
     write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlswdc(y1, wt, xm1, n1, m1, ixm1, mdl1, drv1a, par1, npar1,&
    &   res, ldstak, ifixed, idrvck, mit, stopss, stopp, scale, delta,&
     &   ivaprx, nprt)
     write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &   nnzw, npare, rsd)
!
!
!
!     **TEST WITH CONSTANT Y**
!
!     CONSTANT Y=0
!
      nprt = 21222
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1210)
     call nlsx1(2, par2, npar2, pv, sdpv, res, sdres, vcv, n2, ivcv,&
     &   nnzw, npare, rsd)
      write (iprt,1050)
     write (iprt,1340) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsws(y2, wt, xm2, n2, m2, ixm2, mdl2, par2, npar2, res,&
    &   ldstak, ifixed, stp, mit, stopss, stopp, scale, delta, ivaprx,&
     &   nprt, nnzw, npare, rsd, pv, sdpv, sdres, vcv, ivcv)
     write (iprt,1350) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par2, pv, sdpv, res, sdres, vcv, n2, npar2, ivcv,&
     &   nnzw, npare, rsd)
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1210)
      write (iprt,1110)
     write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsx1(2, par2, npar2, pv, sdpv, res, sdres, vcv, n2, ivcv,&
     &   nnzw, npare, rsd)
     call nlswds(y2, wt, xm2, n2, m2, ixm2, mdl2, drv2, par2, npar2,&
    &   res, ldstak, ifixed, idrvck, mit, stopss, stopp, scale, delta,&
     &   ivaprx, nprt, nnzw, npare, rsd, pv, sdpv, sdres, vcv, ivcv)
     write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par2, pv, sdpv, res, sdres, vcv, n2, npar2, ivcv,&
     &   nnzw, npare, rsd)
!
!     **TEST WITH LINEAR MODEL**
!
      nprt = 11212
      ivaprx = 1
!
      do 80 i=1,npar3
         ifixed(i) = 0
   80 continue
      ifixed(1) = 1
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1220)
      write (iprt,1010)
     write (iprt,1340) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsx1(3, par3, npar3, pv, sdpv, res, sdres, vcv, n3, ivcv,&
     &   nnzw, npare, rsd)
     call nlsc(y3, xm3, n3, m3, ixm3, mdl3, par3, npar3, res, ldstak,&
     &   ifixed, stp, mit, stopss, stopp, scale, delta, ivaprx, nprt)
     write (iprt,1350) ifixed(1), stp(1), mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1220)
      nprt = 11111
      write (iprt,1070)
     write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsx1(3, par3, npar3, pv, sdpv, res, sdres, vcv, n3, ivcv,&
     &   nnzw, npare, rsd)
     call nlsdc(y3, xm3, n3, m3, ixm3, mdl3, drv3, par3, npar3, res,&
    &   ldstak, ifixed, idrvck, mit, stopss, stopp, scale, delta,&
     &   ivaprx, nprt)
     write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
!
!     **TEST XM**
!
!
!     FIRST COLUMN ZERO
!
      call setrv(y2, n2, 2.0e0)
      call setrv(xm2(1,1), n2, 0.0e0)
!
      nprt = 11000
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1310)
     call nlsx1(2, par2, npar2, pv, sdpv, res, sdres, vcv, n2, ivcv,&
     &   nnzw, npare, rsd)
      write (iprt,1110)
     write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlswds(y2, wt, xm2, n2, m2, ixm2, mdl2, drv2, par2, npar2,&
    &   res, ldstak, ifixed, idrvck, mit, stopss, stopp, scale,&
    &   delta, ivaprx, nprt, nnzw, npare, rsd, pv, sdpv, sdres, vcv,&
     &   ivcv)
     write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par2, pv, sdpv, res, sdres, vcv, n2, npar2, ivcv,&
     &   nnzw, npare, rsd)
!
!     2 COLUMNS ZERO
!
      call setrv(xm2(1,2), n2, 0.0e0)
!
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1300)
      write (iprt,1110)
     write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlsx1(2, par2, npar2, pv, sdpv, res, sdres, vcv, n2, ivcv,&
     &   nnzw, npare, rsd)
     call nlswds(y2, wt, xm2, n2, m2, ixm2, mdl2, drv2, par2, npar2,&
    &   res, ldstak, ifixed, idrvck, mit, stopss, stopp, scale, delta,&
     &   ivaprx, nprt, nnzw, npare, rsd, pv, sdpv, sdres, vcv, ivcv)
     write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par2, pv, sdpv, res, sdres, vcv, n2, npar2, ivcv,&
     &   nnzw, npare, rsd)
!
!     **TEST VARIANCE-COVARIANCE MATRIX COMPUTATIONS**
!
!
      ivctst(1) = -1
      ivctst(2) = 0
      ivctst(3) = 1
      ivctst(4) = 2
      ivctst(5) = 3
      ivctst(6) = 4
      ivctst(7) = 5
      ivctst(8) = 6
      ivctst(9) = 7
      nprt = 2
      do 90 i=1,9
         ntest = ntest + 1
         write (iprt,1330) ntest
         write (iprt,1380)
        call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1,&
     &      ivcv, nnzw, npare, rsd)
         write (iprt,1110)
        write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &      scale(1), delta, ivctst(i), nprt
        call nlswds(y1, wt, xm1, n1, m1, ixm1, mdl1, drv1a, par1,&
    &      npar1, res, ldstak, ifixed, idrvck, mit, stopss, stopp,&
    &      scale, delta, ivctst(i), nprt, nnzw, npare, rsd, pv, sdpv,&
     &      sdres, vcv, ivcv)
        write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &      scale(1), delta, ivctst(i), nprt
         write (iprt,1120) ierr
        call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &      nnzw, npare, rsd)
   90 continue
!
!     **TEST WITH 2 ZERO WEIGHTS**
!
      nprt = 22222
      ntest = ntest + 1
      write (iprt,1330) ntest
      write (iprt,1290)
     call nlsx1(1, par1, npar1, pv, sdpv, res, sdres, vcv, n1, ivcv,&
     &   nnzw, npare, rsd)
      wt(3) = 0.0e0
      wt(5) = 0.0e0
      write (iprt,1110)
     write (iprt,1360) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
     call nlswds(y1, wt, xm1, n1, m1, ixm1, mdl1, drv1a, par1, npar1,&
    &   res, ldstak, ifixed, idrvck, mit, stopss, stopp, scale, delta,&
     &   ivaprx, nprt, nnzw, npare, rsd, pv, sdpv, sdres, vcv, ivcv)
     write (iprt,1370) ifixed(1), idrvck, mit, stopss, stopp,&
     &   scale(1), delta, ivaprx, nprt
      write (iprt,1120) ierr
     call fitxsp(par1, pv, sdpv, res, sdres, vcv, n1, npar1, ivcv,&
     &   nnzw, npare, rsd)
!
!
      return
!
!     FORMAT STATEMENTS
!
 1000 format (45h1 *** ldstak must be greater than or equal to , i6)
 1010 format (15h test of nlsc  )
 1020 format (15h test of nlss  )
 1040 format (15h test of nlswc )
 1050 format (15h test of nlsws )
 1070 format (15h test of nlsdc )
 1080 format (15h test of nlsds )
 1100 format (15h test of nlswdc)
 1110 format (15h test of nlswds)
1120 format (/29h ***** returned results *****, 5x, 15h (-1 indicates ,&
     &   39hvalue not changed by called subroutine)//9h ierr is , i3)
 1190 format (28h **test parameter handling**)
 1200 format (20h all parameters zero)
 1210 format (30h **test with constant zero y**)
 1220 format (22h **test linear model**)
 1240 format (26h **test control criteria**)
 1250 format (34h --maximum number of iterations = , i5)
 1260 format (12h --stopss = , g14.8)
 1270 format (11h --stopp = , g14.8)
 1280 format (10h --nprt = , i6)
 1290 format (29h **test with 2 zero weights**)
 1300 format (19h **2 columns zero**)
 1310 format (18h **1 column zero**)
1330 format (54h1nonlinear least squares estimation subroutine test nu,&
     &   4hmber, i5/)
1340 format (24h input   -  ifixed(1) = , i6, 9x, 11h, stp(1) = ,&
    &   g15.8, 11h,    mit = ,i5, 11h, stopss = , g15.8, 10h, stopp = ,&
    &   g15.8/13x, 11hscale(1) = , g15.8, 11h,  delta = , g15.8,&
     &   11h, ivaprx = , i5, 11h,   nprt = , i6)
1350 format (//24h output  -  ifixed(1) = , i6, 9x, 11h, stp(1) = ,&
    &   g15.8, 11h,    mit = ,i5, 11h, stopss = , g15.8, 10h, stopp = ,&
    &   g15.8/13x, 11hscale(1) = , g15.8, 11h,  delta = , g15.8,&
     &   11h, ivaprx = , i5, 11h,   nprt = , i6//)
1360 format (24h input   -  ifixed(1) = , i6, 9x, 11h, idrvck = ,&
    &   i5, 10x, 11h,    mit = ,i5, 11h, stopss = , g15.8,&
    &   10h, stopp = , g15.8/&
    &   13x, 11hscale(1) = , g15.8, 11h,  delta = , g15.8,&
     &   11h, ivaprx = , i5, 11h,   nprt = , i6)
1370 format (//24h output  -  ifixed(1) = , i6, 9x, 11h, idrvck = ,&
    &   i5, 10x, 11h,    mit = ,i5, 11h, stopss = , g15.8,&
    &   10h, stopp = , g15.8/&
    &   13x, 11hscale(1) = , g15.8, 11h,  delta = , g15.8,&
     &   11h, ivaprx = , i5, 11h,   nprt = , i6//)
1380 format (54h test handling of variance-covariance computation code,&
     &   'S')
      end
