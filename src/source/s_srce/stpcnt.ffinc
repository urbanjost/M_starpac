!STPCNT
      SUBROUTINE STPCNT(XM, N, M, IXM, MDL, PAR, NPAR, STP,
     &   EXMPT, NETA, SCALE, LSCALE, NPRT, HDR, PAGE, WIDE, ISUBHD,
     &   HLFRPT, PRTFXD, IFIXED, LIFIXD)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE CONTROLS THE STEP SIZE SELECTION PROCESS.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  APRIL 2, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) ::
     &   EXMPT
      INTEGER
     &   ISUBHD,IXM,LIFIXD,LSCALE,M,N,NETA,NPAR,NPRT
      LOGICAL
     &   HLFRPT,PAGE,PRTFXD,WIDE
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     &   PAR(NPAR),SCALE(LSCALE),STP(NPAR),XM(IXM,M)
      INTEGER
     &   IFIXED(LIFIXD)
!
!  SUBROUTINE ARGUMENTS
      EXTERNAL HDR,MDL
!
!  SCALARS IN COMMON
      REAL(KIND=WP) ::
     &   Q
      INTEGER
     &   IERR
!
!  ARRAYS IN COMMON
      DOUBLE PRECISION DSTAK(12)
!
!  LOCAL SCALARS
      REAL(KIND=WP) ::
     &   ETA,EXM,FPLRS,SCL,TAU
      INTEGER
     &   CD,FD,FDLAST,FDSAVE,IFAILJ,IFIXD,IFP,ITEMP,J,MXFAIL,NALL0,
     &   NDD,NDGT1,NEXMPT,NFAIL,NFAILJ,PARTMP,PV,PVMCD,PVNEW,PVPCD,
     &   PVSTP,PVTEMP
      LOGICAL
     &   HEAD
!
!  LOCAL ARRAYS
      REAL(KIND=WP) ::
     &   RSTAK(12)
      INTEGER
     &   ISTAK(12)
!
!  EXTERNAL FUNCTIONS
      REAL(KIND=WP) ::
     &   R1MACH
      INTEGER
     &   STKST
      EXTERNAL R1MACH,STKST
!
!  EXTERNAL SUBROUTINES
      EXTERNAL CPYVII,ETAMDL,SETIV,STKCLR,STPMN,STPOUT
!
!  INTRINSIC FUNCTIONS
      INTRINSIC ABS,INT,LOG10,MAX,MIN
!
!  COMMON BLOCKS
      COMMON /CSTAK/DSTAK
      COMMON /ERRCHK/IERR
      COMMON /NOTOPT/Q
!
!  EQUIVALENCES
      EQUIVALENCE (DSTAK(1),ISTAK(1))
      EQUIVALENCE (DSTAK(1),RSTAK(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     INTEGER CD
!        THE STARTING LOCATION IN THE WORK AREA OF
!        THE CENTRAL DIFFERENCE QUOTIENT APPROXIMATION TO THE
!        DERIVATIVE OF THE MODEL WITH RESPECT TO THE JTH PARAMETER.
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     REAL ETA
!        THE RELATIVE NOISE IN THE MODEL
!     REAL EXM
!        THE PROPORTION OF OBSERVATIONS ACTUALLY USED FOR WHICH THE
!        COMPUTED NUMERICAL DERIVATIVES WRT A GIVEN PARAMETER ARE
!        EXEMPTED FROM MEETING THE DERIVATIVE ACCEPTANCE CRITERIA.
!     REAL EXMPT
!        THE PROPORTION OF OBSERVATIONS FOR WHICH THE COMPUTED
!        NUMERICAL DRVATIVES WRT A GIVEN PARAMETER ARE EXEMPTED
!        FROM MEETING THE DERIVATIVE ACCEPTANCE CRITERIA.
!     INTEGER FD
!        THE STARTING LOCATION IN THE WORK AREA OF
!        THE FORWARD DIFFERENCE QUOTIENT APPROXIMATION TO THE
!        DERIVATIVE OF THE MODEL WITH RESPECT TO THE JTH PARAMETER.
!     INTEGER FDLAST
!        THE STARTING LOCATION IN THE WORK AREA OF
!        THE FORWARD DIFFERENCE QUOTIENT APPROXIMATION TO THE
!        DERIVATIVE OF THE MODEL WITH RESPECT TO THE JTH PARAMETER
!        FOR THE LAST STEP SIZE TRIED.
!     INTEGER FDSAVE
!        THE STARTING LOCATION IN THE WORK AREA OF
!        THE FORWARD DIFFERENCE QUOTIENT APPROXIMATION TO THE
!        DERIVATIVE OF THE MODEL WITH RESPECT TO THE JTH PARAMETER
!        FOR THE BEST STEP SIZE TRIED SO FAR.
!     REAL FPLRS
!        THE FLOATING POINT LARGEST RELATIVE SPACING.
!     EXTERNAL HDR
!        THE NAME OF THE ROUTINE WHICH PRODUCES THE HEADING
!     LOGICAL HEAD
!        A FLAG INDICATING WHETHER THE HEADING SHOULD BE PRINTED
!        (TRUE) OR NOT (FALSE).  IF A HEADING IS PRINTED, THE VALUE
!        OF HEAD WILL BE CHANGED TO FALSE.
!     LOGICAL HLFRPT
!        THE VARIABLE WHICH INDICATES WHETHER THE STEP SIZE SELECTION
!        ROUTINE HAS ALREADY PRINTED PART OF THE INITIAL SUMMARY (TRUE)
!        OR NOT (FALSE).
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER IFAILJ
!        THE STARTING LOCATION IN ISTAK FOR
!        THE ARRAY OF INDICATOR VARIABLES DESIGNATING WHETHER
!        THE SETP SIZE SELECTED WAS SATISFACOTRY FOR A GIVEN
!        OBSERVATION AND THE JTH PARAMETER.
!     INTEGER IFIXD
!        THE STARTING LOCATION IN ISTAK OF
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.
!     INTEGER IFIXED(LIFIXD)
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.  IF
!        IFIXED(I).NE.0, THEN PAR(I) WILL BE OPTIMIZED.  IF
!        IFIXED(I).EQ.0, THEN PAR(I) WILL BE HELD FIXED.
!     INTEGER IFP
!        AN INDICATOR FOR STACK ALLOCATION TYPE, WHERE IFP=3 INDICATES
!        REAL AND IFP=4 INDICATES DOUBLE PRECISION.
!     INTEGER ISTAK(12)
!        THE INTEGER VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER ISUBHD
!        AN INDICATOR VALUE SPECIFYING SUBHEADINGS TO BE PRINTED.
!     INTEGER ITEMP
!        THE STARTING LOCATION IN ISTAK FOR
!        A TEMPORARY STORAGE VECTOR.
!     INTEGER IXM
!        THE FIRST DIMENSION OF THE INDEPENDENT VARIABLE ARRAY.
!     INTEGER J
!        THE INDEX OF THE PARAMETER BEING EXAMINED.
!     INTEGER LIFIXD
!        THE LENGTH OF THE VECTOR IFIXED.
!     INTEGER LSCALE
!        THE LENGTH OF VECTOR SCALE.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     EXTERNAL MDL
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        PREDICTED VALUES BASED ON THE CURRENT PARAMETER ESTIMATES.
!     INTEGER MXFAIL
!        THE MAXIMUM NUMBER OF FAILURES FOR ANY PARAMETER.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NALL0
!        THE NUMBER OF STACK ALLOCATIONS ON ENTRY.
!     INTEGER NDD
!        THE NUMBER OF DECIMAL DIGITS CARRIED FOR A REAL
!        NUMBERS.
!     INTEGER NDGT1
!        THE NUMBER OF RELIABLE DIGITS IN THE MODEL USED, EITHER
!        SET TO THE USER SUPPLIED VALUE OF NETA, OR COMPUTED
!        BY ETAMDL.
!     INTEGER NETA
!        THE USER SUPPLIED NUMBER OF RELIABLE DIGITS IN THE MODEL.
!     INTEGER NEXMPT
!        THE NUMBER OF OBSERVATIONS FOR WHICH A GIVEN STEP SIZE
!        DOES NOT HAVE TO BE SATISFACTORY AND THE SELECTED STEP
!        SIZE STILL BE CONSIDERED OK.
!     INTEGER NFAIL
!        THE NUMBER OF OBSERVATIONS FOR WHICH THE SELECTED STEP SIZE
!        FOR THE PARAMETER DOES NOT MEET THE CRITERIA.
!     INTEGER NFAILJ
!        THE NUMBER OF OBSERVATIONS FOR WHICH THE SELECTED STEP SIZE
!        FOR THE JTH PARAMETER DOES NOT MEET THE CRITERIA.
!     INTEGER NPAR
!        THE NUMBER OF PARAMETERS IN THE MODEL.
!     INTEGER NPRT
!        THE INDICATOR VARIABLE USED TO SPECIFY WHETHER OR NOT
!        PRINTED OUTPUT IS TO BE PROVIDED, WHERE IF THE VALUE OF
!        NPRT IS ZERO, NO PRINTED OUTPUT IS GIVEN.
!     LOGICAL PAGE
!        THE VARIABLE USED TO INDICATE WHETHER A GIVEN SECTION OF
!        THE OUTPUT IS TO BEGIN ON A NEW PAGE (TRUE) OR NOT (FALSE).
!     REAL PAR(NPAR)
!        THE ARRAY IN WHICH THE CURRENT ESTIMATES OF THE UNKNOWN
!        PARAMETERS ARE STORED.
!     INTEGER PARTMP
!        THE STARTING LOCATION IN THE WORK AREA OF
!        THE MODIFIED MODEL PARAMETERS
!     LOGICAL PRTFXD
!        THE INDICATOR VALUE USED TO DESIGNATE WHETHER THE
!        OUTPUT IS TO INCLUDE INFORMATION ON WHETHER THE
!        PARAMETER IS FIXED (TRUE) OR NOT (FALSE).
!     INTEGER PV
!        THE STARTING LOCATION IN THE WORK AREA OF
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!     INTEGER PVMCD
!        THE STARTING LOCATION IN THE WORK AREA OF
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!     INTEGER PVNEW
!        THE STARTING LOCATION IN THE WORK AREA OF
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!        FOR ALL BUT THE JTH PARAMETER VALUE, WHICH IS PAR(J)+STPNEW.
!     INTEGER PVPCD
!        THE STARTING LOCATION IN THE WORK AREA OF
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!        FOR ALL BUT THE JTH PARAMETER VALUE, WHICH IS PAR(J)+STPCD.
!     INTEGER PVSTP
!        THE STARTING LOCATION IN THE WORK AREA OF
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!        FOR ALL BUT THE JTH PARAMETER VALUE, WHICH IS PAR(J)+STP(J).
!     INTEGER PVTEMP
!        THE STARTING LOCATION IN THE WORK AREA OF
!        A TEMPORY STORAGE LOCATION FOR PREDICTED VALUES BEGINS.
!     REAL Q
!        A DUMMY VARIABLE WHICH IS USED, ALONG WITH COMMON NOTOPT (NO
!        OPTIMIZATION), TO COMPUTE THE STEP SIZE.
!     REAL RSTAK(12)
!        THE REAL VERSION OF THE /CSTAK/ WORK AREA.
!     REAL SCALE(LSCALE)
!        THE TYPICAL SIZE OF THE PARAMETERS.
!     REAL SCL
!        THE ACTUAL TYPICAL SIZE USED.
!     REAL STP(NPAR)
!        THE SELECTED STEP SIZES.
!     REAL TAU
!        THE AGREEMENT TOLERANCE.
!     LOGICAL WIDE
!        THE VARIABLE USED TO INDICATE WHETHER THE HEADING SHOULD
!        BE FULL WIDTH (TRUE) OR NOT (FALSE).
!     REAL XM(IXM,M)
!        THE ARRAY IN WHICH ONE ROW OF THE INDEPENDENT VARIABLE ARRAY
!        IS STORED.
!
!
      NALL0 = STKST(1)
!
      FPLRS = R1MACH(4)
      IFP = 3
!
!     SET PRINT CONTROLS
!
      HEAD = .TRUE.
!
!     SUBDIVIDE WORK AREA
!
      IFIXD = STKGET(NPAR, 2)
      ITEMP = STKGET(N, 2)
      IFAILJ = STKGET(N, 2)
      NFAIL = STKGET(NPAR, 2)
!
      CD = STKGET(MAX(N,NPAR), IFP)
      FD = STKGET(N, IFP)
      FDLAST = STKGET(N, IFP)
      FDSAVE = STKGET(N, IFP)
      PV = STKGET(N, IFP)
      PVMCD = STKGET(N, IFP)
      PVNEW = STKGET(N, IFP)
      PVPCD = STKGET(N, IFP)
      PVSTP = STKGET(N, IFP)
      PVTEMP = STKGET(N, IFP)
!
      IF (IERR .EQ. 1) RETURN
!
      PARTMP = CD
!
!     SET UP IFIXD
!
      IF (IFIXED(1).LT.0) THEN
         CALL SETIV(ISTAK(IFIXD), NPAR, 0)
      ELSE
         CALL CPYVII(NPAR, IFIXED, 1, ISTAK(IFIXD), 1)
      END IF
!
!     SET PARAMETERS NECESSARY FOR THE COMPUTATIONS
!
      NDD = INT(-LOG10(FPLRS))
!
      IF ((NETA.GE.2) .AND. (NETA.LE.NDD)) THEN
         ETA = 10.0E0 ** (-NETA)
         NDGT1 = NETA
      ELSE
         CALL ETAMDL(MDL, PAR, NPAR, XM, N, M, IXM, ETA, NDGT1,
     &               RSTAK(PARTMP), RSTAK(PVTEMP), 0)
      END IF
!
      TAU = MIN(ETA ** (0.25E0), 0.01E0)
!
      EXM = EXMPT
      IF ((EXM.LT.0.0E0) .OR. (EXM.GT.1.0E0)) EXM = 0.10E0
      NEXMPT = EXM * N
      IF (EXM .NE. 0.0E0) NEXMPT = MAX(NEXMPT, 1)
!
!     COMPUTE PREDICTED VALUES OF THE MODEL USING THE INPUT PARAMETER
!     ESTIMATES
!
      CALL MDL(PAR, NPAR, XM, N, M, IXM, RSTAK(PV))
!
      MXFAIL = 0
      NFAILJ = NFAIL
!
      DO 120 J = 1, NPAR
         IF (ISTAK(IFIXD-1+J).EQ.0) THEN
            IF (SCALE(1).LE.0.0E0) THEN
               IF (PAR(J).EQ.0.0E0) THEN
                  SCL = 1.0E0
               ELSE
                  SCL = ABS(PAR(J))
               END IF
            ELSE
               SCL = SCALE(J)
            END IF
!
            CALL STPMN(J, XM, N, M, IXM, MDL, PAR, NPAR, NEXMPT,
     &         ETA, TAU, SCL, STP(J), ISTAK(NFAILJ), ISTAK(IFAILJ),
     &         RSTAK(CD), ISTAK(ITEMP), RSTAK(FD), RSTAK(FDLAST),
     &         RSTAK(FDSAVE), RSTAK(PV), RSTAK(PVMCD), RSTAK(PVNEW),
     &         RSTAK(PVPCD), RSTAK(PVSTP), RSTAK(PVTEMP))
!
!     COMPUTE THE MAXIMUM NUMBER OF FAILURES FOR ANY PARAMETER
!
            MXFAIL = MAX(ISTAK(NFAILJ), MXFAIL)
!
         ELSE
            STP(J) = 0.0
         END IF
!
!     PRINT RESULTS IF THEY ARE DESIRED
!
         IF ((NPRT.NE.0) .OR. (MXFAIL.GT.NEXMPT))
     &      CALL STPOUT(HEAD, N, EXM, NEXMPT, NDGT1, J, PAR, NPAR,
     &            STP, ISTAK(NFAIL), ISTAK(IFAILJ), SCALE,  LSCALE, HDR,
     &            PAGE, WIDE, ISUBHD, NPRT, PRTFXD, ISTAK(IFIXD))
         NFAILJ = NFAILJ + 1
  120 CONTINUE
!
      HLFRPT = .FALSE.
      IF ((NPRT.NE.0) .OR. (MXFAIL.GT.NEXMPT)) HLFRPT = .TRUE.
!
      IF (MXFAIL.GT.NEXMPT) IERR = 2
!
      CALL STKCLR(NALL0)
!
      RETURN
!
      END
