!AMEPT2
      subroutine amept2 (res, sdrest, n, rss)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE, ADAPTED FROM OMNITAB II, PRINTS
!     THE FOUR STANDARDIZED RESIDUAL PLOTS.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 2, 1985
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   rss
     integer&
     &   n
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   res(*),sdrest(*)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     real(kind=wp) ::&
    &   an,dot,fac1,fac2,fplm,gamma,pi,ratio,rowdiv,rowmax,rowmid,&
     &   rowmin,xdiv,xmax,xmin,ylabel,ymax,ymin
     integer&
    &   i,i1,i2,imid,iplot,iprb,iprt,irow,ix,k,l,ncol,ncolp1,&
     &   ncolpl,ncolt2,ndot,nrow
     character&
     &   iblank*1,iminus*1,iplus*1,istar*1
!
!  LOCAL ARRAYS
     character&
     &   line(113)*1
!
!  EXTERNAL FUNCTIONS
!      REAL(KIND=WP) ::
!     +   R1MACH
!      LOGICAL
!     +   MVCHK
!      EXTERNAL R1MACH,MVCHK
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL DOTC,GETPI,IPRINT
!
!  INTRINSIC FUNCTIONS
      intrinsic int,max,min,mod
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL AN
!        THE NUMBER OF OBSERVATIONS, USED IN COMPUTING
!        THE NORMAL PROBABILITY PLOT.
!     REAL DOT
!        THE DOT PRODUCT USED TO COMPUTE THE CORRELATION COEFFICIENT.
!     REAL FAC1, FAC2
!        FACTORS USED IN COMPUTING THE NORMAL PROBABILITY PLOT.
!     REAL FPLM
!        THE FLOATING POINT LARGEST MAGNITUDE.
!     REAL GAMMA
!        A VALUE USED IN COMPUTING THE NORMAL PROBABILITY PLOT.
!     INTEGER I
!        AN INDEX VARIABLE.
!     CHARACTER*1 IBLANK
!        THE VALUE OF THE CHARACTER -BLANK-.
!     INTEGER IERR
!        THE VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .GE. 1, ERRORS WERE DETECTED.
!     INTEGER IMID
!        THE MIDPOINT OF THE AUTOCORRELATION PLOT.
!     CHARACTER*1 IMINUS
!        THE CHARACTER MINUS.
!     INTEGER IPLOT
!        AN INDICATOR VARIABLE DESIGNATING WHETHER THE FIRST OR
!        SECOND SET OF TWO PLOTS ARE BEING PRINTED.
!     CHARACTER*1 IPLUS
!        THE CHARACTER PLUS.
!     INTEGER IPRB
!        THE LOCATION IN THE PLOT STRING OF THE SYMBOL FOR THE
!        PROBABILITY PLOT.
!     INTEGER IPRT
!        THE UNIT NUMBER FOR PRINTED OUTPUT.
!     INTEGER IROW
!        THE ROW OF THE VARIABLES BEING PLOTTED.
!     CHARACTER*1 ISTAR
!        THE CHARACTER STAR.
!     INTEGER IX
!        THE LOCATION IN THE PLOT STRING OF THE SYMBOL FOR THE PLOTS
!        VERSUS THE INDEPENDENT VARIABLE.
!     INTEGER I1, I2
!        INDEX VALUES.
!     INTEGER K
!        AN INDEX VARIABLE.
!     INTEGER L
!        AN INDEX VARIABLE.
!     CHARACTER*1 LINE(113)
!        THE SYMBOLS (BLANKS AND CHARACTERS) FOR A GIVEN LINE
!        OF THE PLOT.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NCOL, NCOLPL, NCOLP1, NCOLT2
!        THE NUMBER OF COLUMNS IN THE PLOT, NCOL+L, NCOL+1,
!        AND NCOL * 2.
!     INTEGER NDOT
!        THE NUMBER OF POINTS MAKING UP DOT.
!     INTEGER NROW
!        THE NUMBER OF COLUMNS IN THE PLOT.
!     REAL PI
!        THE VALUE OF PI.
!     REAL RATIO
!        A VALUE USED TO PRODUCE THE NORMAL PROBABILITY PLOT.
!     REAL RES(N)
!        THE RESIDUALS FROM THE FIT.
!     REAL ROWDIV
!        THE VALUE OF A DIVISION ALONG THE -ROW- AXIS.
!     REAL ROWMAX
!        THE LARGEST ROW VALUE.
!     REAL ROWMID
!        THE MIDPOINT OF THE RANGE OF THE ROWS PLOTTED.
!     REAL ROWMIN
!        THE SMALLEST ROW VALUE PLOTTED.
!     REAL RSS
!        THE RESIDUAL SUM OF SQUARES.
!     REAL SDREST(N)
!        THE STANDARDIZED RESIDUALS.
!     REAL XDIV
!        THE VALUE OF A DIVISION ALONG THE X AXIS.
!     REAL XMAX
!        THE LARGEST VALUE ALONG THE X AXIS.
!     REAL XMIN
!        THE SMALLEST VALUE ALONG THE X AXIS.
!     REAL YLABEL
!        THE LABEL TO BE PRINTED ALONG THE Y AXIS.
!     REAL YMAX
!        THE LARGEST VALUE ALONG THE Y AXIS
!     REAL YMIN
!        THE SMALLEST VALUE ALONG THE Y AXIS.
!
      data iplus/'+'/, iminus/'-'/, istar/'*'/, iblank/' '/
!
      call iprint(iprt)
!
      fplm = r1mach(2)
!
!     CHECK FOR INSUFFICIENT POINTS TO PLOT
!
      if (ierr.ne.4) go to 20
      do 10 i = 1, n
         if (sdrest(i).ne.fplm) go to 20
   10 continue
      write (iprt, 1090)
      return
!
   20 continue
!
!     INITIALIZE VALUES FOR PROBABILITY PLOT
!
      call getpi(pi)
      gamma = pi/8.0_wp
      an = n
      fac1 = 1.0_wp / (an - 2.0_wp*gamma + 1.0_wp)
      fac2 = 10.0_wp
!
!     INITIALIZE THE PLOT SIZE (IN PLOT UNITS)
!
      nrow = 26
!
!     BEGIN COMPUTATIONS FOR FIRST SET OF PLOTS
!
      iplot = 1
      ncol = 111
!
!     SET X AXIS LIMITS FOR STANDARDIZED RESIDUAL VS ROW PLOT,
!
      rowmin = 1
      rowmax = n
!
      rowmid = (rowmax+rowmin)/2.0_wp
      rowdiv = (rowmax-rowmin)/(ncol-1)
!
!     PRINT TITLES FOR FIRST PLOTS
!
      write (iprt,1000)
      go to 90
!
!     BEGIN COMPUTATIONS FOR SECOND SET OF PLOTS
!
   40 iplot = 2
      ncol = 51
!
!     SET AXIS LIMITS FOR THE STANDARDIZED RESIDUALS VS
!     STANDARDIZED RESIDUALS LAGGED BY ONE AND FOR PROBABILITY PLOT
!
      xmin = -3.75_wp
      xmax = 3.75_wp
      xdiv = (xmax-xmin)/(ncol-1)
!
!     PRINT TITLES FOR SECOND PLOTS
!
      write (iprt,1050)
!
!     WRITE FIRST LINE OF PLOTS
!
   90 continue
!
!     PRINT PLOTS, ONE LINE AT A TIME
!
      ncolp1 = ncol + 1
      ncolt2 = 2*ncol
      ylabel = 3.75_wp
      ymax = fplm
      ymin = 4.05_wp
      do 160 k=1,nrow
         ymin = ymin - 0.3_wp
         if (-3.70_wp.ge.ymin) ymin = -fplm
         do 100 l=1,ncol
            ncolpl = l + ncol
            line(l) = iblank
            if (iplot.eq.2) line(ncolpl) = iblank
            if ((k.ne.1) .and. (k.ne.nrow)) go to 100
               line(l) = iminus
               if (iplot.eq.2) line(ncolpl) = iminus
               if ((mod(l,10).ne.1) .and. (l.ne.1+ncol/2)) go to 100
                  line(l) = iplus
                  if (iplot.eq.2) line(ncolpl) = iplus
  100    continue
         do 130 i=1,n
            if (.not.mvchk(sdrest(i),fplm)) then
               if ((sdrest(i).gt.ymin) .and. (sdrest(i).le.ymax)) then
                  if (iplot.eq.1) then
                      irow = int(((i-rowmin)/rowdiv)+1.5_wp)
                      line(irow) = istar
                   else
                      ratio = (an-gamma) * fac1
                     iprb = int(4.91_wp*(ratio**0.14_wp-&
     &                          (1.0_wp-ratio)**0.14_wp)*fac2) + 77
                      if (iprb.le.ncol) iprb = ncol+1
                      if (iprb.ge.103) iprb = 102
                      line(iprb) = istar
                      an = an - 1.0_wp
                      if ((an.lt.2.0_wp) .and. (n.le.10)) then
                         gamma = 1.0_wp/3.0_wp
                      end if
                   end if
                end if
             end if
  130    continue
!
!     SET PLOT LINE FOR CORRELATION PLOT OF SECOND SET OF PLOTS
!
         if (iplot.eq.2) then
            imid = (ncol-1)/2
            if (k.le.n-1) then
               dot = 0.0_wp
              call dotc(res, 0.0_wp, n, res(k+1), 0.0_wp,&
     &                   n-k, dot, ndot)
               ix = int(imid*dot/rss) + imid + 1
               i1 = min(ix,imid+1)
               i2 = max(ix,imid+1)
               do 135 ix=i1,i2
                  line(ix) = istar
  135          continue
            end if
         end if
         if (mod(k,5).eq.1) then
            if (iplot.eq.1) then
               write (iprt,2020) ylabel, (line(l),l=1,ncol)
            else
              write (iprt,1020) k, (line(l),l=1,ncol), ylabel,&
     &                           (line(l),l=ncolp1,ncolt2)
            end if
            ylabel = ylabel - 1.5_wp
         else
            if (iplot.eq.1) then
               write (iprt,2030) (line(l),l=1,111)
            else
               write (iprt,1030) (line(l),l=1,102)
            end if
         end if
         ymax = ymin
  160 continue
!
!     PRINT BOTTOM LINE OF GRAPHS
!
      if (iplot.eq.1) then
!
!     PRINT X AXIS LABELS FOR FIRST SET OF PLOTS
!
         write (iprt,1040) rowmin, rowmid, rowmax
         go to 40
!
!     PRINT X AXIS LABELS FOR SECOND SET OF PLOTS
!
      else
         write (iprt,1070)
      end if
!
      return
!
!     FORMAT STATEMENTS
!
 1000 format (/51x, 23h std res vs row number )
 1020 format (1x, i5, '+', 51a1, '+', 2x, f5.2, '+', 51a1, '+')
 1030 format (6x, '-', 51a1, '-', 7x, '-', 51a1, '-')
 1040 format (1x, f8.1, 47x, f8.1, 47x, f8.1)
1050 format (/13x, 'AUTOCORRELATION FUNCTION OF RESIDUALS',&
     &   23x, 36h normal probability plot of std res )
1070 format (4x, 5h-1.00, 22x, 3h0.0, 21x, 4h1.00, 5x, 4h-2.5, 23x,&
     &   3h0.0, 22x, 3h2.5)
1090 format (// 1x, 13(1h*)/ 1x, 13h*  warning  */ 1x, 13(1h*)//&
    &   54h the standardized residual plots have been suppressed.,&
    &   45h  none of the standardized residuals could be,&
    &   10h computed,/&
    &   50h because for each observation either the weight or,&
     &   48h the standard deviation of the residual is zero.)
 2020 format (1x, f5.2, '+', 111a1, '+')
 2030 format (6x, '-', 111a1, '-')
      end
