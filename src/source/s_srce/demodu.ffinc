!DEMODU
      subroutine demodu (y, n, fd, ampl, phas)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE DEMODULATES THE SERIES Y AT FREQUENCY
!     FD.  THE REAL AND IMAGINARY PARTS OF THE DEMODULATED
!     SERIES ARE RETURNED IN AMPL AND PHAS, RESPECTIVELY.
!
!     WRITTEN BY  -  PETER BLOOMFIELD
!                    FOURIER ANALYSIS OF TIME SERIES- AN
!                       INTRODUCTION
!                    JOHN WILEY AND SONS, NEW YORK, 1976
!                    PAGE 148
!     ADAPTED FOR STARPAC BY  -  JANET R. DONALDSON
!                                STATISTICAL ENGINEERING DEVISION
!                                NATIONAL BUREAU OF STANDARDS
!                                BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 26, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   fd
     integer&
     &   n
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   ampl(n),phas(n),y(n)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   arg,pi
     integer&
     &   i
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL GETPI
!
!  INTRINSIC FUNCTIONS
      intrinsic cos,sin
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: AMPL(N)
!        THE ARRAY IN WHICH THE AMPLITUDES ARE STORED.
!     REAL(KIND=WP) :: ARG
!        A VALUE USED IN COMPUTING THE DEMODULATED SERIES.
!     REAL(KIND=WP) :: FD
!        THE DEMODULATION FREQUENCY.
!     INTEGER I
!        AN INDEXING VARIABLE.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS IN THE SERIES BEING DEMODULATED.
!     REAL(KIND=WP) :: PHAS(N)
!        THE ARRAYS CONTAINING THE PRIMARY PHASE ESTIMATES.
!     REAL(KIND=WP) :: PI
!        THE VALUE OF PI.
!     REAL(KIND=WP) :: Y(N)
!        THE INPUT ARRAY ARRAY CONTAINING THE OBSERVED SERIES.
!
      call getpi(pi)
!
      do 10 i = 1, n
         if (fd.eq.0.25e0) then
            ampl(i) = 0.0e0
            phas(i) = -2.0e0*y(i)
         else if (fd.eq.0.5e0) then
            ampl(i) = -2.0e0*y(i)
            phas(i) = 0.0e0
         else
            arg = (i-1) * fd * 2.0e0 * pi
            ampl(i) = y(i)*cos(arg)*2.0e0
            phas(i) = -y(i)*sin(arg)*2.0e0
         end if
   10 continue
      return
      end
