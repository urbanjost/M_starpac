!GFSEST
      subroutine gfsest (h, k, nf, freq, gain, delta)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE COMPUTES THE GAIN FUNCTION OF AN INPUT SYMMETRIC
!     LINEAR FILTER AT THE FREQUENCIES SPECIFIED IN FREQ USING THE
!     TRANSFORM ALGORITHM SHOWN ON PAGE 311 OF JENKINS AND WATTS.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 26, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   delta
     integer&
     &   k,nf
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   freq(nf),gain(nf),h(k)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   c,pi,v0,v1,v2
     integer&
     &   i,j,khalf,kmid
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL GETPI
!
!  INTRINSIC FUNCTIONS
      intrinsic abs,cos
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL C
!        A VALUE USED TO COMPUTE THE GAIN FUNCTION.
!     REAL DELTA
!        THE SAMPLING INTERVAL OF THE ORIGINAL SERIES.
!     REAL FREQ(NF)
!        THE VECTOR OF FREQUENCIES AT WHICH THE GAIN FUNCTION IS TO BE
!        ESTIMATED.
!     REAL GAIN(NF)
!        THE ARRAY IN WHICH THE GAIN FUNCTION ESTIMATES ARE RETURNED.
!     REAL H(K)
!        THE SYMMETRIC LINEAR FILTER WEIGHTS.
!     INTEGER I, J
!        INDEX VARIABLES.
!     INTEGER K
!        THE NUMBER OF TERMS IN THE SYMMETRIC LINEAR FILTER.
!     INTEGER KHALF, KMID
!        HALF THE FILTER LENGTH, AND THE MIDPOINT OF THE FILTER,
!        RESPECTIVELY.
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES FOR WHICH THE GAIN FUNCTION ESTIMATES
!        ARE TO BE ESTIMATED.
!     REAL PI
!        THE VALUE OF PI.
!     REAL V0, V1, V2
!        CONSTANTS USED FOR COMPUTING THE GAIN FUNCTION ESTIMATES.
!
      call getpi(pi)
!
!        COMPUTE GAIN FUNCTION ESTIMATES AND THEIR CONFIDENCE LIMITS.
!
      kmid = (k+1) / 2
      khalf = kmid - 1
!
      do 30 i = 1, nf
         c = cos(2.0e0 * pi * freq(i))
         v0 = 0.0e0
         v1 = 0.0e0
         do 20 j = 1, khalf
            v2 = 2.0e0 * c * v1 - v0 + h(j)
            v0 = v1
            v1 = v2
   20    continue
         gain(i) = abs(delta * (h(kmid) + 2.0e0 * (v1 * c - v0)))
   30 continue
      return
      end
