!FLTARM
      subroutine fltarm (y, ymiss, n, iar, phi, yf, yfmiss, nyf)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE FILTERS THE INPUT SERIES Y, WHICH CONTAINS MISSING
!     DATA, USING THE IAR TERMS OF THE AUTOREGRESSIVE FILTER PHI,
!     COPYING THE FILTERED SERIES INTO YF.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DEVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 26, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      real(kind=wp) :: yfmiss,ymiss
     integer&
     &   iar,n,nyf
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   phi(*),y(*),yf(*)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   fplm,temp
     integer&
     &   i,i1,j,k
!
!  EXTERNAL FUNCTIONS
     real(kind=wp) ::&
     &   r1mach
     logical&
     &   mvchk
!       EXTERNAL R1MACH,MVCHK
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL FPLM
!        THE FLOATING POINT LARGEST MAGNITUDE.
!     INTEGER I
!        AN INDEXING VARIABLE.
!     INTEGER IAR
!        THE NUMBER OF FILTER TERMS.
!     INTEGER I1, J, K
!        INDEXING VARIABLES.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS IN THE SERIES Y.
!     INTEGER NYF
!        THE NUMBER OF OBSERVATIONS IN THE FILTERED SERIES YF.
!     REAL PHI(IAR)
!        THE ARRAY IN WHICH THE FILTER COEFFICIENTS ARE STORED.
!     REAL TEMP
!        A TEMPORARY STORAGE LOCATION.
!     REAL Y(N)
!        THE VECTOR CONTAINING THE OBSERVED TIME SERIES.
!     REAL YF(N)
!        THE VECTOR IN WHICH THE FILTERED SERIES IS RETURNED.
!     REAL YFMISS
!        THE MISSING VALUE CODE USED IN THE FILTERED SERIES TO
!        INDICATE THE VALUE COULD NOT BE COMPUTED DUE TO MISSING DATA.
!     REAL YMISS
!        THE MISSING VALUE CODE USED IN THE INPUT SERIES TO INDICATE
!        AN OBSERVATION IS MISSING.
!
      fplm = r1mach(2)
!
      yfmiss = fplm
!
      do 10 i = 1, n
         yf(i) = y(i)
   10 continue
!
      nyf = n - iar
!
      do 50 i = 1, nyf
         temp = yfmiss
         k = i + iar
         if (mvchk(yf(k), ymiss)) go to 40
         temp = yf(k)
         do 30 j = 1, iar
            k = k - 1
            if (.not. mvchk(yf(k), ymiss)) go to 20
            temp = yfmiss
            go to 40
   20       continue
            temp = temp - phi(j) * yf(k)
   30    continue
   40    yf(i) = temp
   50 continue
!
      i1 = nyf + 1
!
      do 60 i = i1, n
         yf(i) = 0.0e0
   60 continue
      return
      end
