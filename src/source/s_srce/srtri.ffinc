!SRTRI
      subroutine srtri(a, la, ir)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!   FUNCTION     SRTRI  - SORT ARRAY A ON AN INTEGER ARRAY IR.
!                           IF THE INTEGER ARRAY IS A PERMUTATION
!                           VECTOR FOR THE ARRAY, THEN THE
!                           ARRAY IS RESTORED TO ITS ORIGINAL
!                           (UNPERMUTED) ORDER.
!                           PERMUTATIONS RETURNED
!   USAGE               - CALL SRTRI (A,LA,IR)
!   PARAMETERS   A(LA)  - ON INPUT, CONTAINS THE ARRAY TO BE SORTED
!                         ON OUTPUT, A CONTAINS THE SORTED ARRAY
!                LA     - INPUT VARIABLE CONTAINING THE NUMBER OF
!                           ELEMENTS IN THE ARRAY TO BE SORTED
!                IR(LA) - ON INPUT, CONTAINS THE INTEGER KEY ARRAY
!                         ON OUTPUT, CONTAINS THE SORTED KEY ARRAY
!                           1,2,...,LA.
!                       - THEN ON OUTPUT, IR CONTAINS A RECORD OF THE
!                           PERMUTATIONS MADE ON THE VECTOR A.
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   la
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   a(la)
     integer&
     &   ir(la)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   r,t,tt
     integer&
     &   i,ij,it,itt,j,k,l,m
!
!  LOCAL ARRAYS
     integer&
     &   il(21),iu(21)
!
!  INTRINSIC FUNCTIONS
      intrinsic int
!
!
      m = 1
      i = 1
      j = la
      r = .375e0
   10 if (i.eq.j) go to 90
      if (r.gt.0.5898437e0) go to 20
      r = r + 3.90625e-2
      go to 30
   20 r = r - .21875e0
   30 k = i
!                                  SELECT A CENTRAL ELEMENT OF THE
!                                  ARRAY AND SAVE IT IN LOCATION IT
      ij = i + int((j-i)*r)
      t = a(ij)
      it = ir(ij)
!                                  IF FIRST ELEMENT OF ARRAY IS GREATER
!                                  THAN IT, INTERCHANGE WITH IT
      if (ir(i).le.it) go to 40
      a(ij) = a(i)
      a(i) = t
      t = a(ij)
      ir(ij) = ir(i)
      ir(i) = it
      it = ir(ij)
   40 l = j
!                                  IF LAST ELEMENT OF ARRAY IS LESS THAN
!                                  IT, INTERCHANGE WITH IT
      if (ir(j).ge.it) go to 60
      a(ij) = a(j)
      a(j) = t
      t = a(ij)
      ir(ij) = ir(j)
      ir(j) = it
      it = ir(ij)
!                                  IF FIRST ELEMENT OF ARRAY IS GREATER
!                                  THAN IT, INTERCHANGE WITH IT
      if (ir(i).le.it) go to 60
      a(ij) = a(i)
      a(i) = t
      t = a(ij)
      ir(ij) = ir(i)
      ir(i) = it
      it = ir(ij)
      go to 60
   50 tt = a(l)
      a(l) = a(k)
      a(k) = tt
      itt = ir(l)
      ir(l) = ir(k)
      ir(k) = itt
!                                  FIND AN ELEMENT IN THE SECOND HALF OF
!                                  THE ARRAY WHICH IS SMALLER THAN IT
   60 l = l - 1
      if (ir(l).gt.it) go to 60
!                                  FIND AN ELEMENT IN THE FIRST HALF OF
!                                  THE ARRAY WHICH IS GREATER THAN IT
   70 k = k + 1
      if (ir(k).lt.it) go to 70
!                                  INTERCHANGE THESE ELEMENTS
      if (k.le.l) go to 50
!                                  SAVE UPPER AND LOWER SUBSCRIPTS OF
!                                  THE ARRAY YET TO BE SORTED
      if (l-i.le.j-k) go to 80
      il(m) = i
      iu(m) = l
      i = k
      m = m + 1
      go to 100
   80 il(m) = k
      iu(m) = j
      j = l
      m = m + 1
      go to 100
!                                  BEGIN AGAIN ON ANOTHER PORTION OF
!                                  THE UNSORTED ARRAY
   90 m = m - 1
      if (m.eq.0) return
      i = il(m)
      j = iu(m)
  100 if (j-i.ge.1) go to 30
      if (i.eq.1) go to 10
      i = i - 1
  110 i = i + 1
      if (i.eq.j) go to 90
      t = a(i+1)
      it = ir(i+1)
      if (ir(i).le.it) go to 110
      k = i
  120 a(k+1) = a(k)
      ir(k+1) = ir(k)
      k = k - 1
      if (it.lt.ir(k)) go to 120
      a(k+1) = t
      ir(k+1) = it
      go to 110
      end
