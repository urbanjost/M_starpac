!STPER
      subroutine stper(nmsub, n, m, ixm, npar, ldstak, scale, lscale)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE ERROR CHECKING ROUTINE FOR STEP SIZE SELECTION
!     ROUTINES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  OCTOBER 3, 1983
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   ixm,ldstak,lscale,m,n,npar
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   scale(*)
     character&
     &   nmsub(6)*1
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     integer&
     &   i,ldsmin,nv
     logical&
     &   head
!
!  LOCAL ARRAYS
     logical&
     &   error(10)
     character&
    &   lixm(8)*1,llds(8)*1,lm(8)*1,ln(8)*1,lnpar(8)*1,&
     &   lone(8)*1,lscl(8)*1,lzero(8)*1
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL EISGE,ERVGT,LDSCMP
!
!  INTRINSIC FUNCTIONS
      intrinsic max
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     LOGICAL ERROR(10)
!        VALUE(S) INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     LOGICAL HEAD
!        A FLAG INDICATING WHETHER THE HEADING SHOULD BE PRINTED
!        (TRUE) OR NOT (FALSE).  IF A HEADING IS PRINTED, THE VALUE
!        OF HEAD WILL BE CHANGED TO FALSE.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .EQ. 1, ERRORS WERE DETECTED.
!     INTEGER IXM
!        THE FIRST DIMENSION OF THE INDEPENDENT VARIABLE ARRAY XM.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     CHARACTER*1 LIXM(8), LLDS(8), LM(8), LN(8), LNPAR(8), LONE(8),
!    +            LSCL(8), LZERO(8)
!        THE ARRAY(S) CONTAINING THE NAME(S) OF INPUT PARAMETER(S)
!        CHECKED FOR ERRORS.
!     INTEGER LSCALE
!        THE LENGTH OF VECTOR SCALE.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     CHARACTER*1 NMSUB(6)
!        THE NAME OF THE SUBROUTINE CALLING THE ERROR CHECKING
!        SUBROUTINES.
!     INTEGER NPAR
!        THE NUMBER OF UNKNOWN PARAMETERS IN THE MODEL.
!     INTEGER NV
!        THE NUMBER OF VIOLATIONS FOUND.
!     REAL SCALE(LSCALE)
!        THE TYPICAL SIZE OF THE UNKNOWN PARAMETERS.
!
!     SET UP NAME ARRAYS
!
     data lixm(1), lixm(2), lixm(3), lixm(4), lixm(5), lixm(6),&
     &   lixm(7), lixm(8) /'I','X','M',' ',' ',' ',' ',' '/
     data llds(1), llds(2), llds(3), llds(4), llds(5), llds(6),&
     &   llds(7), llds(8) /'L','D','S','T','A','K',' ',' '/
     data lm(1), lm(2), lm(3), lm(4), lm(5), lm(6), lm(7), lm(8) /'M',&
     &   ' ',' ',' ',' ',' ',' ',' '/
     data ln(1), ln(2), ln(3), ln(4), ln(5), ln(6), ln(7), ln(8) /'N',&
     &   ' ',' ',' ',' ',' ',' ',' '/
     data lnpar(1), lnpar(2), lnpar(3), lnpar(4), lnpar(5),&
    &   lnpar(6), lnpar(7), lnpar(8) /'N','P','A','R',' ',' ',' ',&
     &   ' '/
     data lone(1), lone(2), lone(3), lone(4), lone(5),&
    &   lone(6), lone(7), lone(8) /' ',' ','O','N','E',' ',' ',&
     &   ' '/
     data lscl(1), lscl(2), lscl(3), lscl(4), lscl(5),&
    &   lscl(6), lscl(7), lscl(8) /'S','C','A','L','E',' ',' ',&
     &   ' '/
     data lzero(1), lzero(2), lzero(3), lzero(4), lzero(5),&
     &   lzero(6), lzero(7), lzero(8) /'Z','E','R','O',' ',' ',' ',' '/
!
!     ERROR CHECKING
!
      do 10 i=1,10
         error(i) = .false.
   10 continue
!
      ierr = 0
      head = .true.
!
      call eisge(nmsub, ln, n, 1, 2, head, error(1), lone)
!
      call eisge(nmsub, lm, m, 1, 2, head, error(2), lone)
!
      call eisge(nmsub, lixm, ixm, n, 3, head, error(3), ln)
!
      call eisge(nmsub, lnpar, npar, 1, 2, head, error(4), lone)
!
     call ldscmp(14, 0, 2*(n+npar), 0, 0, 0, 'S', 9*n + max(n,npar),&
     &            ldsmin)
!
     if ((.not.error(1)) .and. (.not.error(4)))&
    &   call eisge(nmsub, llds, ldstak, ldsmin, 9, head, error(5),&
     &   llds)
!
     call ervgt(nmsub, lscl, scale, lscale, 0.0e0, 0, head, 6, nv,&
     &   error(9), lzero)
!
!
      do 20 i=1,10
         if (error(i)) go to 30
   20 continue
      return
!
   30 continue
      ierr = 1
      return
!
      end
