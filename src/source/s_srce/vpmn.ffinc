!VPMN
     subroutine vpmn (ym, ymmiss, n, m, iym, nsampl, ischck, isym,&
     &  lisym, isize, ymn, ymx, xlb, xinc, miss, ilog, irlin, ibar)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE PRODUCES VERTICAL PLOTS
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 21, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   xinc,xlb,ymn,ymx
     integer&
     &   ibar,ilog,irlin,ischck,isize,iym,lisym,m,n,nsampl
     logical&
     &   miss
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   ym(iym,m),ymmiss(m)
     integer&
     &   isym(lisym)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   refpt,xlabel,ydmn,ydmx,ywidth,yy
     integer&
    &   i,iend,ilogy,imax,imin,ipoint,iprt,iptsym,irefpt,j,numcol,&
     &   nused
     logical&
     &   ifmiss
     character&
     &   i0*1,iblank*1,im*1,ipltch*1,irefch*1,fmt*72
!
!  LOCAL ARRAYS
     integer&
     &   icount(103)
     character&
     &   line(103)*1
!
!  EXTERNAL FUNCTIONS
!      LOGICAL
!     +   MVCHK
!      EXTERNAL MVCHK
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL AMEAN,AMEANM,IPRINT,PLINE,PLTPLX,PLTSYM,SETIV,VPHEAD
!
!  INTRINSIC FUNCTIONS
      intrinsic log10,max,min
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     CHARACTER FMT*72
!        THE FORMAT FOR THE X-AXIS LABELS
!     INTEGER I
!        AN INDEXING VARIABLE.
!     INTEGER IBAR
!        THE VARIABLE USED TO DETERMINE IF SINGLE POINTS (IBAR .EQ. 0)
!        OR BARS (IBAR .NE. 0) ARE TO BE PLOTTED.
!     CHARACTER*1 IBLANK
!        THE PLOT SYMBOL BLANK.
!     INTEGER ICOUNT(103)
!        THE NUMBER OF PLOT SYMBOLS AT EACH LOCATION.
!     INTEGER IEND
!        THE NUMBER OF LOCATIONS IN THE PLOT STRING.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     LOGICAL IFMISS
!        THE INDICATOR VARIABLE USED TO DETERMINE WHETHER THE
!        INPUT SERIES HAS MISSING DATA (TRUE) OR NOT (FALSE).
!     INTEGER ILOG
!        THE TWO DIGIT INTEGER, PQ, USED TO SELECT AXIS SCALE, WHERE
!        P DESIGNATES THE X-AXIS AND Q DESIGNATES THE Y-AXIS.
!        IF P.EQ.0 (Q.EQ.0), THEN THE X-AXIS (Y-AXIS) IS LINEAR.
!        IF P.NE.0 (Q.NE.0), THEN THE X-AXIS (Y-AXIS) IS LOG.
!     INTEGER ILOGY
!        THE VALUE OF Q (SEE ILOG).
!     CHARACTER*1 IM
!        THE PLOT SYMBOL M.
!     INTEGER IMAX
!        THE LARGEST LOCATION IN THE PLOT STRING BEING DEFINED.
!     INTEGER IMIN
!        THE SMALLEST LOCATION IN THE PLOT STRING BEING DEFINED.
!     CHARACTER*1 IPLTCH
!        THE PLOT CHARACTER USED FOR A GIVEN LINE OF THE PLOT.
!     INTEGER IPOINT
!        THE LOCATION IN THE PLOT STRING OF THE VALUE BEING PLOTTED.
!     INTEGER IPRT
!        *
!     INTEGER IPTSYM
!        AN INDICATOR VARIABLE USED TO DESIGNATE THE TYPE
!        OF PLOT.  IF ISCHCK = 1, THE PLOT IS A SYMPLE PAGE
!        OR VERTICAL PLOT.  IF ISCHCK = 2, THE PLOT IS A SYMBOL
!        PLOT.  IF ISCHCK = 3, THE PLOT IS A MULTIVARIATE PLOT.
!     CHARACTER*1 IREFCH
!        THE PLOT SYMBOL USED TO IDENTIFY THE PLOT REFERENCE LINE.
!     INTEGER IREFPT
!        THE LOCATION IN THE PLOT STRING FOR THE VALUE ZERO, OR
!        SERIES MEAN, WHICH EVER WAS REQUESTED.
!     INTEGER IRLIN
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER ZERO OR THE
!        SERIES MEAN IS TO BE PLOTTED AS A REFERENCE LINE, OR WHETHER
!        NO REFERENCE LINE IS TO BE PLOTTED.
!        IF IRLIN .LE. -1, NO REFERENCE LINE IS PLOTTED.
!        IF IRLIN .EQ.  0, ZERO IS PLOTTED AS THE REFERENCE LINE.
!        IF IRLIN .GE.  1, THE SERIES MEAN IS PLOTTED.
!     INTEGER ISCHCK
!        THE INTEGER VALUE INDICATING HOW THE PLOTTING SYMBOLS
!           WILL BE DESIGNATED, WHERE
!           0 INDICATES THE PLOTTING SYMBOLS HAVE NOT BEEN DESIGNATED IN
!             THE N VECTOR ISYM AND ONLY THE SYMBOL + IS TO BE USED
!           1 INDICATES THE PLOTTING SYMBOLS HAVE BEEN DESIGNATED IN THE
!             N VECTOR ISYM
!           2 INDICATES THAT M SERIES ARE BEING PLOTTED.
!             SYMBOL I+4 WILL BE USED FOR COLUMN I OF YM.
!     INTEGER ISIZE
!        THE TWO DIGIT INTEGER, PQ, USED TO SELECT AXIS SIZE, WHERE
!        P DESIGNATES THE X-AXIS AND Q DESIGNATES THE Y-AXIS.
!        IF P.EQ.0 (Q.EQ.0), THEN THE X-AXIS (Y-AXIS) IS THE MAXIMUM.
!        IF P.NE.0 (Q.NE.0), THEN THE X-AXIS (Y-AXIS) IS HALF THE MAXIMU
!     INTEGER ISYM(LISYM)
!        VECTOR CONTAINING SYMBOL DESIGNATIONS FOR PLOTTING
!     INTEGER IYM
!        THE EXACT VALUE OF THE FIRST DIMENSION OF THE MATRIX YM.
!     CHARACTER*1 I0
!        THE PLOT SYMBOL -0-.
!     INTEGER J
!        AN INDEX VARIABLE.
!     CHARACTER*1 LINE(103)
!        THE VECTOR USED FOR THE PLOT STRING.
!     INTEGER LISYM
!        *
!     INTEGER M
!        THE NUMBER OF COLUMNS OF DATA IN YM.
!     LOGICAL MISS
!        *
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS .
!     INTEGER NSAMPL
!        THE SAMPLING FREQUENCY ACTUALLY USED.
!     INTEGER NUMCOL
!        *
!     INTEGER NUSED
!        THE NUMBER OF ACTIVE OBSERVATIONS.
!     REAL REFPT
!        THE VALUE ZERO, OR THE MEAN OF THE SERIES, WHICH EVER IS
!        REQUESTED, USED AS A PLOT REFERENCE LINE.
!     REAL XINC
!        THE VARIABLE USED TO SPECIFY THE INCREMENT FOR XLABEL.
!     REAL XLABEL
!        THE VALUE USED FOR THE LABELS ON THE RIGHT SIDE OF THE PLOT.
!     REAL XLB
!        THE STARTING VALUE FOR LABELS ON THE RIGHT SIDE OF THE GRAPH.
!     REAL YDMN, YDMX
!        THE Y-AXIS DATA LIMITS ACTUALLY USED.
!     REAL YM(IYM,M)
!        THE VECTOR CONTAINING THE OBSERVED TIME SERIES
!     REAL YMMISS(M)
!        THE USER SUPPLIED CODE WHICH IS USED TO DETERMINE WHETHER OR
!        NOT AN OBSERVATION IN THE SERIES IS MISSING.  IF YM(I) = YMMISS
!        THE VALUE IS ASSUMED MISSING, OTHERWISE IT IS NOT.
!     REAL YMN, YMX
!        THE GRAPH AXIS LOWER AND UPPER LIMITS ACTUALLY USED.
!     REAL YWIDTH
!        THE SCALE INTERVAL OF THE PLOT.
!     REAL YY
!        THE VALUE OF YM ACTUALLY BEING PLOTTED
!
!
      data iblank/' '/, im/'M'/, i0/'0'/
!
!     PRINT PLOT HEADINGS
!
      call iprint(iprt)
     call vphead(nsampl, irlin, ibar,&
    &            refpt, ywidth, ymn, ymx, isize, ilog,&
     &            line, numcol, ilogy, ydmn, ydmx)
      iend = numcol + 2
!
!     COMPUTE REFERENCE POINT OF GRAPH, IF REQUIRED.
!
      if (irlin.ge.0) then
        if (irlin.eq.0) then
!
!         REFERENCE POINT IS ZERO
!
          refpt = 0.0e0
          irefch = i0
        else
!
!         REFERENCE POINT IS MEAN
!
          if (miss) then
            call ameanm(ym, ymmiss(1), n, nused, refpt)
          else
            call amean(ym, n, refpt)
          end if
          if (ilogy.ne.0) refpt = log10(refpt)
          irefch = im
        end if
!
!       COMPUTE LOCATION OF REFPT IN PLOT STRING
!
        call pltplx(refpt, ymn, ywidth, irefpt, iend)
      else
        irefpt = 1
      end if
!
!     BEGIN PLOTTING
!
      iptsym = ischck + 1
      xlabel = xlb
      do 50 i=1,n,nsampl
         call pline(1, iend, iblank, line)
         call setiv(icount, iend, 0)
         ifmiss = .false.
         ipoint = 1
         do 30 j=1,m
           if (miss) then
             ifmiss = (ifmiss .or. (mvchk(ym(i,j),ymmiss(j))))
             if (.not.(mvchk(ym(i,j),ymmiss(j)))) then
               if (ilogy.eq.0) then
                 yy = ym(i,j)
               else
                 yy = log10(ym(i,j))
               end if
               if ((yy.ge.ydmn) .and. (yy.le.ydmx)) then
                call pltplx(yy, ymn, ywidth, ipoint, iend)
                call pltsym(iptsym, i, j, isym, n, ipoint, line, icount)
                ipltch = line(ipoint)
               else
                ipoint = irefpt
                ipltch = iblank
               end if
             end if
           else
             if (ilogy.eq.0) then
               yy = ym(i,j)
             else
               yy = log10(ym(i,j))
             end if
             if ((yy.ge.ydmn) .and. (yy.le. ydmx)) then
                call pltplx(yy, ymn, ywidth, ipoint, iend)
                call pltsym(iptsym, i, j, isym, n, ipoint, line, icount)
                ipltch = line(ipoint)
             else
                ipoint = irefpt
                ipltch = iblank
             end if
           end if
   30    continue
         if ((ibar.ge.1) .and. (.not.ifmiss)) then
            imin = min(ipoint,irefpt)
            imax = max(ipoint,irefpt)
            call pline(imin, imax, ipltch, line)
         else if (irlin.ge.0) then
            line(irefpt) = irefch
         end if
!
         if (ifmiss) then
           write(fmt,1000) numcol, '8H MISSING'
           write(iprt,fmt) xlabel, (line(j), j=1,iend)
         else
           write(fmt,1000) numcol, '1X, G11.5 '
           if (m.eq.1) then
             write(iprt,fmt) xlabel, (line(j),j=1,iend), ym(i,1)
           else
             write(iprt,fmt) xlabel, (line(j),j=1,iend)
           end if
         end if
         xlabel = xlabel + xinc*nsampl
   50 continue
!
      return
!
!     FORMAT STATEMENTS
!
 1000 format('(1X,G11.5,1X,A1,''I'',', i3, 'A1,''I'',A1,',a10,')')
      end
