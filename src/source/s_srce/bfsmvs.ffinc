!BFSMVS
     subroutine bfsmvs(ccov, nlppc, index1, index2, n, iccov, jccov,&
    &   inlppc, jnlppc, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq, ldstak)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE USER CALLABLE ROUTINE FOR TIME SERIES BIVARIATE
!     FOURIER SPECTRUM ANALYSIS OF SERIES WITH MISSING OBSERVATIONS
!     WITH USER INPUT OF THE COVARIANCES RATHER THAN THE SERIES
!     (LONG CALL)
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 2, 1985
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   fmax,fmin
     integer&
    &   iccov,icspc2,index1,index2,inlppc,iphas,jccov,jnlppc,&
     &   ldstak,n,nf,nprt,nw
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   ccov(*),cspc2(*),freq(*),phas(*)
     integer&
     &   lags(*),nlppc(*)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      double precision dstak(12)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   alpha,delta,ymiss1,ymiss2
     integer&
    &   ceven,codd,i,ifp,io,iprt,isym,lagmax,lagmx1,ldsmin,lpcv,&
     &   lw,lwork,ly,m,nall0,spcf1,spcf2,w,work,xaxis,yaxis
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   rstak(12),y1(1),y2(1)
     integer&
     &   istak(12)
     logical&
     &   option(4)
     character&
     &   nmsub(6)*1
!
!  EXTERNAL FUNCTIONS
!      INTEGER
!     +   STKST
!      EXTERNAL STKST
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL BFSDRV,ECVF,IPRINT,LDSCMP,PARZEN,STKCLR,STKSET
!
!  INTRINSIC FUNCTIONS
      intrinsic max
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!  EQUIVALENCES
      equivalence (dstak(1),rstak(1))
      equivalence (dstak(1),istak(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL ALPHA
!        THE DESIRED CONFIDENCE LEVEL.
!     REAL CCOV(ICCOV,JCCOV,*)
!        THE COVARIANCES.
!     INTEGER CEVEN
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE SUMS OF THE AUTOCOVARIANCES FOR EACH LAG.
!     INTEGER CODD
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE DIFFERENCES OF THE AUTOCOVARIANCES FOR EACH LAG.
!     REAL CSPC2(ICSPC2,NW)
!        THE SQUARED COHERENCY COMPONENT OF THE BIVARIATE SPECTRA.
!     REAL DELTA
!        THE SAMPLING INTERVAL.
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     REAL FMAX, FMIN
!        THE MAXIMUM AND MINIMUM FREQUENCY AT WHICH THE
!        SPECTRUM IS TO BE COMPUTED.
!     REAL FREQ(NF)
!        THE VECTOR OF FREQUENCIES AT WHICH THE SPECTRUM IS TO BE
!        COMPUTED.
!     INTEGER I
!        AN INDEX VALUE.
!     INTEGER ICCOV
!        THE FIRST DIMENSION OF THE ARRAY CCOV.
!     INTEGER ICSPC2
!        THE FIRST DIMENSION OF THE ARRAY CSPC2.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER IFP
!        AN INDICATOR FOR STACK ALLOCATION TYPE, WHERE IFP=3 INDICATES
!        REAL AND IFP=4 INDICATES DOUBLE PRECISION.
!     INTEGER INDEX1, INDEX2
!        THE INDICES OF THE COVARIANCES OF THE TWO SERIES.
!     INTEGER IO
!        A VARIABLE USED TO DETERMINE THE AMOUNT OF STORAGE REQUIRED,
!        BASED ON PRINTED OUTPUT REQUESTED.
!     INTEGER IPHAS
!        THE FIRST DIMENSION OF THE ARRAY PHAS.
!     INTEGER IPRT
!        THE LOGICAL UNIT USED FOR PRINTED OUTPUT.
!     INTEGER ISTAK(12)
!        THE INTEGER VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER ISYM
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE ARRAY CONTAINING THE CODE FOR THE PLOT SYMBOLS.
!     INTEGER JCCOV
!        THE SECOND DIMENSION OF THE ARRAY CCOV.
!     INTEGER LAGMAX
!        THE MAXIMUM LAG VALUE TO BE USED.
!     INTEGER LAGMX1
!        LAGMAX+1.
!     INTEGER LAGS(NW)
!        THE ARRAY USED TO STORE THE LAG WINDOW TRUCCATION
!        POINTS USED FOR EACH SET OF SPECTRUM VALUES.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE VECTOR DSTAK IN COMMON CSTAK.
!     INTEGER LPCV
!        THE LENGTH OF THE PLOT CO-ORDINATE VECTORS.
!     INTEGER LW
!        THE LENGTH OF THE VECTOR W.
!     INTEGER LWORK
!        THE LENGTH OF THE VECTOR WORK.
!     INTEGER LY
!        THE LENGTH OF THE VECTORS Y1 AND Y2.
!     INTEGER M
!        THE NUMBER OF SERIES FOR WHICH THE COVARIANCES WERE
!        COMPUTED
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS IN EACH SERIES
!     INTEGER NALL0
!        THE NUMBER OF STACK ALLOCATIONS ON ENTRY.
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES AT WHICH THE SPECTRUM IS
!        TO BE COMPUTED.
!     INTEGER NLPPC(INLPPC,JNLPPC,*)
!        THE NUMBER OF OBSERVATIONS IN EACH COVARIANCE ESTIMATE
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THIS SUBROUTINE.
!     INTEGER NPRT
!        A CODE USED TO SPECIFY THE TYPE OF PLOT.
!        IF NPRT < 0 THE PLOT IS DECIBLES/LINEAR
!        IF NPRT = 0 THE PLOT IS SUPPRESSED.
!        IF NPRT > 0 THE PLOT IS LOG/LINEAR
!     INTEGER NW
!        THE ARGUMENT USED TO DETERMINE THE NUMBER OF DIFFERENT
!        BANDWIDTHS TO BE USED.
!     LOGICAL OPTION(4)
!        AN INDICATOR ARRAY USED TO DESIGNATE WHETHER ANY OF THE
!        FOUR POSSIBLE OPTIONS (F, M, V, OR S) HAVE BEEN USED (TRUE)
!        OR NOT (FALSE).
!     EXTERNAL PARZEN
!        THE SUBROUTINE USED TO COMPUTE THE WINDOW.
!     REAL PHAS(IPHAS,NW)
!        THE PHASE COMPONENT OF THE BIVARIATE SPECTRA.
!     REAL RSTAK(12)
!        THE REAL VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER SPCF1, SPCF2
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE ARRAYS IN WHICH THE SPECTRUM IS STORED.
!     INTEGER W
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE WINDOWS.
!     INTEGER WORK
!        THE STARTING LOCATION IN THE WORK AREA FOR THE VECTOR WORK.
!     INTEGER XAXIS
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE X AXIS VALUES FOR THE SPECTRUM PLOTS.
!     INTEGER YAXIS
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE Y AXIS VALUES FOR THE SPECTRUM PLOTS.
!     REAL YMISS1, YMISS2
!        DUMMY VARIABLES.
!     REAL Y1(1)
!        THE FIRST TIME SERIES.
!     REAL Y2(1)
!        THE SECOND TIME SERIES.
!
!     SET UP NAME ARRAYS
!
     data nmsub(1), nmsub(2), nmsub(3), nmsub(4), nmsub(5), nmsub(6) /&
     &   'B','F','S','M','V','S'/
!
!     SET UP FOR ERROR CHECKING
!
      option(1) = .false.
      option(2) = .true.
      option(3) = .true.
      option(4) = .true.
!
!     SET MAXIMUM LAG VALUE TO BE USED (LAGMAX).
!
      lagmax = n - 1
      if (nw.le.0) go to 20
      lagmax = lags(1)
      do 10 i=1,nw
         lagmax = max(lagmax,lags(i))
   10 continue
   20 continue
      lagmx1 = lagmax + 1
!
      m = 2
!
!     COMPUTE THE MINIMUM ALLOWABLE STACK AREA (LDSMIN)
!
      io = 1
      if (nprt.eq.0) io = 0
!
     call ldscmp(8, 0, io*4*nf, 0, 0, 0, 'S',&
     &  7*lagmax+7+2*nf+io*8*nf, ldsmin)
!
      ly = n
      lpcv = 4*nf
      lw = lagmax + 1
!
!     SET SIZE OF WORK AREA.
!     SET THE NUMBER OF OUTSTANDING STACK ALLOCATIONS (NALL0).
!     SET THE STACK ALLOCATION TYPE (IFP)
!
      call stkset(ldstak, 4)
      nall0 = stkst(1)
!
      ifp = 3
!
!     SET STARTING LOCATIONS IN THE WORK AREA FOR VARIOUS ARRAYS
!
      if ((ldsmin.gt.ldstak) .or. (ldsmin.le.6)) then
         ceven = 1
         codd = 1
         spcf1 = 1
         spcf2 = 1
         w = 1
!
         isym = 1
         xaxis = 1
         yaxis = 1
      else
         ceven = stkget(lagmx1,ifp)
         codd = stkget(lagmx1,ifp)
         spcf1 = stkget(nf,ifp)
         spcf2 = stkget(nf,ifp)
         w = stkget(lw,ifp)
         if (nprt.eq.0) then
            isym = w
            xaxis = w
            yaxis = w
         else
            isym = stkget(lpcv,2)
            xaxis = stkget(lpcv,ifp)
            yaxis = stkget(lpcv,ifp)
         end if
      end if
!
      work = w
      lwork = lw
!
!     CALL THE CONTROLING ROUTINE FOR THE BIVARIATE SPECTRUM ROUTINES
!
     call bfsdrv(y1, y2, ymiss1, ymiss2, ccov, nlppc,&
    &   rstak(spcf1), rstak(spcf2), nf, fmin, fmax, freq, n, nw,&
    &   lagmax, lags, lagmx1, rstak(work), lwork, delta, istak(isym),&
    &   rstak(xaxis), rstak(yaxis), lpcv, alpha, nprt, parzen, iccov,&
    &   jccov, m, index1, index2, cspc2, phas, icspc2, iphas,&
    &   rstak(codd), rstak(ceven), rstak(w), lw, nmsub, ldsmin,&
     &   ldstak, option, n, inlppc, jnlppc, ly)
!
      call stkclr(nall0)
!
!     CHECK FOR ERRORS
!
      if (ierr.ne.0) then
        if (ierr.eq.2) call ecvf(nmsub)
        ierr = 1
        call iprint(iprt)
        write (iprt,1000)
      end if
!
      return
!
!     FORMAT STATEMENTS
!
1000 format (/42h the correct form of the call statement is//&
    &   '       CALL BFSMVS(CCOV, NLPPC, INDEX1, INDEX2, N,'/&
    &   '      +            ICCOV, JCCOV, INLPPC, JNLPPC,'/&
    &   '      +            NW, LAGS, NF, FMIN, FMAX, NPRT,'/&
     &   '      +            CSPC2, ICSPC2, PHAS, IPHAS, FREQ, LDSTAK)')
      end
