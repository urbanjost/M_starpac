!FITPT1
     subroutine fitpt1(n, m, xm, y, pv, sdpv, res, sdres, wt, ixm,&
     &   nnzw, weight, iptout)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBOUTINE PRINTS THE DATA SUMMARY FOR THE NONLINEAR
!     LEAST SQUARES SUBROUTINES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  APRIL 2, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   iptout,ixm,m,n,nnzw
     logical&
     &   weight
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   pv(n),res(n),sdpv(n),sdres(n),wt(n),xm(ixm,m),y(n)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   fplm
     integer&
     &   i,iprt,jcol1,jcolm,k,nmax
!
!  EXTERNAL FUNCTIONS
!      REAL(KIND=WP) ::
!     +   R1MACH
!      EXTERNAL R1MACH
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL IPRINT,OBSSUM
!
!  INTRINSIC FUNCTIONS
      intrinsic min
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL FPLM
!        THE FLOATING POINT LARGEST MAGNITUDE.
!     INTEGER I
!        AN INDEXING VARIABLE.
!     INTEGER IERR
!        THE INTEGER VALUE DESIGNATING WHETHER ANY ERRORS HAVE
!        BEEN DETECTED.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .NE. 0, ERRORS HAVE BEEN DETECTED.
!     INTEGER IPTOUT
!        THE VARIABLE USED TO CONTROL PRINTED OUTPUT.
!     INTEGER IXM
!        THE FIRST DIMENSION OF THE INDEPENDENT VARIABLE ARRAY.
!     INTEGER JCOLM
!        THE LAST COLUMN OF THE INDEPENDENT VARIABLE TO BE PRINTED.
!     INTEGER JCOL1
!        THE FIRST COLUMN OF THE INDEPENDENT VARIABLE TO BE PRINTED.
!     INTEGER K
!        AN INDEX VARIABLE.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NMAX
!        THE MAXIMUM NUMBER OF ROWS TO BE PRINTED.
!     INTEGER NNZW
!        THE NUMBER OF NON ZERO WEIGHTS.
!     REAL PV(N)
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!     REAL RES(N)
!        THE RESIDUALS FROM THE FIT.
!     REAL SDPV(N)
!        THE STANDARD DEVIATION OF THE PREDICTED VALUE.
!     REAL SDRES(N)
!        THE STANDARD DEVIATIONS OF THE RESIDUALS.
!     LOGICAL WEIGHT
!        THE VARIABLE USED TO INDICATE WHETHER WEIGHTED ANALYSIS IS TO
!        BE PERFORMED (TRUE) OR NOT (FALSE).
!     REAL WT(N)
!        THE USER SUPPLIED WEIGHTS.
!     REAL XM(IXM,M)
!        THE ARRAY IN WHICH ONE ROW OF THE INDEPENDENT VARIABLE ARRAY
!        IS STORED.
!     REAL Y(N)
!        THE ARRAY OF THE DEPENDENT VARIABLE.
!
      fplm = r1mach(2)
!
      call iprint(iprt)
!
      write (iprt,1100)
!
      if (weight) then
         write (iprt,1010)
      else
         write (iprt,1000)
      end if
      write (iprt, 1110)
!
!     TEST WHETHER COLUMN VECTOR XM(*, 1) = VECTOR 1.0E0
!
      do 10 i=1,n
         if (xm(i,1).ne.1.0e0) go to 20
   10 continue
      go to 30
!
!     NOT A UNIT VECTOR
!
   20 jcol1 = 1
      jcolm = min(m,3)
      go to 40
!
!     UNIT VECTOR
!
   30 jcolm = min(m,4)
      jcol1 = min(2,jcolm)
   40 k = jcolm - jcol1 + 1
!
      nmax = n
      if ((iptout.eq.1) .and. (n.ge.45)) nmax = min(n,40)
!
!     PRINT OBSERVATION SUMMARY
!
     call obssum(n, m, xm, y, pv, sdpv, res, sdres, wt, ixm,&
     &   weight, k, 1, nmax, jcol1, jcolm)
!
      if (nmax.ge.n) go to 200
!
      do 195 i = 1, 3
!
         go to (160, 170, 180), k
  160    write (iprt,1120)
         go to 190
  170    write (iprt,1130)
         go to 190
  180    write (iprt,1140)
!
  190    continue
         write (iprt, 1150)
         if (weight) write (iprt, 1160)
!
  195 continue
!
!     PRINT LAST LINE OF OUTPUT
!
     call obssum(n, m, xm, y, pv, sdpv, res, sdres, wt, ixm,&
     &   weight, k, n, n, jcol1, jcolm)
!
  200 continue
!
      if ((nnzw.lt.n) .and. (ierr.eq.0)) write (iprt, 1060)
      if ((nnzw.lt.n) .and. (ierr.eq.4)) write (iprt, 1070)
      if ((nnzw.eq.n) .and. (ierr.eq.4)) write (iprt, 1080)
      if ((ierr.gt.0) .and. (ierr.ne.4)) write (iprt, 1090)
!
      return
!
!     FORMAT STATEMENTS
!
1000 format (/53x, 9hdependent, 7x, 9hpredicted, 5x, 12h std dev of ,&
    &   24x, 4hstd /&
    &   2x, 3hrow, 13x, 16hpredictor values, 20x, 8hvariable, 8x,&
     &   6h value, 8x, 12hpred value  , 6x, 9hresidual , 8x, 3hres)
1010 format (/53x, 9hdependent, 7x, 9hpredicted, 5x, 12h std dev of ,&
    &   24x, 4hstd /&
    &   2x, 3hrow, 13x, 16hpredictor values, 20x, 8hvariable, 8x,&
    &   6h value, 8x, 12hpred value  , 6x, 9hresidual , 8x, 3hres,&
     &   4x, 6hweight)
1060 format (// 37h *  nc  -  value not computed because,&
     &   20h the weight is zero.)
1070 format (// 44h *  nc  -  value not computed because either,&
    &   53h the weight or the standard deviation of the residual,&
     &   9h is zero.)
1080 format (// 37h *  nc  -  value not computed because,&
     &   48h the standard deviation of the residual is zero.)
1090 format (// 29h *  nc  -  value not computed,&
    &   54h because convergence problems prevented the covariance,&
     &   28h matrix from being computed.)
 1100 format (//31h results from least squares fit/ 1x, 31('-'))
 1110 format (' ')
 1120 format (4x, '.', 25x, '.')
 1130 format (4x, '.', 3x, 2(14x, '.'))
 1140 format (4x, '.', 10x, '.', 2(14x, '.'))
 1150 format ('+', 49x, 11x, '.', 3(15x, '.'), 11x, '.')
 1160 format ('+', 130x, '.')
      end
