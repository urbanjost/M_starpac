!SETFRQ
      subroutine setfrq (freq, nf, nprt, fmin, fmax, h)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE COMPUTES THE FREQUENCIES AT WHICH THE
!     SPECTRUM IS TO BE ESTIMATED.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 26, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   fmax,fmin,h
     integer&
     &   nf,nprt
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   freq(nf)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   deltaf
     integer&
     &   i
!
!  INTRINSIC FUNCTIONS
      intrinsic log10
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL DELTAF
!        THE FREQUENCY INCREMENT.
!     REAL FMAX, FMIN
!        THE MAXIMUM AND MINIMUM FREQUENCIES AT WHICH THE
!        SPECTRUM IS TO BE ESTIMATED.
!     REAL FREQ(NF)
!        THE VECTOR OF FREQUENCIES AT WHICH THE SPECTRUM IS TO BE
!        ESTIMATED.
!     REAL H
!        THE SAMPLING INTERVAL.
!     INTEGER I
!        AN INDEXING VARIABLE.
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES FOR WHICH THE SPECTRAL ESTIMATES
!        ARE TO BE ESTIMATED.
!     INTEGER NPRT
!        A CODE USED TO SPECIFY THE TYPE OF PLOT, WHERE IF
!        NPRT EQUALS 2 THE FREQUENCY SCALE IS LINEAR, AND IF
!        NPRT EQUALS 3 THE FREQUENCY SCALE IS LOG.
!
      if (nprt .eq. 3) go to 20
!
!     COMPUTE FREQUENCY VALUES FOR LINEAR SCALE
!
      freq(1) = fmin
!
      if (nf .eq. 1) return
!
      deltaf = (fmax - fmin) / (h * (nf - 1))
      do 10 i = 2, nf
         freq(i) = freq(i-1) + deltaf
   10 continue
!
      freq(nf) = fmax
      return
!
   20 continue
!
!     COMPUTE FREQUENCY VALUES FOR LOG SCALE
!
      deltaf = (log10(fmax) - log10(fmin)) / (h * (nf - 1))
!
      freq(1) = fmin
!
      if (nf .eq. 1) return
!
      do 30 i = 2, nf
         freq(i) = 10.0e0**(log10(freq(i-1)) + deltaf)
   30 continue
!
      freq(nf) = fmax
!
!
      return
      end
