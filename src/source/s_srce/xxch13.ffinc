!XXCH13
      subroutine xxch13(ldstak,typ)
      real(kind=wp),intent(in) :: typ
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBPROGRAM PROVIDES A SIMPLE TEST OF
!     THE ARIMA MODELING AND FORECASTING FAMILY OF ROUTINES.
!
!     DATA IS THE AIRLINE DATA LISTED ON PAGE 531 OF BOX AND JENKINS.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  AUGUST 3, 1987
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   ldstak
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      double precision dstak(12)
!
!  LOCAL SCALARS
     integer&
     &   i,iprt,n,nfac,npar
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   air(200),par(10),res(200),y(200)
     integer&
     &   mspec(4,10)
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL AIME,AIMF,IPRINT
!
!  INTRINSIC FUNCTIONS
      intrinsic log
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: AIR(200)
!        THE AIRLINE DATA.
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .GE. 1, ERRORS WERE DETECTED.
!     INTEGER IPRT
!        THE UNIT NUMBER FOR PRINTED OUTPUT.
!     INTEGER LDSTAK
!        THE LENGTH OF DSTAK IN COMMON /CSTAK/.
!     INTEGER MSPEC(4,10)
!        THE ARRAY CONTAINING THE VALUES OF P, D, Q, AND S FOR EACH
!        FACTOR.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NFAC
!        THE NUMBER OF FACTORS IN THE MODEL
!     INTEGER NPAR
!        THE NUMBER OF UNKNOWN PARAMETERS IN THE MODEL.
!     REAL(KIND=WP) :: PAR(10)
!        THE ARRAY IN WHICH THE CURRENT ESTIMATES OF THE UNKNOWN
!        PARAMETERS ARE STORED.
!     REAL(KIND=WP) :: RES(200)
!        THE RESIDUALS FROM THE FIT.
!     REAL(KIND=WP) :: Y(200)
!        THE ARRAY OF THE DEPENDENT VARIABLE.
!
!     DEFINE CONSTANTS
!
     data mspec(1,1), mspec(2,1), mspec(3,1), mspec(4,1)&
     &   /          0,          1,          1,          1/
     data mspec(1,2), mspec(2,2), mspec(3,2), mspec(4,2)&
     &   /          0,          1,          1,         12/
!
     data  air(  1), air(  2), air(  3), air(  4), air(  5), air(  6)&
     &    / 112.0_wp, 118.0_wp, 132.0_wp, 129.0_wp, 121.0_wp, 135.0_wp/
     data  air(  7), air(  8), air(  9), air( 10), air( 11), air( 12)&
     &    / 148.0_wp, 148.0_wp, 136.0_wp, 119.0_wp, 104.0_wp, 118.0_wp/
     data  air( 13), air( 14), air( 15), air( 16), air( 17), air( 18)&
     &    / 115.0_wp, 126.0_wp, 141.0_wp, 135.0_wp, 125.0_wp, 149.0_wp/
     data  air( 19), air( 20), air( 21), air( 22), air( 23), air( 24)&
     &    / 170.0_wp, 170.0_wp, 158.0_wp, 133.0_wp, 114.0_wp, 140.0_wp/
     data  air( 25), air( 26), air( 27), air( 28), air( 29), air( 30)&
     &    / 145.0_wp, 150.0_wp, 178.0_wp, 163.0_wp, 172.0_wp, 178.0_wp/
     data  air( 31), air( 32), air( 33), air( 34), air( 35), air( 36)&
     &    / 199.0_wp, 199.0_wp, 184.0_wp, 162.0_wp, 146.0_wp, 166.0_wp/
     data  air( 37), air( 38), air( 39), air( 40), air( 41), air( 42)&
     &    / 171.0_wp, 180.0_wp, 193.0_wp, 181.0_wp, 183.0_wp, 218.0_wp/
     data  air( 43), air( 44), air( 45), air( 46), air( 47), air( 48)&
     &    / 230.0_wp, 242.0_wp, 209.0_wp, 191.0_wp, 172.0_wp, 194.0_wp/
     data  air( 49), air( 50), air( 51), air( 52), air( 53), air( 54)&
     &    / 196.0_wp, 196.0_wp, 236.0_wp, 235.0_wp, 229.0_wp, 243.0_wp/
     data  air( 55), air( 56), air( 57), air( 58), air( 59), air( 60)&
     &    / 264.0_wp, 272.0_wp, 237.0_wp, 211.0_wp, 180.0_wp, 201.0_wp/
     data  air( 61), air( 62), air( 63), air( 64), air( 65), air( 66)&
     &    / 204.0_wp, 188.0_wp, 235.0_wp, 227.0_wp, 234.0_wp, 264.0_wp/
     data  air( 67), air( 68), air( 69), air( 70), air( 71), air( 72)&
     &    / 302.0_wp, 293.0_wp, 259.0_wp, 229.0_wp, 203.0_wp, 229.0_wp/
     data  air( 73), air( 74), air( 75), air( 76), air( 77), air( 78)&
     &    / 242.0_wp, 233.0_wp, 267.0_wp, 269.0_wp, 270.0_wp, 315.0_wp/
     data  air( 79), air( 80), air( 81), air( 82), air( 83), air( 84)&
     &    / 364.0_wp, 347.0_wp, 312.0_wp, 274.0_wp, 237.0_wp, 278.0_wp/
     data  air( 85), air( 86), air( 87), air( 88), air( 89), air( 90)&
     &    / 284.0_wp, 277.0_wp, 317.0_wp, 313.0_wp, 318.0_wp, 374.0_wp/
     data  air( 91), air( 92), air( 93), air( 94), air( 95), air( 96)&
     &    / 413.0_wp, 405.0_wp, 355.0_wp, 306.0_wp, 271.0_wp, 306.0_wp/
     data  air( 97), air( 98), air( 99), air(100), air(101), air(102)&
     &    / 315.0_wp, 301.0_wp, 356.0_wp, 348.0_wp, 355.0_wp, 422.0_wp/
     data  air(103), air(104), air(105), air(106), air(107), air(108)&
     &    / 465.0_wp, 467.0_wp, 404.0_wp, 347.0_wp, 305.0_wp, 336.0_wp/
     data  air(109), air(110), air(111), air(112), air(113), air(114)&
     &    / 340.0_wp, 318.0_wp, 362.0_wp, 348.0_wp, 363.0_wp, 435.0_wp/
     data  air(115), air(116), air(117), air(118), air(119), air(120)&
     &    / 491.0_wp, 505.0_wp, 404.0_wp, 359.0_wp, 310.0_wp, 337.0_wp/
     data  air(121), air(122), air(123), air(124), air(125), air(126)&
     &    / 360.0_wp, 342.0_wp, 406.0_wp, 396.0_wp, 420.0_wp, 472.0_wp/
     data  air(127), air(128), air(129), air(130), air(131), air(132)&
     &    / 548.0_wp, 559.0_wp, 463.0_wp, 407.0_wp, 362.0_wp, 405.0_wp/
     data  air(133), air(134), air(135), air(136), air(137), air(138)&
     &    / 417.0_wp, 391.0_wp, 419.0_wp, 461.0_wp, 472.0_wp, 535.0_wp/
     data  air(139), air(140), air(141), air(142), air(143), air(144)&
     &    / 622.0_wp, 606.0_wp, 508.0_wp, 461.0_wp, 390.0_wp, 432.0_wp/
!
      call iprint(iprt)
!
      nfac = 2
      n = 144
!
      npar = 3
      par(1) = 0.000
      par(2) = 0.395
      par(3) = 0.615
!
      do 10 i = 1, n
        y(i) = log(air(i))
   10 continue
!
!     RUN SIMPLE TEST OF AIME
!
      write (iprt,1000)
      write (iprt,1100)
      call aime (y, n, mspec, nfac, par, npar, res, ldstak)
      write (iprt,2000) ierr
!
!     RUN SIMPLE TEST OF AIMF
!
      write (iprt,1200)
      call aimf (y, n, mspec, nfac, par, npar, ldstak)
      write (iprt,2000) ierr
!
      return
!
!     FORMAT STATEMENTS
!
 1000 format ('1*CH13')
 1100 format (' SIMPLE TEST OF AIME')
 1200 format ('1SIMPLE TEST OF AIMF')
 2000 format (/' THE VALUE OF IERR IS ', i4)
      end
