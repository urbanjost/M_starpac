!NLCMP
      SUBROUTINE NLCMP (Y, WEIGHT, WT, LWT, N, NPAR, NPARE,
     &   RES, D, RD, COND, VCVL, LVCVL, NNZW, IDF, RSSHLF, RSS, RSD,
     &   YSS, EXACT, PVT, SDPVT, SDREST, ISKULL)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE COMPUTES VARIOUS STATISTICS AND VALUES RETURNED
!     AND/OR PRINTED BY THE NLS FAMILY OF ROUTINES WHEN WEIGHTS ARE
!     INVOLVED.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  APRIL 2, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) ::
     &   COND,RSD,RSS,RSSHLF,YSS
      INTEGER
     &   IDF,LVCVL,LWT,N,NNZW,NPAR,NPARE
      LOGICAL
     &   EXACT,WEIGHT
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     &   D(N,NPAR),PVT(N),RD(N),RES(N),SDPVT(N),SDREST(N),VCVL(LVCVL),
     &   WT(LWT),Y(N)
      INTEGER
     &   ISKULL(10)
!
!  SCALARS IN COMMON
      INTEGER
     &   IERR
!
!  LOCAL SCALARS
      REAL(KIND=WP) ::
     &   FAC,FPLM,RVAR,SM,TJ,WTI,WTSUM,YWTSM,YWTYSM
      INTEGER
     &   I,J,JK,K
!
!  EXTERNAL FUNCTIONS
      REAL(KIND=WP) ::
     &   R1MACH
!       EXTERNAL R1MACH
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL FITEXT
!
!  INTRINSIC FUNCTIONS
      INTRINSIC ABS,MAX,SQRT
!
!  COMMON BLOCKS
      COMMON /ERRCHK/IERR
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL COND
!        THE CONDITION NUMBER OF D.
!     REAL D(N,NPAR)
!        THE FIRST DERIVATIVE OF THE MODEL (JACOBIAN).
!     LOGICAL EXACT
!        AN INDICATOR VALUE USED TO DESIGNATE WHETHER THE FIT
!        WAS EXACT TO MACHINE PRECISION (TRUE) OR NOT (FALSE).
!     REAL FAC
!        A FACTOR USED TO CORRECT FOR ZERO WEIGHTED OBSERVATIONS IN
!        THE VARIANCE COVARIANCE COMPUTATION.
!     REAL FPLM
!        THE FLOATING POINT LARGEST MAGNITUDE.
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IDF
!        THE DEGREES OF FREEDOM IN THE FIT.
!     INTEGER IERR
!        THE VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .GE. 1, ERRORS WERE DETECTED.
!     INTEGER ISKULL(10)
!        AN ERROR MESSAGE INDICATOR VARIABLE.
!     INTEGER J
!        AN INDEX VARIABLE.
!     INTEGER JK
!        THE INDEX OF THE (J,K)TH ELEMENT OF THE VARIANCE-COVARIANCE
!        MATRIX.
!     INTEGER K
!        AN INDEX VARIABLE.
!     INTEGER LVCVL
!        THE DIMENSION OF VECTOR VCVL.
!     INTEGER LWT
!        THE DIMENSION OF VECTOR WT.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NNZW
!        THE NUMBER OF NON ZERO WEIGHTS.
!     INTEGER NPAR
!        THE NUMBER OF PARAMETERS IN THE MODEL.
!     INTEGER NPARE
!        THE NUMBER OF PARAMETERS TO BE OPTIMIZED.
!     REAL PVT(N)
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES.
!     REAL RD(N)
!        THE DIAGONAL ELEMENTS OF THE R MATRIX OF THE Q - R
!        FACTORIZATION OF D.
!     REAL RES(N)
!        THE RESIDUALS FROM THE FIT.
!     REAL RSD
!        THE RESIDUAL STANDARD DEVIATION.
!     REAL RSS
!        THE RESIDUAL SUM OF SQUARES.
!     REAL RSSHLF
!        HALF THE RESIDUAL SUM OF SQUARES.
!     REAL RVAR
!        THE RESIDUAL VARIANCE.
!     REAL SDPVT(N)
!        THE STANDARD DEVIATIONS OF THE PREDICTED VALUES.
!     REAL SDREST(N)
!        THE STANDARDIZED RESIDUALS.
!     REAL SM
!        A VARIABLE USED FOR SUMMATION.
!     REAL TJ
!        ...
!     REAL VCVL(LVCVL)
!        THE LOWER HALF OF THE VARIANCE-COVARIANCE MATRIX, STORED
!        ROW WISE.
!     LOGICAL WEIGHT
!        THE VARIABLE USED TO INDICATE WHETHER WEIGHTED ANALYSIS IS TO
!        BE PERFORMED (TRUE) OR NOT (FALSE).
!     REAL WT(LWT)
!        THE USER SUPPLIED WEIGHTS.
!     REAL WTI
!        THE ACTUAL WEIGHT USED FOR THE ITH OBSERVATION.
!     REAL WTSUM
!        THE SUM OF THE WEIGHTS.
!     REAL Y(N)
!        THE DEPENDENT VARIABLE.
!     REAL YSS
!        THE SUM OF THE SQUARES ABOUT THE MEAN Y VALUE.
!     REAL YWTSM
!        THE SUM OF THE VALUES Y(I)*WT(I), I=1,N.
!     REAL YWTYSM
!        THE SUM OF THE VALUES Y(I)*WT(I)*WT(I), I=1,N.
!
      FPLM = R1MACH(2)
!
!     COMPUTE RESIDUALS
!
      DO 10 I=1,N
         RES(I) = Y(I) - PVT(I)
   10 CONTINUE
!
!     COMPUTE VARIOUS STATISTICS
!
      IDF = NNZW - NPARE
      RSS = 2.0E0*RSSHLF
      RVAR = 0.0E0
      IF (IDF.GE.1) RVAR = RSS/IDF
      RSD = SQRT(RVAR)
      YWTSM = 0.0E0
      YWTYSM = 0.0E0
      WTSUM = 0.0E0
      DO 20 I=1,N
         WTI = 1.0E0
         IF (WEIGHT) WTI = WT(I)
         YWTSM = YWTSM + Y(I)*WTI
         YWTYSM = YWTYSM + Y(I)*WTI*Y(I)
         WTSUM = WTSUM + WTI
   20 CONTINUE
      YSS = MAX(YWTYSM-(YWTSM*YWTSM)/WTSUM,0.0E0)
!
      CALL FITEXT(RSS, YSS, EXACT)
!
      COND = FPLM
      IF (RD(NPARE).NE.0.0E0) COND = ABS(RD(1)/RD(NPARE))
!
      IF (IERR.NE.0) RETURN
!
!     CORRECT FOR DEGREES OF FREEDOM IF NECESSARY BECAUSE OF ZERO
!     WEIGHTED OBSERVATIONS.
!
      IF (N.EQ.NNZW) GO TO 40
!
      FAC = N-NPARE
      IF (IDF.GE.1) FAC = FAC/IDF
      DO 30 I=1,LVCVL
         VCVL(I) = VCVL(I)*FAC
   30 CONTINUE
!
   40 CONTINUE
!
!     IF THE RESIDUAL SUM OF SQUARES IS IDENTICALLY ZERO, THEN
!     NO FURTHER COMPUTATIONS ARE NECESSARY
!
      IF ((IDF.LE.0) .OR. EXACT) RETURN
!
!     IF THE STANDARD DEVIATIONS OF THE PREDICTED VALUES AND
!     STANDARDIZED RESIDUALS ARE NOT SAVED OR PRINTED, THEN NO
!     FURTHER COMPUTATIONS ARE NECESSARY.
!
!     COMPUTE THE STANDARD DEVIATIONS OF THE PREDICTED VALUES (SDPVT)
!
      DO 90 I=1,N
         SM = 0.0E0
         DO 60 J=1,NPARE
            TJ = 0.0E0
            DO 50 K=1,NPARE
               IF (J.GE.K) THEN
                  JK = J*(J-1)/2 + K
               ELSE
                  JK = K*(K-1)/2 + J
               END IF
               TJ = TJ + VCVL(JK)*D(I,K)
   50       CONTINUE
               SM = SM + D(I,J)*TJ
   60    CONTINUE
         IF (SM.LT.0.0E0) SM = 0.0E0
         SDPVT(I) = SQRT(SM)
!
         SDREST(I) = FPLM
         WTI = 1.0E0
         IF (WEIGHT) WTI = WT(I)
         IF (WTI.EQ.0.0E0) GO TO 90
!
         IF (RVAR/WTI-SM.LE.0.0E0) GO TO 70
         GO TO 80
!
!           THEN
!
   70    SDREST(I) = FPLM
         ISKULL(1) = 1
         ISKULL(4) = 1
         IERR = 4
         GO TO 90
!
!           ELSE
!
   80    SDREST(I) = RES(I)/SQRT(RVAR/WTI-SM)
!
!        END IF
!
   90 CONTINUE
!
      RETURN
!
      END
