!DEMOD
      SUBROUTINE DEMOD (Y, N, FD, FC, K, LDSTAK)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE USER CALLABLE ROUTINE TO DEMODULATE SERIES
!     Y AT FREQUENCY FD, TO APPLY A LOW PASS FILTER WITH CUTOFF
!     FREQUENCY FC, AND TO EXTRACT THE AMPLITUDE AND PHASE COMPONENTS
!     OF THE RESULTING FILTERED SERIES (SHORT CALL).
!
!     WRITTEN BY  -  PETER BLOOMFIELD
!                    FOURIER ANALYSIS OF TIME SERIES- AN
!                       INTRODUCTION
!                    JOHN WILEY AND SONS, NEW YORK, 1976
!                    PAGE 147
!     ADAPTED FOR STARPAC BY  -  JANET R. DONALDSON
!                                STATISTICAL ENGINEERING DIVISION
!                                NATIONAL BUREAU OF STANDARDS
!                                BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 26, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) ::
     &   FC,FD
      INTEGER
     &   K,LDSTAK,N
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     &   Y(*)
!
!  SCALARS IN COMMON
      INTEGER
     &   IERR
!
!  ARRAYS IN COMMON
      DOUBLE PRECISION DSTAK(12)
!
!  LOCAL SCALARS
      REAL(KIND=WP) ::
     &   TEMP
      INTEGER
     &   AMPL,HLP,IFP,IPRT,LDSMIN,NALL0,NDEM,PHASE
      LOGICAL
     &   ERR01,ERR02,ERR03,ERR04,ERR05,ERR06,ERR07,HEAD
!
!  LOCAL ARRAYS
      REAL(KIND=WP) ::
     &   RSTAK(12)
      CHARACTER
     &   LFC(8)*1,LFD(8)*1,LK(8)*1,LKIN(8)*1,LLDS(8)*1,LN(8)*1,
     &   LNM1(8)*1,LONE(8)*1,NMSUB(6)*1
!
!  EXTERNAL FUNCTIONS
!      INTEGER
!     +   STKST
!      EXTERNAL STKST
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL DEMDRV,EISGE,EISII,ERIODD,ERSII,ERSLFS,IPRINT,LDSCMP,
!     +   STKCLR,STKSET
!
!  COMMON BLOCKS
      COMMON /CSTAK/DSTAK
      COMMON /ERRCHK/IERR
!
!  EQUIVALENCES
      EQUIVALENCE (DSTAK(1),RSTAK(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     INTEGER AMPL
!        THE STARTING LOCATION IN RSTAK/DSTAK OF
!        THE ARRAY IN WHICH THE AMPLITUDES ARE STORED.
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     LOGICAL ERR01, ERR02, ERR03, ERR04, ERR05, ERR06, ERR07
!        VALUES INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     REAL FC
!        THE CUTOFF FREQUENCY USED FOR THE LOW PASS FILTER.
!     REAL FD
!        THE DEMODULATION FREQUENCY.
!     LOGICAL HEAD
!        A FLAG INDICATING WHETHER THE HEADING SHOULD BE PRINTED
!        (TRUE) OR NOT (FALSE).  IF A HEADING IS PRINTED, THE VALUE
!        OF HEAD WILL BE CHANGED TO FALSE.
!     INTEGER HLP
!        THE STARTING LOCATION IN RSTAK/DSTAK OF
!        THE ARRAY IN WHICH THE LOW PASS FILTER COEFFICIENTS ARE
!        STORED.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED.
!     INTEGER IFP
!        AN INDICATOR FOR STACK ALLOCATION TYPE, WHERE IFP=3 INDICATES
!        REAL AND IFP=4 INDICATES DOUBLE PRECISION.
!     INTEGER IPRT
!        THE UNIT NUMBER USED FOR OUTPUT.
!     INTEGER K
!        THE USER SUPPLIED NUMBER OF TERMS TO BE USED FOR THE LOW
!        PASS FILTER.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     CHARACTER*1 LFC(8), LFD(8), LK(8), LKIN(8), LLDS(8), LN(8),
!    *  LNM1(8), LONE(8)
!        THE ARRAY(S) CONTAINING THE NAME(S) OF INPUT PARAMETER(S)
!        CHECKED FOR ERRORS.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NALL0
!        THE NUMBER OF ALLOCATIONS OUTSTANDING AT THE TIME THIS ROUTINE
!        WAS CALLED.
!     INTEGER NDEM
!        THE NUMBER OF VALUES IN THE DEMODULATED SERIES, I.E., IN
!        THE AMPLITUDE AND PHASE ARRAYS.
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THIS SUBROUTINE.
!     INTEGER PHASE
!        THE STARTING LOCATIONS IN RSTAK/DSTAK OF
!        THE ARRAY CONTAINING THE PRIMARY AND SECONDARY PHASE ESTIMATES.
!     REAL RSTAK(12)
!        THE REAL VERSION OF THE /CSTAK/ WORK AREA.
!     REAL TEMP
!        A TEMPORARY VARIABLE USED FOR TYPE CONVERSION.
!     REAL Y(N)
!        THE INPUT ARRAY CONTAINING THE OBSERVED SERIES.
!
!     SET UP NAME ARRAYS
!
      DATA
     &  NMSUB(1),  NMSUB(2),  NMSUB(3),  NMSUB(4),  NMSUB(5),  NMSUB(6)
     & /     'D',       'E',       'M',       'O',       'D',       ' '/
      DATA
     &  LFC(1), LFC(2), LFC(3), LFC(4), LFC(5), LFC(6), LFC(7), LFC(8)
     & /  'F',   'C',   ' ',   ' ',   ' ',   ' ',   ' ',   ' '/
      DATA
     &  LFD(1), LFD(2), LFD(3), LFD(4), LFD(5), LFD(6), LFD(7), LFD(8)
     & /  'F',   'D',   ' ',   ' ',   ' ',   ' ',   ' ',   ' '/
      DATA
     &  LK(1), LK(2), LK(3), LK(4), LK(5), LK(6), LK(7), LK(8)
     & /  'K',   ' ',   ' ',   ' ',   ' ',   ' ',   ' ',   ' '/
      DATA
     &  LKIN(1), LKIN(2), LKIN(3), LKIN(4), LKIN(5), LKIN(6), LKIN(7),
     &  LKIN(8) /  '(',   '1',   '/',   'K',   ')',   ' ',   ' ',   ' '/
      DATA
     &  LLDS(1), LLDS(2), LLDS(3), LLDS(4), LLDS(5), LLDS(6), LLDS(7),
     &  LLDS(8) /  'L',   'D',   'S',   'T',   'A',   'K',   ' ',   ' '/
      DATA
     &  LN(1), LN(2), LN(3), LN(4), LN(5), LN(6), LN(7), LN(8)
     & /  'N',   ' ',   ' ',   ' ',   ' ',   ' ',   ' ',   ' '/
      DATA
     &  LNM1(1), LNM1(2), LNM1(3), LNM1(4), LNM1(5), LNM1(6), LNM1(7),
     &  LNM1(8) /  '(',   'N',   '-',   '1',   ')',   ' ',   ' ',   ' '/
      DATA
     &  LONE(1), LONE(2), LONE(3), LONE(4), LONE(5), LONE(6), LONE(7),
     &  LONE(8) /  'O',   'N',   'E',   ' ',   ' ',   ' ',   ' ',   ' '/
!
!     PERFORM ERROR CHECKING ON INPUT DATA.
!
      IERR = 0
      HEAD = .TRUE.
!
      CALL EISGE(NMSUB, LN, N, 17, 1, HEAD, ERR01, LN)
!
      CALL ERSII(NMSUB, LFD, FD,
     &           0.0E0, 0.5E0, 2, HEAD, ERR02, LFD, LFD)
!
      ERR03 = .TRUE.
      IF (.NOT. ERR01)
     &  CALL EISII(NMSUB, LK, K, 1, N-1, 1, HEAD, ERR03, LONE, LNM1)
!
      CALL ERIODD(NMSUB, LK, K, 1, HEAD, ERR04)
!
      ERR05 = .TRUE.
      IF ((.NOT. ERR02) .AND. (.NOT. ERR03) .AND. (.NOT. ERR04)) THEN
         TEMP = K
         CALL ERSII(NMSUB, LFC, FC, 1.0E0/TEMP, FD, 1, HEAD, ERR05,
     &              LKIN, LFD)
      END IF
!
      ERR06 = .TRUE.
      IF ((.NOT. ERR03) .AND. (.NOT. ERR04) .AND. (.NOT. ERR05))
     &   CALL ERSLFS(NMSUB, FC, K, HEAD, ERR06)
!
      IF (ERR01 .OR. ERR06) GO TO 10
!
      CALL LDSCMP(3, 0, 0, 0, 0, 0, 'S', K + 3*N, LDSMIN)
!
      CALL EISGE(NMSUB, LLDS, LDSTAK, LDSMIN, 9, HEAD, ERR07, LLDS)
!
!
      IF (ERR02 .OR. ERR03 .OR. ERR04 .OR. ERR05 .OR. ERR07) GO TO 10
      GO TO 20
!
   10 CONTINUE
      IERR = 1
      CALL IPRINT (IPRT)
      WRITE (IPRT, 1000)
      RETURN
!
   20 CONTINUE
      CALL STKSET (LDSTAK, 4)
      NALL0 = STKST(1)
!
      IFP = 3
!
      AMPL = STKGET(N, IFP)
      PHASE = STKGET(2*N, IFP)
      HLP = STKGET(K, IFP)
!
      IF (IERR .EQ. 1) GO TO 10
!
      CALL DEMDRV(Y, N, FD, FC, K, RSTAK(HLP), RSTAK(AMPL),
     &   RSTAK(PHASE), N, NDEM, 1, NMSUB)
!
      CALL STKCLR(NALL0)
!
      IF (IERR .EQ. 1) GO TO 10
!
      RETURN
!
!     FORMAT STATEMENT
!
 1000 FORMAT (/42H THE CORRECT FORM OF THE CALL STATEMENT IS//
     &   '       CALL DEMOD (Y, N, FD, FC, K, LDSTAK)')
!
      END
