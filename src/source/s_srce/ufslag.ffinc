!UFSLAG
      SUBROUTINE UFSLAG (ACOV, LAGMAX, LAGS, N, NW, NWUSED, LACOV)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE COMPUTES THE LAG WINDOW TRUNCATION POINTS FOR
!     SPECTRUM ANALYSIS.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 7, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      INTEGER
     +   LACOV,LAGMAX,N,NW,NWUSED
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP)
     +   ACOV(LACOV)
      INTEGER
     +   LAGS(NW)
!
!  LOCAL SCALARS
      REAL(KIND=WP)
     +   ACOVMX,P95LIM
      INTEGER
     +   I,J,K,LAG,NWM1
!
!  INTRINSIC FUNCTIONS
      INTRINSIC ABS,REAL,SQRT
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL ACOV(LACOV)
!        THE ARRAY IN WHICH THE AUTOCOVARIANCES ARE STORED
!     REAL ACOVMX
!        THE MAXIMUM AUTOCOVARIANCE VALUE.
!     INTEGER I
!        AN INDEX VARIABLE
!     INTEGER J, K
!        INDEX VARIABLES.
!     INTEGER LACOV
!        THE LENGTH OF VECTOR ACOV.
!     INTEGER LAG, LAGMAX
!        THE INDEXING VARIABLE INDICATING THE LAG VALUE OF THE
!        AUTOCOVARIANCE BEING COMPUTED AND THE MAXIMUM LAG TO BE USED,
!        RESPECTIVELY.
!     INTEGER LAGS(NW)
!        THE ARRAY USED TO STORE THE LAG WINDOW TRUCCATION
!        POINTS USED FOR EACH SET OF SPECTRUM VALUES.
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS IN EACH SERIES
!     INTEGER NW
!        THE NUMBER OF DIFFERENT BANDWIDTHS REQUESTED.
!     INTEGER NWM1, NWUSED
!        THE NUMBER OF DIFFERENT BANDWIDTHS MINUS 1, AND THE
!        ACTUAL NUMBER OF BANDWIDTHS ACTUALLY USED.
!     REAL P95LIM
!        THE 95 PERCENT CONFIDENT LIMIT FOR WHITE NOISE.
!
      LAGS(NW) = LAGMAX
      IF (LAGS(NW) .LE. 32) GO TO 30
!
!     COMPUTE 95 PERCENT CONFIDENCE LIMITS ON AUTOCOVARIANCES,
!     ASSUMING WHITE NOISE.
!
      P95LIM = 1.96E0 * ACOV(1) / SQRT(REAL(N))
!
!     CHECK FOR FIRST ACVF EXCEEDING 95 PERCENT LIMIT ON WHITE NOISE
!
      DO 10 I = 1, LAGMAX
         LAG = LAGMAX + 1 - I
         IF (ABS(ACOV(LAG + 1)) .GE. P95LIM) GO TO 30
         LAGS(NW) = LAGS(NW) - 1
   10 CONTINUE
!
!     IF NO ACVF EXCEEDS WHITE NOISE LIMITS, CHECK FOR LARGEST ACVF.
!
      LAGS(NW) = 1
      ACOVMX = ABS(ACOV(2))
      DO 20 LAG = 1, LAGMAX
         IF (ABS(ACOV(LAG + 1)) .LE. ACOVMX) GO TO 20
         LAGS(NW) = LAG
         ACOVMX = ABS(ACOV(LAG + 1))
   20 CONTINUE
!
!     COMPUTE LAG WINDOW TRUNCATION POINTS
!
   30 LAGS(NW) = LAGS(NW) * 3.0E0 / 2.0E0
      IF (LAGS(NW) .LT. 32) LAGS(NW) = 32
      IF (LAGS(NW) .GT. LAGMAX) LAGS(NW) = LAGMAX
      NWUSED = NW
      IF (NW .EQ. 1) RETURN
      NWM1 = NW - 1
      DO 40 I = 1, NWM1
         K = NW - I
         LAGS(K) = LAGS(K + 1) / 2
   40 CONTINUE
!
!     CHECK WHETHER ALL NW LAG WINDOW TRUNCATION POINTS CAN BE USED.
!
      NWUSED = NW
      IF (LAGS(1) .GE. 4) RETURN
!
!     RECONSTURCT -LAGS- VECTOR IF NOT ALL TRUNCATION POINTS ARE
!     TO BE USED
!
      DO 50 I = 2, NW
         NWUSED = NWUSED - 1
         IF (LAGS(I) .GE. 4) GO TO 60
   50 CONTINUE
!
   60 DO 70 I = 1, NWUSED
         J = NW - NWUSED + I
         LAGS(I) = LAGS(J)
   70 CONTINUE
!
      RETURN
      END
