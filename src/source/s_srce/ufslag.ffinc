!UFSLAG
      subroutine ufslag (acov, lagmax, lags, n, nw, nwused, lacov)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE COMPUTES THE LAG WINDOW TRUNCATION POINTS FOR
!     SPECTRUM ANALYSIS.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 7, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   lacov,lagmax,n,nw,nwused
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   acov(lacov)
     integer&
     &   lags(nw)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   acovmx,p95lim
     integer&
     &   i,j,k,lag,nwm1
!
!  INTRINSIC FUNCTIONS
      intrinsic abs,real,sqrt
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: ACOV(LACOV)
!        THE ARRAY IN WHICH THE AUTOCOVARIANCES ARE STORED
!     REAL(KIND=WP) :: ACOVMX
!        THE MAXIMUM AUTOCOVARIANCE VALUE.
!     INTEGER I
!        AN INDEX VARIABLE
!     INTEGER J, K
!        INDEX VARIABLES.
!     INTEGER LACOV
!        THE LENGTH OF VECTOR ACOV.
!     INTEGER LAG, LAGMAX
!        THE INDEXING VARIABLE INDICATING THE LAG VALUE OF THE
!        AUTOCOVARIANCE BEING COMPUTED AND THE MAXIMUM LAG TO BE USED,
!        RESPECTIVELY.
!     INTEGER LAGS(NW)
!        THE ARRAY USED TO STORE THE LAG WINDOW TRUCCATION
!        POINTS USED FOR EACH SET OF SPECTRUM VALUES.
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS IN EACH SERIES
!     INTEGER NW
!        THE NUMBER OF DIFFERENT BANDWIDTHS REQUESTED.
!     INTEGER NWM1, NWUSED
!        THE NUMBER OF DIFFERENT BANDWIDTHS MINUS 1, AND THE
!        ACTUAL NUMBER OF BANDWIDTHS ACTUALLY USED.
!     REAL(KIND=WP) :: P95LIM
!        THE 95 PERCENT CONFIDENT LIMIT FOR WHITE NOISE.
!
      lags(nw) = lagmax
      if (lags(nw) .le. 32) go to 30
!
!     COMPUTE 95 PERCENT CONFIDENCE LIMITS ON AUTOCOVARIANCES,
!     ASSUMING WHITE NOISE.
!
      p95lim = 1.96e0 * acov(1) / sqrt(real(n))
!
!     CHECK FOR FIRST ACVF EXCEEDING 95 PERCENT LIMIT ON WHITE NOISE
!
      do 10 i = 1, lagmax
         lag = lagmax + 1 - i
         if (abs(acov(lag + 1)) .ge. p95lim) go to 30
         lags(nw) = lags(nw) - 1
   10 continue
!
!     IF NO ACVF EXCEEDS WHITE NOISE LIMITS, CHECK FOR LARGEST ACVF.
!
      lags(nw) = 1
      acovmx = abs(acov(2))
      do 20 lag = 1, lagmax
         if (abs(acov(lag + 1)) .le. acovmx) go to 20
         lags(nw) = lag
         acovmx = abs(acov(lag + 1))
   20 continue
!
!     COMPUTE LAG WINDOW TRUNCATION POINTS
!
   30 lags(nw) = lags(nw) * 3.0e0 / 2.0e0
      if (lags(nw) .lt. 32) lags(nw) = 32
      if (lags(nw) .gt. lagmax) lags(nw) = lagmax
      nwused = nw
      if (nw .eq. 1) return
      nwm1 = nw - 1
      do 40 i = 1, nwm1
         k = nw - i
         lags(k) = lags(k + 1) / 2
   40 continue
!
!     CHECK WHETHER ALL NW LAG WINDOW TRUNCATION POINTS CAN BE USED.
!
      nwused = nw
      if (lags(1) .ge. 4) return
!
!     RECONSTURCT -LAGS- VECTOR IF NOT ALL TRUNCATION POINTS ARE
!     TO BE USED
!
      do 50 i = 2, nw
         nwused = nwused - 1
         if (lags(i) .ge. 4) go to 60
   50 continue
!
   60 do 70 i = 1, nwused
         j = nw - nwused + i
         lags(i) = lags(j)
   70 continue
!
      return
      end
