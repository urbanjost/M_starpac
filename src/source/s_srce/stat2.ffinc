!STAT2
      SUBROUTINE STAT2(Y, N, STS, SUMDA, SUMDI, SUMD2, SUMD3, SUMD4)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE COMPUTES FOR A VECTOR Y THE STATISTICS THAT DO
!     NOT REQUIRE SORTING OF THE VECTOR, THAT IS, THOSE NOT COMPUTED
!     BY STAT1.  NO WEIGHTS ARE USED.
!
!     THIS SUBROUTINE IS BASED ON A MODIFICATION OF THE STATIS
!     CODE USED IN OMNITAB, VERSION 5 (6/16/72), WRITTEN BY
!     SALLY PEAVY.  THE ORIGINAL ADAPTATION TO STARPAC WAS
!     DONE BY JANET DONALDSON.
!
!     WRITTEN BY - JOHN E. KOONTZ
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS
!
!     CREATION DATE  -  MAY 17, 1982
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP)
     +   SUMD2,SUMD3,SUMD4,SUMDA,SUMDI
      INTEGER
     +   N
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP)
     +   STS(53),Y(N)
!
!  SCALARS IN COMMON
      INTEGER
     +   IERR
!
!  LOCAL SCALARS
      REAL(KIND=WP)
     +   DIF,T,TA,TK1,TK2
      INTEGER
     +   I,IC,ICI,IDRUNS,IMINUS,IPLUS,IRUN
!
!  EXTERNAL FUNCTIONS
      REAL(KIND=WP)
     +   CDFF,PPFCHS,PPFT
      EXTERNAL CDFF,PPFCHS,PPFT
!
!  INTRINSIC FUNCTIONS
      INTRINSIC ABS,SQRT
!
!  COMMON BLOCKS
      COMMON /ERRCHK/IERR
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL DIF
!        THE SUM OF THE DIFFERENCES BETWEEN SUCCEEDING ELEMENTS
!        IN Y.
!     INTEGER I
!        A LOOP INDEX.
!     INTEGER IC
!        PREVIOUS SIGN IN RUNS CALCULATION.
!     INTEGER ICI
!        CURRENT SIGN IN RUNS CALCULATION.
!     INTEGER IDRUNS
!        THE NUMBER OF RUNS.
!     INTEGER IERR
!        AN ERROR FLAG SET IN COMMON ERRCHK.
!     INTEGER IMINUS, IPLUS
!        COUNTS OF SIGNS OF DEVIATIONS.
!     INTEGER IRUN
!        THE NUMBER OF RUNS UP AND DOWN.
!     INTEGER N
!        INPUT PARAMETER.  THE LENGTH OF Y AND WT.
!     REAL STS(53)
!        OUTPUT PARAMETER.  THE VECTOR OF 53 STATISTICS COMPUTED.
!        ROW STATISTIC                    ROW STATISTIC
!         1  LENGTH OF VECTOR             TESTS FOR NONRANDOMNESS
!         2  NUMBER OF NONZERO WEIGHTS    23  NUMBER OF RUNS UP AND DOWN
!        MEASURES OF LOCATION             24  EXPECTED NUMBER OF RUNS
!         3  UNWEIGHTED MEAN              25  S.D. OF NUMBER OF RUNS
!         4  WEIGHTED MEAN                26  MEAN SQR. SUCCESSIVE DIFF.
!         5  MEDIAN                       27  MEAN SQR. SUCC. DIFF./VAR.
!         6  MID-RANGE                    DEVIATIONS FROM WTD MEAN
!         7  25 P.C. UNWTD. TRIMMED MEAN  28  NUMBER OF + SIGNS
!         8  25 P.C. WTD. TRIMMED MEAN    29  NUMBER OF - SIGNS
!        MEASURES OF DISPERSION           30  NUMBER OF RUNS
!         9  STANDARD DEVIATION (S.D.)    31  EXPECTED NUMBER OF RUNS
!        10  S.D. OF MEAN                 32  S.D. OF RUNS
!        11  RANGE                        33  DIFF./S.D. OF RUNS
!        12  MEAN VARIATION               OTHER STATISTICS
!        13  VARIANCE (VAR.)              34  MINIMUM
!        14  COEFFICIENT OF VARIATION     35  MAXIMUM
!        CONFIDENCE INTERVALS             36  BETA 1
!        15  LOWER CONFIDENCE LIMIT, MEAN 37  BETA 2
!        16  UPPER CONFIDENCE LIMIT, MEAN 38  WTD. SUM OF VALUES
!        17  LOWER CONFIDENCE LIMIT, S.D. 39  WTD. SUM OF SQUARES
!        18  UPPER CONFIDENCE LIMIT, S.D. 40  WTD. SUM OF SQRD. DEVS.
!        LINEAR TREND STATISTICS          41  STUDENTS T
!        19  SLOPE                        42  WTD. SUM OF ABS. VALUES
!        20  S.D. OF SLOPE                43  WTD. AVG. ABS. VALUES
!        21  SLOPE/S.D. OF SLOPE = T      44-53 FREQ. DISTRIBUTION
!        22  PROB ( X .GT. ABS(OBS. T))
!     REAL SUMDA
!        INPUT PARAMETER.  THE SUM OF THE ABSOLUTE VALUES OF THE
!        DIFFERENCES DIFF.
!     REAL SUMDI
!        INPUT PARAMETER.  THE SUM OF THE PRODUCTS OF I AND THE
!        ITH DIFFERENCE DIFF.
!     REAL SUMD2
!        INPUT PARAMETER.  THE SUM OF THE SQUARES OF THE
!        DIFFERENCES DIFF.
!     REAL SUMD3
!        INPUT PARAMETER.  THE SUM OF THE CUBES OF THE
!        DIFFERENCES DIFF.
!     REAL SUMD4
!        INPUT PARAMETER.  THE SUM OF THE HYPERCUBES OF THE
!        DIFFERENCES DIFF.
!     REAL T
!        A RESIDUAL (Y(I) - MEANY)
!     REAL TA
!        A TEMPORARY VARIABLE IN THE RUNS CALCULATION.
!     REAL TK1, TK2
!        CHI-SQUARED VALUES.
!     REAL Y(N)
!        INPUT PARAMETER.  A SET OF N DATA POINTS, SORTED
!        INTO ASCENDING ORDER.
!
!
!     BEGIN STORAGE OF STATISTICS.
!
      STS(1) = N
      STS(2) = STS(1)
      STS(24) = (2.0E0*STS(1)-1.0E0)/3.0E0
      STS(25) = SQRT((16.0E0*STS(1)-29.0E0)/90.0E0)
      STS(43) = STS(42)/STS(1)
!
!     COMPUTE RESIDUALS AND STANDARD DEVIATIONS.
!
      ICI = 0
      IPLUS = 0
      IMINUS = 0
      IDRUNS = 0
      IC = 0
      DO 30 I=1,N
         T = Y(I) - STS(4)
         IF (T.LT.0.0E0) GO TO 10
         IPLUS = IPLUS + 1
         ICI = +1
         GO TO 20
   10    IMINUS = IMINUS + 1
         ICI = -1
   20    IF (IC.EQ.ICI) GO TO 30
         IC = ICI
         IDRUNS = IDRUNS + 1
   30 CONTINUE
      STS(28) = IPLUS
      STS(29) = IMINUS
      STS(31) = 1.0E0 + (2.0E0*STS(28)*STS(29)/STS(1))
      STS(32) = SQRT((2.0E0*STS(28)*STS(29)*
     +                 (2.0E0*STS(28)*STS(29) -
     +                  STS(28)-STS(29)))/
     +            ((STS(28)+STS(29))**2*(STS(1)-1.0E0)))
      STS(30) = IDRUNS
      STS(33) = 0.0E0
      IF (STS(32).NE.0.0E0)
     +   STS(33) = (STS(30)-STS(31))/STS(32)
      STS(13) = SUMD2/(STS(1)-1.0E0)
      STS(9) = SQRT(STS(13))
      STS(10) = STS(9)/SQRT(STS(1))
      IF (STS(4).NE.0.0E0)
     +   STS(14) = 100.0E0*ABS(STS(9)/STS(4))
      IF (STS(4).EQ.0.0E0) STS(14) = 0.0E0
      STS(36) = 0.0E0
      IF (SUMD2.GT.0.0E0)
     +   STS(36) = (SUMD3/STS(1))**2/((SUMD2/STS(1))**3)
      STS(37) = 0.0E0
      IF (SUMD2.GT.0.0E0)
     +   STS(37) = (SUMD4/STS(1))/((SUMD2/STS(1))**2)
      STS(40) = SUMD2
      STS(19) = (12.0E0*SUMDI)/(STS(1)*(STS(1)**2-1.0E0))
      STS(20) = (1.0E0/(STS(1)-2.0E0)*
     +             (12.0E0*(SUMD2/(STS(1)*(STS(1)**2-1.0E0)))-
     +              STS(19)**2))
      IF (STS(20).LE.0.0E0) STS(20) = 0.0E0
      STS(20) = SQRT(STS(20))
      IF (STS(20).EQ.0.0E0) STS(21) = 0.0E0
      IF (STS(20).GT.0.0E0) STS(21) = STS(19)/STS(20)
!
      STS(22) = 1.0E0 - CDFF(STS(21)*STS(21), 1.0E0, STS(1)-2.0E0)
!
!     COMPUTE NUMBER OF RUNS IN THE DATA.
!
      DIF = 0.0E0
      IRUN = 1
      TA = 0.0E0
      DO 40 I=1,N
         IF (I.GE.N) GO TO 50
         TA = Y(I+1) - Y(I)
         IF (TA.NE.0.0E0) GO TO 50
   40 CONTINUE
   50 DO 60 I=1,N
         IF (I.EQ.N) GO TO 60
         T = Y(I+1) - Y(I)
         DIF = DIF + T*T
         IF (TA*T.GE.0.0E0) GO TO 60
         TA = T
         IRUN = IRUN + 1
   60 CONTINUE
      STS(23) = IRUN
      STS(26) = DIF/(STS(1)-1.0E0)
      STS(27) = 0.0E0
      IF (STS(13).NE.0.0E0)
     +   STS(27) = STS(26)/STS(13)
      STS(41) = 0.0E0
      IF (STS(9).NE.0.0E0)
     +   STS(41) = (STS(4)*SQRT(STS(1)))/STS(9)
      STS(12) = SUMDA/STS(1)
      T = PPFT(0.975E0, N-1)
      TK1 = PPFCHS(0.975E0, N-1)
      TK2 = PPFCHS(0.025E0, N-1)
      STS(15) = STS(4) - T*STS(10)
      STS(16) = STS(4) + T*STS(10)
      STS(17) = SQRT((STS(1)-1.0E0)/TK1)*STS(9)
      STS(18) = SQRT((STS(1)-1.0E0)/TK2)*STS(9)
      RETURN
      END
