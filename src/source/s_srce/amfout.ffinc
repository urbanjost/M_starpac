!AMFOUT
     subroutine amfout(f, fsd, n, nfcst, ifcsto, ifo, nfcsto, y,&
     &  t975, page)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE PRODUCES ARIMA FORECASTING OUTPUT
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 2, 1985
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   t975
     integer&
     &   ifo,n,nfcst,nfcsto
     logical&
     &   page
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   f(*),fsd(*),y(*)
     integer&
     &   ifcsto(*)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   fl,fu,scale,ymn,ymx
     integer&
     &   i,iend,if,ilim,inter,ipf,ipfl,ipfu,iprt,ipy,iy,j
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   ylim(4)
     character&
     &   line(53)*1
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL AMFHDR,IPRINT
!
!  INTRINSIC FUNCTIONS
      intrinsic int,max,min
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL F(NFCST)
!        THE FORECASTS.
!     REAL FL
!        THE LOWER 95 PERCENT CONFIDENCE LIMIT FOR THE FORECAST
!     REAL FSD(NFCST)
!        THE STANDARD DEVIATIONS OF THE FORECASTS.
!     REAL FU
!        THE UPPER 95 PERCENT CONFIDENCE LIMIT FOR THE FORECAST
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IEND
!        THE LAST LOCATION IN THE PLOT STRING.
!     INTEGER IF
!        AN INDEX VARIABLE.
!     INTEGER IFCSTO(NFCSTO)
!        THE INDICES OF THE ORIGINS FOR THE FORECASTS.
!     INTEGER IFO
!        THE INDEX OF THE ORIGIN BEING USED.
!     INTEGER ILIM
!        THE NUMBER OF LOCATIONS IN YLIM.
!     INTEGER INTER
!        THE NUMBER OF PLOT INTERVALS.
!     INTEGER IPF
!        THE LOCATION IN THE PLOT STRING OF THE FORECAST.
!     INTEGER IPFL
!        THE LOCATION IN THE PLOT STRING OF THE FORECAST LOWER
!        CONFIDENCE LIMIT.
!     INTEGER IPFU
!        THE LOCATION IN THE PLOT STRING OF THE FORECAST UPPER
!        CONFIDENCE LIMIT.
!     INTEGER IPRT
!        THE UNIT NUMBER FOR PRINTED OUTPUT.
!     INTEGER IPY
!        THE LOCATION IN THE PLOT STRING OF THE OBSERVED VALUE.
!     INTEGER IY
!        AN INDEX VARIABLE.
!     INTEGER J
!        AN INDEX VARIABLE.
!     CHARACTER*1 LINE(53)
!        THE ARRAY OF SYMBOLS TO BE PLOTTED.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NFCST
!        THE NUMBER OF FORECASTS.
!     INTEGER NFCSTO
!        THE NUMBER OF THE ORIGINS.
!     LOGICAL PAGE
!        THE VARIABLE USED TO INDICATE WHETHER A GIVEN SECTION OF
!        THE OUTPUT IS TO BEGIN ON A NEW PAGE (TRUE) OR NOT (FALSE).
!     REAL SCALE
!        THE PLOT SCALE.
!     REAL T975
!        THE VALUE OF THE 97.5 PERCENT POINT FUNCTION FOR THE
!        T DISTRIBUTION.
!     REAL Y(N)
!        THE DEPENDENT VARIABLE.
!     REAL YLIM(4)
!        THE VALUES OF THE AXIS LABELS.
!     REAL YMN
!        THE MINIMUM VALUE TO BE PLOTTED.
!     REAL YMX
!        THE MAXIMUM VALUE TO BE PLOTTED.
!
!     SET VARIABLES FOR PLOTS
!
      call iprint(iprt)
      inter = 50
      iend = inter + 1
      ilim = 4
!
!     COMPUTE SCALE FOR PLOT
!
      ymn = f(nfcst)-t975*fsd(nfcst)
      ymx = f(nfcst)+t975*fsd(nfcst)
      iy = ifcsto(ifo)
      do 10 i = 1, nfcst
        ymn = min(ymn, f(i)-t975*fsd(i))
        ymx = max(ymx, f(i)+t975*fsd(i))
        if ((iy.ge.1) .and. (iy.le.n)) then
          ymn = min(ymn, y(iy))
          ymx = max(ymx, y(iy))
          iy = iy + 1
        end if
   10 continue
      if (ifcsto(ifo).ge.2) then
        do 20 iy = max(ifcsto(ifo)-4, 1), ifcsto(ifo)-1
          ymn = min(ymn, y(iy))
          ymx = max(ymx, y(iy))
   20   continue
      end if
!
      scale = (ymx-ymn) / inter
!
!     PRINT PLOT HEADINGS
!
      do 30 i = 1, ilim
        ylim(i) = ymn + scale*i*10.0e0
   30 continue
!
      call amfhdr(page, .true., 0)
      write (iprt, 1030) ifo
     write (iprt, 1000) ymn, ylim(2), ylim(4),&
     &  ylim(1), ylim(4), ymx
!
!     BEGIN PLOTTING
!
      do 80 i=max(ifcsto(ifo)-4,1), ifcsto(ifo)+nfcst
         if (i.ne.ifcsto(ifo)) then
           do 40 j = 1, iend
             line(j) = ' '
   40      continue
         else
           do 50 j = 1, iend
             line(j) = '.'
   50      continue
         end if
         if (i.le.ifcsto(ifo)) then
           ipy = int(((y(i)-ymn) / scale) + 1.5e0)
           line(ipy) = '*'
           write (iprt, 1020) i, (line(j),j=1,iend), i, y(i)
         else
           if = i-ifcsto(ifo)
           fl = f(if) - t975*fsd(if)
           fu = f(if) + t975*fsd(if)
           if (i.le.n) then
             ipfl = int(((fl-ymn) / scale) + 1.5e0)
             ipfu = int(((fu-ymn) / scale) + 1.5e0)
             do 60 j = ipfl, ipfu
               line(j) = '-'
   60        continue
             line(ipfl) = '('
             line(ipfu) = ')'
             ipy = int(((y(i)-ymn) / scale) + 1.5e0)
             line(ipy) = '*'
             ipf = int(((f(if)-ymn) / scale) + 1.5e0)
             if (ipf.ne.ipy) then
               line(ipf) = 'X'
             else
               line(ipf) = '2'
             end if
            write (iprt, 1010) i, (line(j),j=1,iend), i,&
     &         f(if), fl, fu, y(i)
           else
             ipfl = int(((fl-ymn) / scale) + 1.5e0)
             ipfu = int(((fu-ymn) / scale) + 1.5e0)
             do 70 j = ipfl, ipfu
               line(j) = '-'
   70        continue
             line(ipfl) = '('
             line(ipfu) = ')'
             ipf = int(((f(if)-ymn) / scale) + 1.5e0)
             line(ipf) = 'X'
            write (iprt, 1010) i, (line(j),j=1,iend), i,&
     &         f(if), fl, fu
           end if
         end if
   80 continue
!
      return
!
!     FORMAT STATEMENTS
!
1000 format (//&
    &  82x, ' --------------------95  PERCENT'/&
    &  1x, 3(g15.8, 5x), 21x,&
    &  ' --------------CONFIDENCE LIMITS',&
    &  ' ---------ACTUAL'/&
    &  11x, 2(g15.8, 5x), g15.8,&
    &  ' ------FORECASTS ----------LOWER',&
    &  ' ----------UPPER -------IF KNOWN'/&
    &  9x, 5('I---------'), 'I', 6x,&
    &  ' ------------[X] ------------[(]',&
     &  ' ------------[)] ------------[*]')
 1010 format (2x, i5, 1x, 'I', 51a1, 'I', i5, 4(1x, g15.8))
 1020 format (2x, i5, 1x, 'I', 51a1, 'I', i5, 49x, g15.8)
 1030 format (//' FORECASTS FOR ORIGIN ', i2)
!
      end
