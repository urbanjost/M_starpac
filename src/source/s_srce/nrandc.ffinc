!NRANDC
      subroutine nrandc(y, n, iseed, ymean, sigma)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE GENERATES N NORMALLY DISTRIBUTED PSEUDO-
!     RANDOM NUMBERS WITH MEAN YMEAN AND STANDARD DEVIATION SIGMA.  THE
!     NUMBERS GENERATED ARE DETERMINED BY ISEED.  THEY ARE RETURNED IN Y
!
!     ORIGIN - CONCEIVED BY DR. PETER TRYON TO FACILITATE USE OF
!          EXISTING RANDOM NUMBER GENERATOR
!
!     WRITTEN BY -
!          JOHN E. KOONTZ AND JANET R. DONALDSON
!          STATISTICAL ENGINEERING DIVISION
!          NATIONAL BUREAU OF STANDARDS,
!          BOULDER, COLORADO 80302
!
!     CREATION DATE  -  DECEMBER 2, 1985
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   sigma,ymean
     integer&
     &   iseed,n
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   y(*)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     integer&
     &   i,iprt,iseedu
     logical&
     &   err01,err02,head
!
!  LOCAL ARRAYS
     character&
     &   ln(8)*1,lone(8)*1,lsigma(8)*1,lzero(8)*1,nmsub(6)*1
!
!  EXTERNAL FUNCTIONS
!     REAL(TYPE=WP) :: RANDN
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL EISGE,EISRNG,ERSGE,IPRINT
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     LOGICAL ERR01, ERR02
!        VALUE(S) INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     LOGICAL HEAD
!        A FLAG INDICATING WHETHER THE HEADING SOULD BE PRINTED
!        (TRUE) OR NOT (FALSE).  IF A HEADING IS PRINTED, THE VALUE
!        OF HEAD WILL BE CHANGED TO FALSE.
!     INTEGER I
!          THE INDEX OF THE COMPUTING LOOP
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THEIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .EQ. 1, ERRORS HAVE BEEN FOUND.
!     INTEGER IPRT
!        THE STANDARD OUTPUT FILE UNIT NUMBER
!     INTEGER ISEED
!        THE ISEED TO THE RANDOM NUMBER GENERATOR.
!        ISEED MUST LIE BETWEEN 0 AND 2**((MIN(32,I1MACH(8)+1))-1) -1,
!        INCLUSIVE.  IF ISEED IS NOT EQUAL TO 0, ISEED MUST BE ODD.
!     INTEGER ISEEDU
!        THE VALUE OF THE SEED ACTUALLY USED.
!     CHARACTER*1 LN(8), LONE(8), LSIGMA(8), LZERO(8)
!        THE ARRAY(S) CONTAINING THE NAME(S) OF THE VARIABLES(S) CHECKED
!        FOR ERRORS
!     INTEGER N
!        THE LENGTH OF DATA SET GENERATED
!     CHARACTER*1 NMSUB(6)
!        THE NAME OF THIS SUBROUTINE
!     REAL(KIND=WP) :: SIGMA
!        THE STANDARD DEVIATION OF THE GENERATED VALUES.
!     REAL(KIND=WP) :: Y(N)
!        THE GENERATED RANDOM VALUES.
!     REAL(KIND=WP) :: YMEAN
!        THE MEAN OF THE GENERATED VALUES.
!
     data  nmsub(1), nmsub(2), nmsub(3), nmsub(4), nmsub(5), nmsub(6)&
     &   /       'N',      'R',      'A',      'N',      'D',      'C'/
     data     ln(1),    ln(2),    ln(3),    ln(4),    ln(5),    ln(6),&
     &         ln(7),    ln(8)/'N', ' ', ' ', ' ', ' ', ' ', ' ', ' '/
     data   lone(1),  lone(2),  lone(3),  lone(4),  lone(5),  lone(6),&
     &       lone(7),  lone(8)/'O', 'N', 'E', ' ', ' ', ' ', ' ', ' '/
     data lsigma(1),lsigma(2),lsigma(3),lsigma(4),lsigma(5),lsigma(6),&
     &     lsigma(7),lsigma(8)/'S', 'I', 'G', 'M', 'A', ' ', ' ', ' '/
     data  lzero(1), lzero(2), lzero(3), lzero(4), lzero(5), lzero(6),&
     &      lzero(7), lzero(8)/'Z', 'E', 'R', 'O', ' ', ' ', ' ', ' '/
!
      ierr = 0
!
      head = .true.
!
!     CHECK FOR INPUT ERRORS
!
      call eisge(nmsub, ln, n, 1, 2, head, err01, lone)
      call ersge(nmsub, lsigma, sigma, 0.0_wp, 2, head, err02, lzero)
      call eisrng(nmsub, iseed, iseedu, head)
!
      if (err01.or.err02) then
!
        call iprint(iprt)
        write (iprt,1000)
        ierr = 1
!
      else
!
!     GENERATE THE PSEUDO-RANDOM NUMBERS
!
        y(1) = randn(iseedu,typ=0.0_wp)
        do 20 i=1,n
           y(i) = randn(0,typ=0.0_wp)*sigma + ymean
   20   continue
      end if
!
      return
!
!     FORMAT STATEMENTS
!
1000 format (/42h the correct form of the call statement is//&
     &   '       CALL NRANDC (Y, N, ISEED, YMEAN, SIGMA)')
      end
