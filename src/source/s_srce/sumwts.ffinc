!SUMWTS
     subroutine sumwts(x, w, n, nnzw, alpha, sumt1, sumtw1, xtrm,&
     &   xtrmw)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     A ROUTINE TO CALCULATE THE WEIGHTED AND UNWEIGHTED MEANS
!     FOR A SORTED VECTOR IN WHICH THE MIDTH ELEMENT IS THE
!     ELEMENT CLOSEST TO ZERO.  USED BY THE STAT FAMILY.
!
!     WRITTEN BY - JOHN E. KOONTZ
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  MAY 17, 1982
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   alpha,sumt1,sumtw1,xtrm,xtrmw
     integer&
     &   n,nnzw
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   w(n),x(n)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   sumw
     integer&
     &   curhi,curlo,i,irev,ithi,itlo,mid,nalpha,num
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL SUMBS
!
!  INTRINSIC FUNCTIONS
      intrinsic abs,max,min
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: ALPHA
!        INPUT PARAMETER.  THE PERCENTAGE OF POINTS TO TRIM
!        FROM EACH END OF THE ARRAY X FOR THE TRIMMED MEAN.
!     INTEGER CURHI
!        THE UPPER BOUND OF THE CURRENT INTERVAL.
!     INTEGER CURLO
!        THE LOWER BOUND OF THE CURRENT INTERVAL.
!     INTEGER I
!        LOOP PARAMETER.
!     INTEGER IREV
!        A VARIABLE WHICH RUNS IN THE SAME INTERVAL AS I, BUT
!        IN THE REVERSE ORDER.
!     INTEGER ITHI
!        THE COMPUTED UPPER BOUND SUCH THAT ALPHA PER
!        CENT OF THE POSITIVELY WEIGHTED POINTS ARE
!        OMITTED.
!     INTEGER ITLO
!        THE COMPUTED LOWER BOUND SUCH THAT ALPHA PER
!        CENT OF THE POSITIVELY WEIGHTED POINTS ARE
!        OMITTED.
!     INTEGER MID
!        THE INDEX OF THE ELEMENT IN X CLOSEST TO ZERO IN VALUE.
!        THE POINT OUT FROM WHICH THE SUMMING IS DONE.
!     INTEGER N
!        INPUT PARAMETER.  THE LENGTH OF THE ARRAY X.
!     INTEGER NALPHA
!          THE INTEGER WHICH IS ALPHA PER CENT OF N.
!     INTEGER NNZW
!        INPUT PARAMETER.  THE NUMBER OF POSITIVELY WEIGHTED
!        VALUES IN X.
!     INTEGER NUM
!        THE NUMBER OF POINTS OMITTED SO FAR.
!     REAL(KIND=WP) :: SUMTW1
!        OUTPUT PARAMETER.  THE WEIGHTED SUM OF THE TRIMMED ARRAY
!        X.
!     REAL(KIND=WP) :: SUMT1
!        OUTPUT PARAMETER.  THE UNWEIGHTED SUM OF THE TRIMMED
!        ARRAY.  ZERO-WEIGHTED ELEMENTS ARE OMITTED.
!     REAL(KIND=WP) :: SUMW
!        THE SUM OF THE WEIGHTS W(I).
!     REAL(KIND=WP) :: W(N)
!        INPUT PARAMETER.  THE ARRAY OF WEIGHTS.
!     REAL(KIND=WP) :: X(N)
!        INPUT PARAMETER.  THE DATA ARRAY X IN WHICH THE SUMS ARE TAKEN.
!     REAL(KIND=WP) :: XTRM
!        OUTPUT PARAMETER.  THE UNWEIGHTED, TRIMMED MEAN OF X.
!     REAL(KIND=WP) :: XTRMW
!        OUTPUT PARAMETER.  THE WEIGHTED, TRIMMED MEAN OF X.
!
!     SET UP LIMITS TRIMMING THE NUMBER OF NON-ZERO WEIGHTED
!     VALUES BY ALPHA PER CENT AT EACH END OF THE RANGE OF
!     VALUES.
!
      nalpha = alpha*nnzw
      num = 0
      do 10 i=1,n
         if (w(i).eq.0.0e0) go to 10
         num = num + 1
         if (num.eq.nalpha+1) go to 20
   10 continue
   20 itlo = i
      num = 0
      do 30 i=1,n
         irev = n - i + 1
         if (w(irev).eq.0.0e0) go to 30
         num = num + 1
         if (num.eq.nalpha+1) go to 40
   30 continue
   40 ithi = irev
      call sumbs(x, n, itlo, mid, ithi)
!
!     INITIALIZE SUMMATION VARIABLES.
!
      sumt1 = 0.0e0
      sumtw1 = 0.0e0
      sumw = 0.0e0
      if (w(mid).eq.0.0e0) go to 50
      sumt1 = x(mid)
      sumtw1 = w(mid)*x(mid)
      sumw = w(mid)
   50 curlo = mid - 1
      curhi = mid + 1
!
!     SUM OUTWARDS, BOULDER, COLORADO FROM THE VALUE NEAREST ZERO.  THAT
!     THE LEAST IN MAGNITUDE TO THE GREATEST.
!
   60 if (curhi.gt.ithi .or. curlo.lt.itlo) go to 100
      if (abs(x(curhi)).lt.abs(x(curlo))) go to 80
      if (w(curlo).eq.0.0e0) go to 70
      sumt1 = sumt1 + x(curlo)
      sumtw1 = sumtw1 + w(curlo)*x(curlo)
      sumw = sumw + w(curlo)
   70 curlo = curlo - 1
      go to 60
   80 if (w(curhi).eq.0.0e0) go to 90
      sumt1 = sumt1 + x(curhi)
      sumtw1 = sumtw1 + w(curhi)*x(curhi)
      sumw = sumw + w(curhi)
   90 curhi = curhi + 1
      go to 60
!
!     SUM UP ANY VALUES WHICH MAY REMAIN BECAUSE OF AN OFF
!     CENTER ZERO POINT.
!
  100 if (curhi.gt.ithi) go to 120
      curhi = max(curhi,itlo)
      do 110 i=curhi,ithi
         if (w(i).eq.0.0e0) go to 110
         sumt1 = sumt1 + x(i)
         sumtw1 = sumtw1 + w(i)*x(i)
         sumw = sumw + w(i)
  110 continue
  120 if (curlo.lt.itlo) go to 140
      curlo = min(curlo,ithi)
      do 130 irev=itlo,curlo
         i = itlo - irev + curlo
         if (w(i).eq.0.0e0) go to 130
         sumt1 = sumt1 + x(i)
         sumtw1 = sumtw1 + w(i)*x(i)
         sumw = sumw + w(i)
  130 continue
  140 xtrm = sumt1/(nnzw-2*nalpha)
      xtrmw = sumtw1/sumw
      return
      end
