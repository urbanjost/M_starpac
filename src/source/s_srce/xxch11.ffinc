!XXCH11
      subroutine xxch11(ldstak,typ)
      real(kind=wp),intent(in) :: typ
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBPROGRAM PROVIDES A SIMPLE TEST OF
!     THE COMPLEX DEMODULATION FAMILY OF ROUTINES.
!
!     DATA IS THE WOLF SUMSPOT NUMBERS FOR THE YEARS 1700 TO 1960 AS
!     TABULATED BY WALDMEIER [1961].
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  AUGUST 3, 1987
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   ldstak
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      double precision dstak(12)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   fc,fd
     integer&
     &   iprt,k,n
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   y(300)
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL DEMOD,IPRINT
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     REAL(KIND=WP) :: FC
!        THE CUTOFF FREQUENCY USED FOR THE LOW PASS FILTER.
!     REAL(KIND=WP) :: FD
!        THE DEMODULATION FREQUENCY.
!     INTEGER IERR
!        A COMMON VARIABLE USED AS A FLAG TO INDICATE WHETHER
!        OR NOT THERE ARE ANY ERRORS, IF =0 THEN NO ERRORS.
!     INTEGER IPRT
!        LOGICAL OUTPUT UNIT.
!     INTEGER K
!        THE NUMBER OF TERMS IN THE SYMETRIC LINEAR FILTER.
!     INTEGER LDSTAK
!        THE LENGTH OF DSTAK IN COMMON /CSTAK/.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     REAL(KIND=WP) :: Y(300)
!        THE LOG OF THE AIRLINE DATA.
!
!
     data   y(  1),  y(  2),  y(  3),  y(  4),  y(  5),  y(  6)&
     &    /     5.0_wp, 11.0_wp, 16.0_wp, 23.0_wp, 36.0_wp, 58.0_wp/
     data   y(  7),  y(  8),  y(  9),  y( 10),  y( 11),  y( 12)&
     &    /    29.0_wp, 20.0_wp, 10.0_wp,  8.0_wp,  3.0_wp,  0.0_wp/
     data   y( 13),  y( 14),  y( 15),  y( 16),  y( 17),  y( 18)&
     &    /     0.0_wp, 2.0_wp, 11.0_wp, 27.0_wp, 47.0_wp, 63.0_wp/
     data   y( 19),  y( 20),  y( 21),  y( 22),  y( 23),  y( 24)&
     &    /    60.0_wp, 39.0_wp, 28.0_wp, 26.0_wp, 22.0_wp, 11.0_wp/
     data   y( 25),  y( 26),  y( 27),  y( 28),  y( 29),  y( 30)&
     &    /    21.0_wp, 40.0_wp, 78.0_wp,122.0_wp,103.0_wp, 73.0_wp/
     data   y( 31),  y( 32),  y( 33),  y( 34),  y( 35),  y( 36)&
     &    /    47.0_wp, 35.0_wp, 11.0_wp,  5.0_wp, 16.0_wp, 34.0_wp/
     data   y( 37),  y( 38),  y( 39),  y( 40),  y( 41),  y( 42)&
     &    /    70.0_wp, 81.0_wp,111.0_wp,101.0_wp, 73.0_wp, 40.0_wp/
     data   y( 43),  y( 44),  y( 45),  y( 46),  y( 47),  y( 48)&
     &    /    20.0_wp, 16.0_wp,  5.0_wp, 11.0_wp, 22.0_wp, 40.0_wp/
     data   y( 49),  y( 50),  y( 51),  y( 52),  y( 53),  y( 54)&
     &    /    60.0_wp, 80.9_wp, 83.4_wp, 47.7_wp, 47.8_wp, 30.7_wp/
     data   y( 55),  y( 56),  y( 57),  y( 58),  y( 59),  y( 60)&
     &    /    12.2_wp,  9.6_wp, 10.2_wp, 32.4_wp, 47.6_wp, 54.0_wp/
     data   y( 61),  y( 62),  y( 63),  y( 64),  y( 65),  y( 66)&
     &    /    62.9_wp, 85.9_wp, 61.2_wp, 45.1_wp, 36.4_wp, 20.9_wp/
     data   y( 67),  y( 68),  y( 69),  y( 70),  y( 71),  y( 72)&
     &    /    11.4_wp, 37.8_wp, 69.8_wp,106.1_wp,100.8_wp, 81.6_wp/
     data   y( 73),  y( 74),  y( 75),  y( 76),  y( 77),  y( 78)&
     &    /    66.5_wp, 34.8_wp, 30.6_wp,  7.0_wp, 19.8_wp, 92.5_wp/
     data   y( 79),  y( 80),  y( 81),  y( 82),  y( 83),  y( 84)&
     &    /   154.4_wp,125.9_wp, 84.8_wp, 68.1_wp, 38.5_wp, 22.8_wp/
     data   y( 85),  y( 86),  y( 87),  y( 88),  y( 89),  y( 90)&
     &    /    10.2_wp, 24.1_wp, 82.9_wp,132.0_wp,130.9_wp,118.1_wp/
     data   y( 91),  y( 92),  y( 93),  y( 94),  y( 95),  y( 96)&
     &    /    89.9_wp, 66.6_wp, 60.0_wp, 46.9_wp, 41.0_wp, 21.3_wp/
     data   y( 97),  y( 98),  y( 99),  y(100),  y(101),  y(102)&
     &    /    16.0_wp,  6.4_wp,  4.1_wp,  6.8_wp, 14.5_wp, 34.0_wp/
     data   y(103),  y(104),  y(105),  y(106),  y(107),  y(108)&
     &    /    45.0_wp, 43.1_wp, 47.5_wp, 42.2_wp, 28.1_wp, 10.1_wp/
     data   y(109),  y(110),  y(111),  y(112),  y(113),  y(114)&
     &    /     8.1_wp,  2.5_wp,  0.0_wp,  1.4_wp,  5.0_wp, 12.2_wp/
     data   y(115),  y(116),  y(117),  y(118),  y(119),  y(120)&
     &    /    13.9_wp, 35.4_wp, 45.8_wp, 41.1_wp, 30.1_wp, 23.9_wp/
     data   y(121),  y(122),  y(123),  y(124),  y(125),  y(126)&
     &    /    15.6_wp,  6.6_wp,  4.0_wp,  1.8_wp,  8.5_wp, 16.6_wp/
     data   y(127),  y(128),  y(129),  y(130),  y(131),  y(132)&
     &    /    36.3_wp, 49.6_wp, 64.2_wp, 67.0_wp, 70.9_wp, 47.8_wp/
     data   y(133),  y(134),  y(135),  y(136),  y(137),  y(138)&
     &    /    27.5_wp,  8.5_wp, 13.2_wp, 56.9_wp,121.5_wp,138.3_wp/
     data   y(139),  y(140),  y(141),  y(142),  y(143),  y(144)&
     &    /   103.2_wp, 85.7_wp, 64.6_wp, 36.7_wp, 24.2_wp, 10.7_wp/
     data   y(145),  y(146),  y(147),  y(148),  y(149),  y(150)&
     &    /    15.0_wp, 40.1_wp, 61.5_wp, 98.5_wp,124.7_wp, 96.3_wp/
     data   y(151),  y(152),  y(153),  y(154),  y(155),  y(156)&
     &    /    66.6_wp, 64.5_wp, 54.1_wp, 39.0_wp, 20.6_wp,  6.7_wp/
     data   y(157),  y(158),  y(159),  y(160),  y(161),  y(162)&
     &    /     4.3_wp, 22.7_wp, 54.8_wp, 93.8_wp, 95.8_wp, 77.2_wp/
     data   y(163),  y(164),  y(165),  y(166),  y(167),  y(168)&
     &    /    59.1_wp, 44.0_wp, 47.0_wp, 30.5_wp, 16.3_wp,  7.3_wp/
     data   y(169),  y(170),  y(171),  y(172),  y(173),  y(174)&
     &    /    37.6_wp, 74.0_wp,139.0_wp,111.2_wp,101.6_wp, 66.2_wp/
     data   y(175),  y(176),  y(177),  y(178),  y(179),  y(180)&
     &    /    44.7_wp, 17.0_wp, 11.3_wp, 12.4_wp,  3.4_wp,  6.0_wp/
     data   y(181),  y(182),  y(183),  y(184),  y(185),  y(186)&
     &    /    32.3_wp, 54.3_wp, 59.7_wp, 63.7_wp, 63.5_wp, 52.2_wp/
     data   y(187),  y(188),  y(189),  y(190),  y(191),  y(192)&
     &    /    25.4_wp, 13.1_wp,  6.8_wp,  6.3_wp,  7.1_wp, 35.6_wp/
     data   y(193),  y(194),  y(195),  y(196),  y(197),  y(198)&
     &    /    73.0_wp, 85.1_wp, 78.0_wp, 64.0_wp, 41.8_wp, 26.2_wp/
     data   y(199),  y(200),  y(201),  y(202),  y(203),  y(204)&
     &    /    26.7_wp, 12.1_wp,  9.5_wp,  2.7_wp,  5.0_wp, 24.4_wp/
     data   y(205),  y(206),  y(207),  y(208),  y(209),  y(210)&
     &    /    42.0_wp, 63.5_wp, 53.8_wp, 62.0_wp, 48.5_wp, 43.9_wp/
     data   y(211),  y(212),  y(213),  y(214),  y(215),  y(216)&
     &    /    18.6_wp,  5.7_wp,  3.6_wp,  1.4_wp,  9.6_wp, 47.4_wp/
     data   y(217),  y(218),  y(219),  y(220),  y(221),  y(222)&
     &    /    57.1_wp,103.9_wp, 80.6_wp, 63.6_wp, 37.6_wp, 26.1_wp/
     data   y(223),  y(224),  y(225),  y(226),  y(227),  y(228)&
     &    /    14.2_wp,  5.8_wp, 16.7_wp, 44.3_wp, 63.9_wp, 69.0_wp/
     data   y(229),  y(230),  y(231),  y(232),  y(233),  y(234)&
     &    /    77.8_wp, 64.9_wp, 35.7_wp, 21.2_wp, 11.1_wp,  5.7_wp/
     data   y(235),  y(236),  y(237),  y(238),  y(239),  y(240)&
     &    /     8.7_wp, 36.1_wp, 79.7_wp,114.4_wp,109.6_wp, 88.8_wp/
     data   y(241),  y(242),  y(243),  y(244),  y(245),  y(246)&
     &    /    67.8_wp, 47.5_wp, 30.6_wp, 16.3_wp,  9.6_wp, 33.2_wp/
     data   y(247),  y(248),  y(249),  y(250),  y(251),  y(252)&
     &    /    92.6_wp,151.6_wp,136.3_wp,134.7_wp, 83.9_wp, 69.4_wp/
     data   y(253),  y(254),  y(255),  y(256),  y(257),  y(258)&
     &    /    31.5_wp, 13.9_wp,  4.4_wp, 38.0_wp,141.7_wp,190.2_wp/
     data   y(259),  y(260),  y(261)&
     &    /   184.8_wp,159.0_wp,112.3_wp/
!
!     DEFINE CONSTANTS
!
      call iprint(iprt)
      n = 261
      fd = 1.0/11.0
      fc = 1.0/22.0
      k = 41
!
!     WRITE HEADER
!
      write(iprt, 1000)
!
!     RUN SIMPLE TEST OF DIF
!
      write(iprt, 1100)
      call demod (y, n, fd, fc, k, ldstak)
      write (iprt,2000) ierr
!
      return
!
!     FORMAT STATEMENTS
!
 1000 format ('1*CH11')
 1100 format (' SIMPLE TEST OF DEMOD')
 2000 format (/' THE VALUE OF IERR IS ', i4)
      end
