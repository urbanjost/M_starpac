!AOS
     subroutine aos (n, lagmax, acov, prho, iar, ospvar, phi, work,&
     &   aic, ftest, lacov, laic)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE COMPUTES AUTOREGRESSIVE MODEL ORDER SELECTION
!     STATISTICS. IT PERFORMS STEPWISE FITTING OF AUTOREGRESSIVE
!     COEFFICIENTS BY DURBINS METHOD USING AKAIKES AIC CRITERION
!     FOR SELECTING ORDER.   THE ROUTINE IS MODELED AFTER
!     SUBROUTINE UFPE WRITTEN BY DICK JONES.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 21, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   ospvar
     integer&
     &   iar,lacov,lagmax,laic,n
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
    &   acov(lacov),aic(laic),ftest(2,lagmax),phi(lagmax),&
     &   prho(lagmax),work(lagmax)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   acov0,aicmin,fplm,rss,rssmin,sqpacf
     integer&
     &   i,j
!
!  EXTERNAL FUNCTIONS
     real(kind=wp) ::&
     &   cdff,r1mach
!       EXTERNAL CDFF,R1MACH
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL ARCOEF
!
!  INTRINSIC FUNCTIONS
      intrinsic log,real
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: ACOV(LACOV), ACOV0
!        THE AUTOCOVARIANCES FOR LAGS ZERO TO LAGMAX, AND THE
!        AUTOCOVARIANCE AT LAG ZERO.
!     REAL(KIND=WP) :: AIC(LAIC), AICMIN
!        THE ARRAY CONTAINING AKIAKES CRITERIA FOR EACH ORDER, WHERE
!        AIC(I+1) IS THE CRITERIA FOR ORDER I-1, AND THE MINIMUM
!        CRITERIA COMPUTED.
!     REAL(KIND=WP) :: FPLM
!        THE FLOATING POINT LARGEST MAGNITUDE.
!     REAL(KIND=WP) :: FTEST(2, LAGMAX)
!        THE ARRAY IN WHICH THE F PERCENTAGE POINT AND PROBABILITY ARE
!        STORED.
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IAR
!        THE ORDER OF THE AUTOREGRESSIVE PROCESS CHOSEN.
!     INTEGER J
!        AN INDEX VARIABLE.
!     INTEGER LACOV
!        THE LENGTH OF THE VECTOR ACOV.
!     INTEGER LAGMAX
!        THE MAXIMUM LAG VALUE TO BE USED.
!     INTEGER LAIC
!        THE LENGTH OF THE VECTOR AIC.
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS IN EACH SERIES
!     REAL(KIND=WP) :: OSPVAR
!        THE ONE STEP PREDICTION VARIANCE FOR THE ORDER SELECTED (IAR).
!     REAL(KIND=WP) :: PHI(LAGMAX)
!        THE ARRAY OF AUTOREGRESSIVE COEFFICIENTS FOR THE
!        SELECTED ORDER.
!     REAL(KIND=WP) :: PRHO(LAGMAX)
!        THE ARRAY CONTAINING THE PARTIAL AUTOCORRELATION
!        COEFFICIENTS.
!     REAL(KIND=WP) :: RSS, RSSMIN
!        THE ONE STEP PREDICTION RESIDUAL SUM OF SQUARES AND THE
!        MINIMUM ONE STEP PREDICTION RESIDUAL SUM OF SQUARES.
!     REAL(KIND=WP) :: SQPACF
!        THE SQUARED VALUE OF THE PARTIAL AUTOCORRELATION FUNCTION AT
!        LAG I.
!     REAL(KIND=WP) :: WORK(LAGMAX)
!        A REAL WORK AREA.
!
      fplm = r1mach(2)
!
      rss = acov(1) * n
      rssmin = rss
      aic(1) = n * log(rss * (n+1) / (n-1))
      aicmin = aic(1)
      iar = 0
!
!  START STEPWISE PROCEDURE
!
      work(1) = acov(2) / acov(1)
      prho(1) = work(1)
      rss = rss * (1.0e0 - work(1)*work(1))
      aic(2) = n * log(rss * (n+2) / (n-2))
!
      sqpacf = work(1) * work(1)
      ftest(1, 1) = fplm
      ftest(2, 1) = 0.0e0
      if (sqpacf .ge. 1.0e0) go to 5
!
      ftest(1,1) = (n-2) * sqpacf / (1.0e0 - sqpacf)
!
      ftest(2,1) = 1.0e0 - cdff(ftest(1,1), 1.0_wp, real(n-2))
!
    5 continue
!
      if (aic(2).ge.aicmin) go to 10
      aicmin = aic(2)
      rssmin = rss
      iar = 1
      phi(1) = work(1)
!
   10 if (lagmax.le.1) go to 40
!
      acov0 = acov(1)
!
      do 30 i=2,lagmax
         call arcoef (acov(2), work, rss, i, lagmax, acov0)
         prho(i) = work(i)
         aic(i+1) = fplm
         ftest(1,i) = fplm
         ftest(2,i) = fplm
         if (i.eq.n-1) go to 15
!
         aic(i+1) = n * log(rss * (n+i+1) / (n-i-1))
!
         sqpacf = work(i) * work(i)
         if (sqpacf .ge. 1.0e0) go to 15
!
         ftest(1,i) = (n-i-1) * sqpacf / (1.0e0 - sqpacf)
!
         ftest(2,i) = 1.0e0 - cdff(ftest(1,i), 1.0_wp, real(n-i-1))
!
   15    continue
!
!     IF THIS AIC IS A MINIMUM AND ITS LAG DOES NOT EXCEED N/2,
!     SAVE THE COEFFICIENTS.
!
         if ((aic(i+1).ge.aicmin) .or. (i.gt.n/2)) go to 30
         aicmin = aic(i+1)
         rssmin = rss
         iar = i
         do 20 j=1,i
            phi(j) = work(j)
   20    continue
   30 continue
!
!   NORMALIZE AIC
!
   40 continue
      aic(1) = aic(1) - aicmin
      do 50 i=1,lagmax
         aic(i+1) = aic(i+1) - aicmin
   50 continue
!
      ospvar = rssmin / (n-iar-1)
!
      return
      end
