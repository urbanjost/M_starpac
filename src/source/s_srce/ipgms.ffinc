!IPGMS
     subroutine ipgms (yfft, n, lyfft, ldstak, nf, peri, lperi, freq,&
     &   lfreq, nprt)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE USER CALLABLE ROUTINE FOR COMPUTING
!     THE INTEGRATED PERIODOGRAM OF A SERIES (LONG CALL).
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 7, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   ldstak,lfreq,lperi,lyfft,n,nf,nprt
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   freq(*),peri(*),yfft(*)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      double precision dstak(12)
!
!  LOCAL SCALARS
     integer&
     &   iextnd,iprt,isym,ldsmin,lpcv,nall0,nfft,xaxis,yaxis
     logical&
     &   err01,err02,err03,err04,err05,head
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   rstak(12)
     integer&
     &   istak(12)
     character&
    &   llds(8)*1,llfreq(8)*1,llperi(8)*1,llyfft(8)*1,ln(8)*1,&
     &   nmsub(6)*1
!
!  EXTERNAL FUNCTIONS
!      INTEGER
!     +   STKST
!      EXTERNAL STKST
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL CNTR,EISGE,IPGDV,IPRINT,LDSCMP,PGMMN,SETESL,STKCLR,STKSET
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!  EQUIVALENCES
      equivalence (dstak(1),rstak(1))
      equivalence (dstak(1),istak(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     LOGICAL ERR01, ERR02, ERR03, ERR04, ERR05
!        VALUE(S) INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     REAL FREQ(LFREQ)
!        THE ARRAY IN WHICH THE FREQUENCIES CORRESPONDING TO THE
!        INTEGRATED SPECTRUM VALUES ARE STORED.
!     LOGICAL HEAD
!        A VARIABLE USED TO INDICATE WHETHER A HEADING IS NEEDED FOR
!        ERROR MESSAGES (TRUE) OR NOT (FALSE).
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER IEXTND
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER ZERO
!        (IEXTND .EQ. 0) OR THE SERIES MEAN (IEXTND .NE. 0) IS TO BE
!        USED TO EXTEND THE SERIES.
!     INTEGER IPRT
!        THE LOGICAL UNIT USED FOR PRINTED OUTPUT.
!     INTEGER ISTAK(12)
!        THE INTEGER VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE VECTOR DSTAK IN COMMON CSTAK.
!     INTEGER LFREQ
!        THE LENGTH OF THE VECTOR FREQ.
!     CHARACTER*1 LLDS(8), LLFREQ(8), LLPERI(8), LLYFFT(8), LN(8)
!        THE ARRAY(S) CONTAINING THE NAME(S) OF THE PARAMETER(S) CHECKED
!        FOR ERRORS.
!     INTEGER LPCV
!        THE LENGTH OF THE PLOT CO-ORDINATE VECTORS.
!     INTEGER LPERI
!        THE LENGTH OF THE VECTOR PERI.
!     INTEGER LYFFT
!        THE LENGTH OF THE VECTOR YFFT.
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS.
!     INTEGER NALL0
!        THE NUMBER OF OUTSTANDING ALLOCATIONS OF THE STACK AT THE
!        TIME OF THIS CALL.
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES AT WHICH THE PERIODOGRAM IS
!        TO BE COMPUTED.
!     INTEGER NFFT
!        THE EFFECTIVE LENGTH OF THE SERIES TO BE TRANSFORMED.
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THIS SUBROUTINE.
!     INTEGER NPRT
!        THE VARIABLE CONTROLING PRINTED OUTPUT, WHERE
!        IF NPRT .EQ.  0, THE OUTPUT IS SUPPRESSED,
!        IF NPRT .GE.  1, THE OUTPUT CONSISTS OF A PAGE PLOT.
!     REAL PERI(LPERI)
!        THE VECTOR IN WHICH THE INTEGRATED PERIODOGRAM IS STORED.
!     REAL RSTAK(12)
!        THE REAL VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER XAXIS
!        THE STARTING LOCATION IN THE STACK FOR
!        THE ARRAY IN WHICH THE X AXIS VALUES TO BE PLOTTED ARE STORED.
!     INTEGER YAXIS
!        THE STARTING LOCATION IN THE STACK FOR
!        THE ARRAY IN WHICH THE Y AXIS VALUES TO BE PLOTTED ARE STORED.
!     REAL YFFT(LYFFT)
!        THE ARRAY CONTAINING THE OBSERVED TIME SERIES.
!
!     SET UP NAME ARRAYS
!
     data&
    &  nmsub(1),  nmsub(2),  nmsub(3),  nmsub(4),  nmsub(5),  nmsub(6)&
     & /     'I',       'P',       'G',       'M',       'S',       ' '/
     data&
    & llfreq(1), llfreq(2), llfreq(3), llfreq(4), llfreq(5),&
    &  llfreq(6), llfreq(7), llfreq(8)&
     &  /'L','F','R','E','Q',' ',' ',' '/
     data&
    & llds(1), llds(2), llds(3), llds(4), llds(5),&
     &  llds(6), llds(7), llds(8) /'L','D','S','T','A','K',' ',' '/
     data&
    & llperi(1), llperi(2), llperi(3), llperi(4), llperi(5),&
    &  llperi(6), llperi(7), llperi(8)&
     &  /'L','P','E','R','I',' ',' ',' '/
     data&
    & llyfft(1), llyfft(2), llyfft(3), llyfft(4), llyfft(5),&
    &  llyfft(6), llyfft(7), llyfft(8)&
     &  /'L','Y','F','F','T',' ',' ',' '/
     data&
    & ln(1), ln(2), ln(3), ln(4), ln(5), ln(6), ln(7), ln(8)&
     & /'N',' ',' ',' ',' ',' ',' ',' '/
!
!     SET UP FOR ERROR CHECKING
!
      ierr = 0
      head = .true.
!
!     CALL ERROR CHECKING ROUTINES
!
      call eisge(nmsub, ln, n, 17, 1, head, err01, ln)
      if (err01) go to 5
!
!     SET LENGTH OF EXTENDED SERIES
!
      call setesl(n, 2, nfft)
      nf = nfft/2
!
      call eisge(nmsub, llyfft, lyfft, nfft, 9, head, err02, llyfft)
!
      call eisge(nmsub, llperi, lperi, nf, 9, head, err03, llperi)
!
      call eisge(nmsub, llfreq, lfreq, nf, 9, head, err04, llfreq)
!
      if (nprt .eq. 0) then
        ldsmin = 0
      else
        call ldscmp(3, 0, nf+103, 0, 0, 0, 'S', 2*nfft+206, ldsmin)
      end if
!
      call eisge(nmsub, llds, ldstak, ldsmin, 9, head, err05, llds)
!
      if (err02 .or. err03 .or. err04 .or. err05) go to 5
      go to 10
!
    5 continue
      ierr = 1
      call iprint (iprt)
      write (iprt, 1000)
      return
!
   10 continue
!
!     SET THE SIZE OF THE WORK AREA
!
      call stkset(ldstak, 4)
!
!     SET THE NUMBER OF OUTSTANDING ALLOCATIONS.
!
      nall0 = stkst(1)
!
!     SET VARIOUS PROGRAM PARAMETERS.
!
      lpcv = nf + 103
!
!     CENTER THE SERIES
!
      call cntr(yfft, n, yfft)
      iextnd = 0
!
!     SUBDIVIDE THE STACK.
!
      if (nprt .eq. 0) then
         isym = 1
         xaxis = 1
         yaxis = 1
      else
         isym = stkget(lpcv, 2)
         xaxis = stkget(lpcv, 3)
         yaxis = stkget(lpcv, 3)
      end if
!
!     COMPUTE THE RAW PERIODOGRAM.
!
     call pgmmn (yfft, n, nfft, iextnd, nf, peri, lperi, rstak(yaxis),&
     &   freq, lfreq, 0, nmsub)
!
!     CALL THE MAIN DRIVER FOR COMPUTING (AND PLOTTING) THE INTEGRATED
!     PERIODOGRAM.
!
     call ipgdv (peri, nf, n, peri, freq, rstak(xaxis),&
     &   rstak(yaxis), istak(isym), lpcv, nprt)
!
      call stkclr(nall0)
!
      return
!
!     FORMAT STATEMENTS
!
1000 format (/42h the correct form of the call statement is//&
    &  '       CALL IPGMS (YFFT, N, LYFFT, LDSTAK,'/&
     &  '      +            NF, PERI, LPERI, FREQ, LFREQ, NPRT)')
      end
