!CORRMN
     subroutine corrmn(ym, n, m, iym, avg, sd, t, rank, sc, pc, scinv,&
    &   iwrk, wrk, slsc, slpc, srcc, quad, ciup, cilo, qf, nprt,&
     &   vcv, ivcv, liwrk, lwrk)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE MAIN ROUTINE FOR THE CORRELATION FAMILY, IT WAS
!     ADAPTED FROM THE OMNITAB ROUTINE CORREL. IT DOES A  CORRELATION
!     ANALYSIS OF A MULTIVARIATE RANDOM SAMPLE.
!     THE FOLLOWING TABLES ARE PRODUCED
!        SIMPLE CORRELATION COEFFICIENTS,
!        PARTIAL CORRELATION COEFFICIENTS,
!        AND THEIR SIGINIFICANCE LEVELS,
!        SPEARMAN RANK COEFFICIENTS,
!        QUADRATIC RELATIONSHIP,
!        95 AND 99 PERCENT CONFIDENCE INTERVALS.
!
!     THIS ROUTINE WAS ADAPTED FROM AN OMNITAB ROUTINE.
!
!     ADAPTED BY -
!        JANET R. DONALDSON AND LINDA L. MITCHELL
!        STATISTICAL ENGINEERING DIVISION
!        NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  MAY 17, 1982
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   ivcv,iym,liwrk,lwrk,m,n,nprt
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
    &   avg(m),cilo(m,m),ciup(m,m),pc(m,m),qf(m,m),quad(n,3),&
    &   rank(n,m),sc(m,m),scinv(m,m),sd(m),slpc(m,m),slsc(m,m),&
     &   srcc(m,m),t(m),vcv(ivcv,m),wrk(lwrk),ym(iym,m)
     integer&
     &   iwrk(liwrk)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   b,f,fn3,fplm,hl1,hl2,sqsum,sum,z,zz
     integer&
     &   i,ier,iprt,j,k,k1,k2,nsum
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   c(3),d(3),rr(3,3),xx(3)
     integer&
     &   inert(3)
!
!  EXTERNAL FUNCTIONS
!      REAL(KIND=WP) ::
!     +   CDFF,R1MACH
!      EXTERNAL CDFF,R1MACH
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL AMEAN,CORRHD,DOTC,IPRINT,MATPRT,MGS,RANKO,SSIDI,SSIFA,
!     +   VCVOUT
!
!  INTRINSIC FUNCTIONS
      intrinsic abs,int,log,max,min,real,sign,sqrt,tanh
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: AVG(M)
!                  CONTAINS THE COLUMN AVERAGES OF YM
!     REAL(KIND=WP) :: B
!                  = (N-1) * N * (N+1) / 6
!     REAL(KIND=WP) :: C(3)
!                  *
!     REAL(KIND=WP) :: CILO(M,M)
!                  LOWER CONFIDENCE INTERVAL FOR SC
!     REAL(KIND=WP) :: CIUP(M,M)
!                  UPPER CONFIDENCE INTERVAL FOR SC
!     REAL(KIND=WP) :: D(3)
!                  A DUMMY ARRAY.
!     REAL(KIND=WP) :: F
!                  SQUARE ROOT OF FN3
!     REAL(KIND=WP) :: FN3
!                  REAL REPRESENTATION OF (N-3).
!     REAL(KIND=WP) :: FPLM
!                  THE FLOATING POINT LARGEST MAGNITUDE
!     REAL(KIND=WP) :: HL1
!                  *
!     REAL(KIND=WP) :: HL2
!                  *
!     INTEGER I
!                  AN INDEX VARIABLE
!     INTEGER IER
!                  ERROR FLAG FOR SUBROUTINES CALLED FROM THIS ROUTINE
!     INTEGER IERR
!                  WHEN RETURNED BY THIS ROUTINE, DESGINATES WHETHER ANY
!                  ERRORS WERE DETECTED DURING COMPUTATIONS
!                     IF IERR .EQ. 0, NO ERRORS
!                             .EQ. 1, ERRORS WERE DETECTED
!     INTEGER INERT(3)
!                  THE INERTIA OF THE SIMPLE CORRELATION MATRIX.
!     INTEGER IPRT
!                  THE LOGICAL OUTPUT NUMBER
!     INTEGER IVCV
!                  THE ROW DIMENSION OF VCV SPECIFIED IN THE USERS PROGR
!     INTEGER IWRK(LIWRK)
!                  A WORK VECTOR FOR THE INVERSION ROUTINE
!     INTEGER IYM
!                  THE ROW DIMENSION OF YM SPECIFIED IN THE USERS PROGRA
!     INTEGER J
!                  AN INDEX VARIABLE
!     INTEGER K
!                  AN INDEX VARIABLE
!     INTEGER K1
!                  *
!     INTEGER K2
!                  *
!     INTEGER LIWRK
!                  THE LENGTH OF THE INTEGER WORK VECTOR.
!     INTEGER LWRK
!                  THE LENGTH OF THE REAL WORK VECTOR.
!     INTEGER M
!                  THE NUMBER OF VARIABLES (THE COLUMN DIMENSION OF YM)
!     INTEGER N
!                  THE NUMBER OF OBSERVATIONS
!     INTEGER NPRT
!                  THE VARIABLE CONTROLLING THE AUTOMATIC PRINTOUT
!                  NPRT =0, PRINTOUT IS SUPPRESSED
!                  OTHERWISE PRINTOUT IS PROVIDED
!     INTEGER NSUM
!                  THE NUMBER OF OBSERVATIONS IN THE DOT PRODUCT
!     REAL(KIND=WP) :: PC(M,M)
!                  PARTIAL CORRELATION COEFFICIENTS MATRIX
!     REAL(KIND=WP) :: QF(M,M)
!                  QUADRATIC FIX MATRIX
!     REAL(KIND=WP) :: QUAD(N,3)
!                  DOUBLE VERSION OF QF MATRIX
!     REAL(KIND=WP) :: RANK(N,M)
!                  THE MATRIX CONTAING THE RANKS OF YM
!     REAL(KIND=WP) :: RR(3,3)
!                  *
!     REAL(KIND=WP) :: SC(M,M)
!                  SIMPLE CORRELATION COEFFICIENTS MATRIX
!     REAL(KIND=WP) :: SCINV(M,M)
!                  THE INVERSE MATRIX OF SC
!     REAL(KIND=WP) :: SD(M)
!                  STANDARD DEVIATION OF THE COMLUMNS OF YM
!     REAL(KIND=WP) :: SLPC(M,M)
!                  SIGNIFICANCE LEVELS OF PC
!     REAL(KIND=WP) :: SLSC(M,M)
!                  SIGNIFICANCE LEVELS OF SC
!     REAL(KIND=WP) :: SQSUM
!                  THE SUM OF SQUARES OF THE ITH COLUMN OF YM
!     REAL(KIND=WP) :: SRCC(M,M)
!                  SPEARMAN RANK CORRELATION COEFFICIENTS
!     REAL(KIND=WP) :: SUM
!                  USED IN CALCULATING THE STATISTICS OF YM
!     REAL(KIND=WP) :: T(M)
!                  USED IN DETERMINING SRCC
!     REAL(KIND=WP) :: VCV(IVCV,M)
!                  THE VARIANCE COVARIANCE MATRIX.
!     REAL(KIND=WP) :: WRK(LWRK)
!                  WORK STORAGE
!     REAL(KIND=WP) :: XX(3)
!                  *
!     REAL(KIND=WP) :: YM(IYM,M)
!                  THE MATRIX WHOSE COLUMNS EACH CONTAIN ONE OF M SETS
!                  OF N OBSERVATIONS. EACH COLUMN REPRESENTS A DIFFERENT
!                  VARIABLE
!     REAL(KIND=WP) :: Z
!                  USED IN COMPUTING CONFIDENCE INTERVALS
!     REAL(KIND=WP) :: ZZ
!                  USED IN DETERMINING CORRELATION COEFFICIENTS
!
      ierr = 0
!
      fplm = r1mach(2)
      call iprint(iprt)
!
      do 10 j=1,m
         call amean(ym(1,j), n, avg(j))
   10 continue
!
!     COMPUTE VARIANCE-COVARIANCE MATRIX
!
      do 30 j=1,m
         do 20 i=j,m
            call dotc(ym(1,j), avg(j), n, ym(1,i), avg(i), n, sum, nsum)
            vcv(j,i) = sum/(nsum-1)
            vcv(i,j) = vcv(j,i)
   20    continue
   30 continue
!
      if (nprt.eq.0) return
!
!     PRINT VARIANCE-COVARIANCE MATRIX AND SIMPLE CORRELATION
!     COEFFICIENTS
!
      call corrhd(iprt, m, n)
      call vcvout(m, vcv, ivcv, .false.)
!
!     COMPUTE STANDARD DEVIATIONS
!
      do 40 i=1,m
         if (vcv(i,i).le.0.0e0) go to 90
         sd(i) = sqrt(vcv(i,i))
   40 continue
!
!     COMPUTE SIMPLE CORRELATION COEFFICIENTS
!
      do 60 j=1,m
         do 50 i=j,m
            sc(i,j) = 1.0e0
            scinv(j,i) = 1.0e0
            if (i.eq.j) go to 50
            sc(i,j) = vcv(i,j)/sd(i)/sd(j)
            sc(j,i) = sc(i,j)
            scinv(j,i) = sc(i,j)
   50    continue
   60 continue
!
      if ((m.le.2) .or. (n.le.m)) go to 190
!
!     CALCULATE PARTIAL CORRELATION COEFFICIENTS.
!
      call ssifa(scinv, m, m, iwrk, ier)
      if (ier.eq.0) go to 100
   90 write (iprt,1000)
      ierr = 1
      return
  100 continue
      call ssidi(scinv, m, m, iwrk, d, inert, wrk, 1)
      do 130 j=1,m
         do 120 i=j,m
            pc(i,j) = 1.0e0
            if (i.eq.j) go to 120
            zz = scinv(i,i)*scinv(j,j)
            pc(i,j) = fplm
            if (zz.le.0.0e0) go to 110
            pc(i,j) = -scinv(j,i)/sqrt(zz)
            if (abs(pc(i,j)).gt.1.0e0) pc(i,j) = sign(1.0_wp,pc(i,j))
  110       pc(j,i) = pc(i,j)
  120    continue
!
  130 continue
!
!     COMPUTE SIGNIFICANCE LEVELS OF PARTIAL CORRELATION COEFFICIENTS.
!     NOTE, LOWER TRIANGULAR MATRIX STORED IN SQUARE MATRIX.
!
      do 180 i=1,m
         do 170 j=1,i
            if (pc(i,j).ne.0.0e0) go to 140
            slpc(i,j) = 1.0e0
            go to 170
  140       if (abs(pc(i,j)).lt.1.0e0) go to 150
            slpc(i,j) = 0.0e0
            go to 170
  150       f = pc(i,j)*pc(i,j)
            if (1.0e0-f.ne.0.0e0) go to 160
            slpc(i,j) = fplm
            go to 170
  160       f = (n-m)*f/(1.0e0-f)
            slpc(i,j) = 1.0e0 - cdff(f,1.0_wp,real(n-m))
  170    continue
  180 continue
!
!     COMPUTE SIGNIFICANCE LEVELS OF SIMPLE CORRELATION COEFFICIENTS
!     NOTE, ONLY LOWER TRIANGULAR STORED IN SQUARE MATRIX.
!
  190 do 250 i=1,m
         do 240 j=1,i
            if (i.ne.j) go to 200
            slsc(i,j) = 0.0e0
            go to 240
  200       if (sc(i,j).ne.0.0e0) go to 210
            slsc(i,j) = 1.0e0
            go to 240
  210       if (abs(sc(i,j)).lt.1.0e0) go to 220
            slsc(i,j) = 0.0e0
            go to 240
  220       f = sc(i,j)*sc(i,j)
            if (f.ne.1.0e0) go to 230
            slsc(i,j) = fplm
            go to 240
  230       f = (n-2)*f/(1.0e0-f)
            slsc(i,j) = 1.0e0 - cdff(f,1.0_wp,real(n-2))
  240    continue
  250 continue
!
!     PRINT SIGNIFICANCE LEVELS OF SIMPLE CORRELATION COEFFICIENTS,
!     PARTIAL CORRELATION COEFFICIENTS AND SIGNIFICANCE LEVELS
!
      write (iprt,1020)
      call matprt(slsc, slsc, m, iprt, 0, 1, m)
      if ((m.gt.2) .and. (n.gt.m)) go to 260
      write (iprt,1010)
      go to 270
  260 i = m - 2
      write (iprt,1030) i
      call matprt(pc, pc, m, iprt, 0, 1, m)
      write (iprt,1040)
      call matprt(slpc, slpc, m, iprt, 0, 1, m)
  270 continue
!
!     DETERMINE THE RANKS OF THE OBSERVATIONS.
!
      do 280 i=1,m
         call ranko(n, ym(1,i), iwrk, rank(1,i), t(i))
         t(i) = t(i) / 12.0e0
  280 continue
!
!     COMPUTE SPEARMAN RANK CORRELATION COEFFICIENTS.
!     NOTE, LOWER TRIANGULAR MATRIX, STORED IN SQUARE MATRIX.
!
      b = (n-1)*n*(n+1)/6
      do 330 i=1,m
         do 320 j=1,i
            srcc(i,j) = 1.0e0
            if (i.eq.j) go to 320
            k1 = 2.0e0*t(i) + 0.4e0
            k2 = 2.0e0*t(j) + 0.4e0
            srcc(i,j) = fplm
            if ((int(b)-k1.le.0) .or. (int(b)-k2.le.0)) go to 320
            sum = 0.0e0
            do 310 k=1,n
               zz = rank(k,i) - rank(k,j)
               sum = sum + zz*zz
  310       continue
            zz = (b - 2.0e0*t(i))*(b - 2.0e0*t(j))
            if (zz.gt.0.0e0) srcc(i,j) = (b-sum-t(i)-t(j))/sqrt(zz)
  320    continue
  330 continue
!
!     PRINT SPEARMAN RANK CORRELATIONS COEFFICIENTS
!
      write (iprt,1050)
      call matprt(srcc, srcc, m, iprt, 0, 1, m)
!
      if (n.gt.3) go to 340
      write (iprt,1060)
      return
!
!     COMPUTE THE SIGNIFICANCE LEVELS OF THE QUADRATIC FIT OVER THE
!     LINEAR FIT.
!
!     THESE CALCULATIONS MAY PRODUCE VARIABLE RESULTS IN VARYING
!     MACHINE/COMPILATION ENVIRONMENTS, IN CASES IN WHICH THE
!     YM MATRIX IS NEAR SINGULAR (ESSENTIALLY SINGULAR BUT THE
!     SINGULARITY IS UNDETECTED BY THE CODE).  THE OBSERVED SYMPTOMS
!     ARE ALTERNATION BETWEEN QF VALUES OF 0.0E0 (FIRST F = LINE
!     PRODUCES ZERO) AND 1.0E0 (FIRST F = LINE PRODUCES APPROX.
!     ZERO, AND NUMERATOR IN SECOND F = LINE IS NONZERO).
!
  340 fn3 = n-3
      do 410 j=1,m
         do 400 i=1,m
            if (i.ne.j) go to 350
            qf(i,j) = 1.0e0
            go to 400
  350       sqsum = 0.0e0
            do 360 k=1,n
              quad(k,1) = 1.0e0
               quad(k,2) = ym(k,j)
               quad(k,3) = ym(k,j)*ym(k,j)
               sqsum = sqsum + ym(k,i)*ym(k,i)
               wrk(k) = ym(k,i)
  360       continue
            call mgs(quad, wrk, n, 3, xx, c, d, rr, 3, n, ier)
            if (ier.eq.0) go to 370
            write (iprt,1090)
            go to 420
  370       do 380 k=1,3
               c(k) = c(k)*sqrt(d(k))
  380       continue
            f = (sqsum-c(1)*c(1)-c(2)*c(2)-c(3)*c(3))
            qf(i,j) = 0.0e0
            if (f.eq.0.0e0) go to 400
            f = (c(3)*c(3)*fn3)/f
            qf(i,j) = 1.0e0
            if (f.gt.0.0e0) qf(i,j) = 1.0e0 - cdff(f,1.0_wp,fn3)
  400    continue
  410 continue
!
!     PRINT THE QUADRATIC FIT MATRIX
!
      j = 2
      k = 1
      i = n - 3
      write (iprt,1070) i, qf(j,k), j, k
      call matprt(qf, qf, m, iprt, 1, 1, m)
!
!     COMPUTE CONFIDENCE LIMITS FOR SIMPLE CORRELATION COEFFICIENTS
!
  420 f = sqrt(fn3)
      hl1 = 2.5758293_wp/f
      hl2 = 1.9599640_wp/f
      do 520 j=1,m
         do 510 i=1,m
            if (i.ne.j) go to 430
            ciup(i,j) = 99.0e0
            cilo(i,j) = 95.0e0
            go to 510
  430       if (i.lt.j) go to 470
!
!           COMPUTE 95 PERCENT INTERVALS.
!
            if (sc(i,j).ge.1.0e0) go to 440
            if (sc(i,j).gt.-1.0e0) go to 450
            z = -1.0e0
            go to 460
  440       z = 1.0e0
            go to 460
  450       z = 0.5e0*log((1.0e0+sc(i,j))/(1.0e0-sc(i,j)))
  460       ciup(i,j) = min(tanh(z+hl2),1.0e0)
            cilo(i,j) = max(tanh(z-hl2),-1.0e0)
            go to 510
!
!           COMPUTE 99 PERCENT INTERVALS.
!
  470       if (sc(j,i).ge.1.0e0) go to 480
            if (sc(j,i).gt.-1.0e0) go to 490
            z = -1.0e0
            go to 500
  480       z = 1.0e0
            go to 500
  490       z = 0.5e0*log((1.0e0+sc(j,i))/(1.0e0-sc(j,i)))
  500       ciup(i,j) = min(tanh(z+hl1),1.0e0)
            cilo(i,j) = max(tanh(z-hl1),-1.0e0)
  510    continue
  520 continue
!
!     PRINT CONFIDENCE LIMITS
!
      write (iprt,1080)
      call matprt(ciup, cilo, m, iprt, 1, 2, m)
!
      return
!
!     FORMAT STATEMENTS
!
1000 format (/ 46h computation stopped due to singular or ill-co,&
     &   28hnditioned covariance matrix.)
1010 format (//42h the partial correlation coefficients (and, 6h signi,&
    &   50hficance levels) are not printed or defined because/6h eithe,&
    &   52hr the number of vectors being compared is two or the,&
    &   59h number of measurements is less than or equal to the number/&
     &   27h of vectors being compared.)
1020 format (// 44h significance levels of simple correlation c,&
     &   32hoefficients (assuming normality))
1030 format (// 38h partial correlation coefficients with, i3,&
     &   26h remaining variables fixed)
1040 format (// 44h significance levels of partial correlation ,&
     &   33hcoefficients (assuming normality))
1050 format (// 44h spearman rank correlation coefficients (adj,&
     &   15husted for ties))
1060 format (// 44h nonlinearity test and approximation of conf,&
     &   39hidence intervals not defined for n = 3.)
1070 format (// 45h significance level of quadratic fit over lin,&
    &   35hear fit based on f ratio with 1 and, i5, 15h degrees of fre,&
    &   4hedom/14h (for example,, f7.4, 19h is the significanc,&
    &   41he level of the quadratic term when column, i3, 9h is fitte,&
     &   11hd to column, i3, ')')
1080 format (// 44h confidence intervals for simple correlation,&
    &   43h coefficients (using fisher transformation)/' 95 PER C',&
    &   59hent limits below diagonal, 99 per cent limits above diagona,&
     &   'L')
1090 format (/ 46h significance levels of quadratic fit over lin,&
    &   30hear fit have not been computed/' DUE TO SINGULARITY IN',&
     &   32h design matrix. check your data.)
      end
