!REALTR
      subroutine realtr(a, b, n, isn)
!  IF ISN=1, THIS SUBROUTINE COMPLETES THE FOURIER TRANSFORM
!    OF 2*N DATA VALUES, WHERE THE ORIGINAL DATA VALUES ARE
!    STORED ALTERNATELY IN ARRAYS A AND B, AND ARE FIRST
!    TRANSFORMED BY A COMPLEX FOURIER TRANSFORM OF DIMENSION N.
!    THE COSINE COEFFICIENTS ARE IN A(1),A(2),...A(N+1) AND
!    THE SINE COEFFICIENTS ARE IN B(1),B(2),...B(N+1).
!    A TYPICAL CALLING SEQUENCE IS
!      CALL FFT(A,B,N,N,N,1)
!      CALL REALTR(A,B,N,1)
!    THE RESULTS SHOULD BE MULTIPLIED BY 0.5E0/N TO GIVE THE
!    USUAL SCALING OF COEFFICIENTS.
!  IFISN-1, THE INVERSE TRANSFORMATION IS DONE, THE FIRST STEP
!    IN EVALUATING A REAL FOURIER SERIES.
!    A TYPICAL CALLING SEQUENCE IS
!      CALL REALTRA(A,B,N,-1)
!      CALL FFT(A,B,N,N,N,-1)
!    THE RESULTS SHOULD BE MULTIPLIED BY 0.5E0 TO GIVE THE USUAL
!    SCALING, AND THE TIME DOMAIN RESULTS ALTERNATE IN ARRAYS A
!    AND B, I.E. A(1),B(1),A(2),B(2),...A(N),B(N).
!  THE DATA MAY ALTERNATIVELY BE STORED IN A SINGLE COMPLEX
!    ARRAY A, THEN THE MAGNITUDE OF ISN CHANGED TO TWO TO
!    GIVE THE CORRECT INDEXING INCREMENT AND A(2) USED TO
!    PASS THE INITIAL ADDRESS FOR THE SEQUENCE OF IMAGINARY
!    VALUES, E.G.
!      CALL FFT(A,A(2),N,N,N,2)
!      CALL REALTR(A,A(2),N,2)
!    IN THIS CASE, THE COSINE AND SINE COEFFICIENTS ALTERNATE IN A.
!  BY R. C. SINGLETON, STANFORD RESEARCH INSTITUTE, OCT. 1968
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   isn,n
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   a(1),b(1)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   aa,ab,ba,bb,cd,cn,im,re,sd,sn
     integer&
     &   inc,j,k,nh,nk
!
!  INTRINSIC FUNCTIONS
      intrinsic atan,iabs,sin
!
!
!
      inc = iabs(isn)
      nk = n*inc + 2
      nh = nk/2
      sd = 2.0e0*atan(1.0e0)/n
      cd = 2.0e0*sin(sd)**2
      sd = sin(sd+sd)
      sn = 0.0e0
      if (isn.lt.0) go to 30
      cn = 1.0e0
      a(nk-1) = a(1)
      b(nk-1) = b(1)
   10 do 20 j=1,nh,inc
         k = nk - j
         aa = a(j) + a(k)
         ab = a(j) - a(k)
         ba = b(j) + b(k)
         bb = b(j) - b(k)
         re = cn*ba + sn*ab
         im = sn*ba - cn*ab
         b(k) = im - bb
         b(j) = im + bb
         a(k) = aa - re
         a(j) = aa + re
         aa = cn - (cd*cn+sd*sn)
         sn = (sd*cn-cd*sn) + sn
         cn = 0.5e0/(aa**2+sn**2) + 0.5e0
         sn = cn*sn
         cn = cn*aa
   20 continue
      return
   30 cn = -1.0e0
      sd = -sd
      go to 10
      end
