!NLOUT
     subroutine nlout(y, weight, nnzw, wt, lwt, xm, n, m, ixm, ifixd,&
    &   par, npar, npare, res, iptout, ndigit, page, idf, cond, rss,&
    &   rsd, yss, exact, pv, sdpv, sdres, vcvl, lvcvl, ivcvpt, iskull,&
     &   nlhdr, wide)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE PRINTS THE FINAL SUMMARY OUTPUT FROM THE
!     NONLINEAR LEAST SQUARES SUBOUTINES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  APRIL 2, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   cond,rsd,rss,yss
     integer&
     &   idf,ivcvpt,ixm,lvcvl,lwt,m,n,ndigit,nnzw,npar,npare
     logical&
     &   exact,page,weight,wide
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
    &   par(npar),pv(n),res(n),sdpv(n),sdres(n),vcvl(lvcvl),wt(lwt),&
     &   xm(ixm,m),y(n)
     integer&
     &   ifixd(npar),iptout(ndigit),iskull(10)
!
!  SUBROUTINE ARGUMENTS
       external nlhdr
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   fplm,pll,pul,ratio,sdpar,t
     integer&
     &   i,ipk,ipk2,iprt,isubhd
!
!  EXTERNAL FUNCTIONS
!      REAL(KIND=WP) ::
!     +   PPFT,R1MACH
!      EXTERNAL PPFT,R1MACH
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL FITPT1,FITPT2,IPRINT,NLSKL,VCVOTF
!
!  INTRINSIC FUNCTIONS
      intrinsic max,sqrt
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: COND
!        THE CONDITION NUMBER OF D.
!     LOGICAL EXACT
!        AN INDICATOR VALUE USED TO DESIGNATE WHETHER THE FIT
!        WAS EXACT TO MACHINE PRECISION (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: FPLM
!        THE FLOATING POINT LARGEST MAGNITUDE.
!     INTEGER I
!        AN INDEXING VARIABLE.
!     INTEGER IDF
!        THE DEGREES OF FREEDOM IN THE FIT.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .GE. 1, ERRORS WERE DETECTED.
!     INTEGER IFIXD(NPAR)
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.
!        IF IFIXED(I).NE.0, THEN PAR(I) WILL BE HELD FIXED.
!        IF IFIXED(I).EQ.0, THEN PAR(I) WILL BE OPTIMIZED.
!     INTEGER IPK
!        AN INDEX.
!     INTEGER IPK2
!        THE INDEX OF THE "DIAGONAL" ELEMENT OF THE VCV
!        MATRIX.
!     INTEGER IPRT
!        THE LOGICAL UNIT FOR PRINTED OUTPUT.
!     INTEGER IPTOUT(NDIGIT)
!        THE VARIABLE USED TO CONTROL PRINTED OUTPUT FOR EACH SECTION.
!     INTEGER ISKULL(10)
!        AN ERROR MESSAGE INDICATOR VARIABLE.
!     INTEGER ISUBHD
!        AN INTEGER VALUE SPECIFYING SUBHEADINGS TO BE PRINTED.
!     INTEGER IVCVPT
!        AN INDICATOR VALUE USED TO DESIGNATE WHICH FORM OF THE
!        VARIANCE COVARIANCE MATRIX (VCV) IS BEING PRINTED, WHERE
!        IVCVPT = 1 INDICATES THE VCV WAS COMPUTED AS
!                   INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!        IVCVPT = 2 INDICATES THE VCV WAS COMPUTED AS
!                   INVERSE(HESSIAN)
!        IVCVPT = 3 INDICATES THE VCV WAS COMPUTED AS
!                   INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                       *INVERSE(HESSIAN)
!     INTEGER IXM
!        THE FIRST DIMENSION OF THE INDEPENDENT VARIABLE ARRAY.
!     INTEGER LVCVL
!        THE LENGTH OF THE VECTOR CONTAINING
!        THE LOWER HALF OF THE VCV MATRIX, STORED ROW WISE.
!     INTEGER LWT
!        THE ACTUAL LENGTH OF THE VECTOR WT.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NDIGIT
!        THE NUMBER OF DIGITS IN THE PRINT CONTROL VALUE.
!     EXTERNAL NLHDR
!        THE NAME OF THE ROUTINE WHICH PRODUCES THE HEADING.
!     INTEGER NNZW
!        THE NUMBER OF NON ZERO WEIGHTS.
!     INTEGER NPAR
!        THE NUMBER OF PARAMETERS IN THE MODEL.
!     INTEGER NPARE
!        THE NUMBER OF PARAMETERS TO BE OPTIMIZED.
!     REAL(KIND=WP) :: PAR(NPAR)
!        THE PARAMETER ESTIMATES.
!     LOGICAL PAGE
!        THE VARIABLE USED TO INDICATE WHETHER OR NOT THE OUTPUT
!        IS TO BEGIN ON A NEW PAGE.
!     REAL(KIND=WP) :: PLL, PUL
!        THE LOWER AND UPPER CONFIDENCE LIMITS FOR A GIVEN PARAMETER.
!     REAL(KIND=WP) :: PV(N)
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!     REAL(KIND=WP) :: RATIO
!        THE RATIO OF A GIVEN PARAMETER VALUE TO ITS STANDARD ERROR.
!     REAL(KIND=WP) :: RES(N)
!        THE RESIDUALS FROM THE FIT.
!     REAL(KIND=WP) :: RSD
!        THE VALUE OF THE RESIDUAL STANDARD DEVIATION AT THE SOLUTION.
!     REAL(KIND=WP) :: RSS
!        THE RESIDUAL SUM OF SQUARES.
!     REAL(KIND=WP) :: SDPAR
!        THE STANDARD DEVIATION OF A GIVEN PARAMETER VALUE.
!     REAL(KIND=WP) :: SDPV(N)
!        THE STANDARD DEVIATION OF THE PREDICTED VALUE.
!     REAL(KIND=WP) :: SDRES(N)
!        THE STANDARD DEVIATIONS OF THE RESIDUALS.
!     REAL(KIND=WP) :: T
!        THE VALUE OF THE 97.5 PERCENT POINT FUNCTION FOR THE
!        T DISTRIBUTION.
!     REAL(KIND=WP) :: VCVL(LVCVL)
!        THE LOWER HALF OF THE VCV MATRIX, STORED ROW WISE.
!     LOGICAL WEIGHT
!        THE VARIABLE USED TO INDICATE WHETHER WEIGHTED ANALYSIS IS TO
!        BE PERFORMED (TRUE) OR NOT (FALSE).
!     LOGICAL WIDE
!        THE VARIABLE USED TO INDICATE WHETHER THE HEADING SHOULD
!        BE FULL WIDTH (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: WT(LWT)
!        THE USER SUPPLIED WEIGHTS.
!     REAL(KIND=WP) :: XM(IXM,M)
!        THE ARRAY IN WHICH ONE ROW OF THE INDEPENDENT VARIABLE ARRAY
!        IS STORED.
!     REAL(KIND=WP) :: Y(N)
!        THE ARRAY OF THE DEPENDENT VARIABLE.
!     REAL(KIND=WP) :: YSS
!        THE SUM OF SQUARES OF THE DEPENDENT VARIABLE Y.
!
!
      fplm = r1mach(2)
!
      call iprint(iprt)
!
      if ((ierr.ge.1) .and. (ierr.ne.4)) go to 60
!
!     TEST FOR EXACT FIT
!
      if ((idf.le.0) .or. exact) go to 70
!
!     PRINT ERROR HEADING IF NECESSARY
!
      if (ierr.eq.4) call nlskl(iskull, page, wide, nlhdr)
!
!     PRINT PRIMARY REPORT
!
      if ((ierr.eq.0) .and. (iptout(3).eq.0)) go to 10
      isubhd = 0
      call nlhdr(page, wide, isubhd)
     call fitpt1(n, m, xm, y, pv, sdpv, res, sdres, wt, ixm, nnzw,&
     &   weight, max(1, iptout(3)))
!
!     PRINT STANDARDIZED RESIDUAL PLOTS
!
   10 if (iptout(4).eq.0) go to 20
      isubhd = 0
      call nlhdr(page, wide, isubhd)
!
      call fitpt2 (sdres, pv, wt, n, nnzw, weight, res, rss)
!
!     PRINT THE COVARIANCE AND CORRELATION MATRIX
!
   20 if ((ierr.eq.0) .and. (iptout(5).eq.0)) return
      isubhd = 0
      call nlhdr(page, wide, isubhd)
!
      if ((ierr.eq.0) .and. (iptout(5).le.1)) go to 30
!
      call vcvotf(npare, vcvl, lvcvl, .true., npar, ifixd, ivcvpt)
!
!     PRINT ANALYSIS SUMMARY
!
   30 write (iprt,1000)
      write (iprt,1010)
!
      t = ppft(0.975_wp,idf)
      ipk = 0
      do 50 i=1,npar
!
         if (ifixd(i).eq.0) go to 40
!
         write (iprt,1030) i, par(i)
         go to 50
!
   40    ipk = ipk + 1
         ipk2 = ipk*(ipk-1)/2 + ipk
         ratio = fplm
         sdpar = sqrt(vcvl(ipk2))
         if (sdpar.gt.0.0e0) ratio = par(i)/sdpar
         pll = par(i) - t*sdpar
         pul = par(i) + t*sdpar
         write (iprt,1020) i, par(i), sdpar, ratio, pll, pul
   50 continue
      write (iprt,1040) rss, rsd, nnzw, npare, idf
      write (iprt,1050) cond
!
      if (rss.gt.yss) write (iprt,1060)
!
      return
!
!     PRINT OUT ERROR HEADING
!
   60 call nlskl(iskull, page, wide, nlhdr)
!
      if (ierr.le.2) return
!
!     PRINT SECONDARY REPORT
!
   70 continue
      isubhd = 0
      call nlhdr(page, wide, isubhd)
      if (ierr.ne.0) write (iprt,1080)
      write (iprt,1000)
      write (iprt,1100)
      do 80 i=1,npar
         if (ifixd(i).eq.0) write (iprt,1110) i, par(i)
         if (ifixd(i).ne.0) write (iprt,1120) i, par(i)
   80 continue
      write (iprt,1040) rss, rsd, nnzw, npare, idf
      if (ierr.ne.3) write (iprt,1050) cond
!
     if ((ierr.eq.0) .and. (.not.exact) .and. (idf.le.0)) write&
     &   (iprt,1070)
      if ((ierr.eq.0) .and. exact) write (iprt,1090)
!
      if (ierr.ne.0) go to 100
!
      do 90 i=1,n
         sdres(i) = 0.0e0
         sdpv(i) = 0.0e0
   90 continue
!
      return
!
  100 continue
!
      do 110 i=1,n
         sdres(i) = fplm
         sdpv(i) = fplm
  110 continue
!
!     PRINT OUT ERROR EXIT STATISTICS
!
     call fitpt1(n, m, xm, y, pv, sdpv, res, sdres, wt, ixm, nnzw,&
     &   weight, max(iptout(3),1))
!
!
!     WIPE OUT SDRES VECTOR
!
      do 120 i=1,n
         sdres(i) = fplm
  120 continue
!
!     WIPE OUT VCV MATRIX
!
      do 140 i=1,lvcvl
         vcvl(i) = fplm
  140 continue
!
      return
!
!     FORMAT STATEMENTS
!
 1000 format (///33h estimates from least squares fit/1x, 33('-'))
1010 format (//69x, 11happroximate/61x, 28h95 percent confidence limits&
    &   /1x, 5hindex, 2x, 5hfixed, 3x, 9hparameter, 8x, 9hsd of par,&
     &   7x, 5hratio, 12x, 5hlower, 12x, 5hupper/)
 1020 format (1x, i3, 5x, 3h no, 2g17.8, 2x, g10.4, 2g17.8)
1030 format (1x, i3, 5x, 3hyes, g17.8, 10x, 3h---, 8x, 3h---, 15x,&
     &   3h---, 14x, 3h---)
1040 format (//31h residual sum of squares       , 8x, g15.7//6h resid,&
    &   25hual standard deviation   , 8x, g15.7/19h based on degrees o,&
     &   9hf freedom, 5x, i4, 3h - , i3, 3h = , i4)
 1050 format (/29h approximate condition number, 10x, g15.7)
1060 format (52h the residual sum of squares after the least squares,&
    &   20h fit is greater than/35h the sum of squares about the mean ,&
    &   19hy observation.  the, 14h model is less/17h representative o,&
    &   39hf the data than a simple average.  data, 15h and model shou,&
     &   2hld/48h be checked to be sure that they are compatable.)
1070 format (/49h the degrees of freedom for this problem is zero.,&
     &   54h  statistical analysis of the results is not possible.)
1080 format (//40h the following summary should be used to, 8h analyze,&
     &   30h the above mentioned problems.)
1090 format (/50h the least squares fit of the data to the model is,&
    &   35h exact to within machine precision./20h statistical analysi,&
     &   33hs of the results is not possible.)
 1100 format (//1x, 5hindex, 2x, 5hfixed, 3x, 9hparameter)
 1110 format (1x, i3, 5x, 3h no, g17.8)
 1120 format (1x, i3, 5x, 3hyes, g17.8)
      end
