!DCKMN
     subroutine dckmn(j, d, par, scale, npar, eta, tau, mdl, xm,&
     &   n, nrow, m, ixm, pv, pvtemp, msg, lmsg)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE MAIN SUBROUTINE FOR CHECKING USER SUPPLIED
!     ANALYTIC DERIVATIVES AGAINST NUMERICAL DERIVATIVES
!
!     WRITTEN BY  -  ROBERT B. SCHNABEL (CODED BY JANET R. DONALDSON)
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  APRIL 2, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   d,eta,pv,scale,tau
     integer&
     &   ixm,j,lmsg,m,n,npar,nrow
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   par(npar),pvtemp(n),xm(ixm,m)
     integer&
     &   msg(lmsg)
!
!  SUBROUTINE ARGUMENTS
       external mdl
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   fd,parmx,pvpstp,stp,temp
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL DCKCRV,DCKZRO
!
!  INTRINSIC FUNCTIONS
      intrinsic abs,max,sign,sqrt
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: D
!        THE SCALAR IN WHICH ROW   NROW   OF THE DERIVATIVE
!        MATRIX WITH RESPECT TO THE JTH UNKNOWN PARAMETER
!        IS STORED.
!     REAL(KIND=WP) :: ETA
!        THE RELATIVE NOISE IN THE MODEL
!     REAL(KIND=WP) :: FD
!        THE FORWARD DIFFERENCE QUOTIENT DERIVATIVE WITH RESPECT TO THE
!        JTH PARAMETER
!     INTEGER IXM
!        THE FIRST DIMENSION OF THE INDEPENDENT VARIABLE ARRAY.
!     INTEGER J
!        THE INDEX OF THE PARTIAL DERIVATIVE BEING EXAMINED.
!     INTEGER LMSG
!        THE LENGTH OF THE VECTOR MSG.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     EXTERNAL MDL
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        PREDICTED VALUES BASED ON THE CURRENT PARAMETER ESTIMATES.
!     INTEGER MSG(LMSG)
!        AN ARRAY USED TO STORE MESSAGE PARAMETERS.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS
!     INTEGER NPAR
!        THE NUMBER OF UNKNOWN PARAMETERS IN THE MODEL.
!     INTEGER NROW
!        THE NUMBER OF THE ROW OF THE INDEPENDENT VARIABLE ARRAY AT
!        WHICH THE DERIVATIVE IS TO BE CHECKED.
!     REAL(KIND=WP) :: PAR(NPAR)
!        THE ARRAY IN WHICH THE CURRENT ESTIMATES OF THE UNKNOWN
!        PARAMETERS ARE STORED.
!     REAL(KIND=WP) :: PARMX
!        THE MAXIMUM OF THE CURRENT PARAMETER ESTIMATE AND THE
!        TYPICAL VALUE OF THAT PARAMETER
!     REAL(KIND=WP) :: PV
!        THE SCALAR IN WHICH THE PREDICTED VALUE FROM THE MODEL FOR
!        ROW   NROW   IS STORED.
!     REAL(KIND=WP) :: PVPSTP
!        THE PREDICTED VALUE FOR ROW    NROW   OF THE MODEL
!        BASED ON THE CURRENT PARAMETER ESTIMATES
!        FOR ALL BUT THE JTH PARAMETER VALUE, WHICH IS PAR(J) + STP.
!     REAL(KIND=WP) :: PVTEMP(N)
!        THE VECTOR OF PREDICTED VALUE FROM THE MODEL.
!     REAL(KIND=WP) :: SCALE
!        THE TYPICAL SIZE OF THE JTH PARAMETER.
!     REAL(KIND=WP) :: STP
!        THE STEP SIZE CURRENTLY BEING EXAMINED FOR THE FINITE DIFFERENC
!        DERIVATIVE
!     REAL(KIND=WP) :: TAU
!        THE AGREEMENT TOLERANCE.
!     REAL(KIND=WP) :: TEMP
!        A TEMPORARY LOCATION IN WHICH THE CURRENT ESTIMATE OF THE JTH
!        PARAMETER IS STORED.
!     REAL(KIND=WP) :: XM(IXM,M)
!        THE ARRAY IN WHICH ONE ROW OF THE INDEPENDENT VARIABLE ARRAY
!        IS STORED.
!
!     CALCULATE THE JTH PARTIAL DERIVATIVE USING FORWARD DIFFERENCE
!     QUOTIENTS AND DECIDE IF IT AGREES WITH USER SUPPLIED VALUES
!
      msg(j+1) = 0
!
      parmx = max(abs(par(j)),abs(scale))
      if (parmx .eq. 0.0e0) parmx = 1.0e0
!
!     COMPUTE INITIAL STEP SIZE
!
      stp = (sqrt(eta)*parmx*sign(1.0_wp,par(j))+par(j)) - par(j)
!
!     COMPUTE PREDICTED VALUES
!
      temp = par(j)
      par(j) = par(j) + stp
      call mdl(par, npar, xm, n, m, ixm, pvtemp)
      par(j) = temp
!
      pvpstp = pvtemp(nrow)
!
      fd = (pvpstp-pv)/stp
!
!     CHECK FOR DISAGREEMENT
!
      if (abs(fd-d) .gt. tau*abs(d)) go to 10
!
!     NUMERICAL AND ANALYTIC DERIVATIVES AGREE
!
!     CHECK IF ANALYTIC DERIVATIVE IS IDENTICALLY ZERO, INDICATING
!     THE POSSIBILITY THAT THE DERIVATIVE SHOULD BE RECHECKED AT
!     ANOTHER POINT.
!
      if (d.ne.0.0e0) return
!
!     JTH ANALYTIC AND NUMERICAL DERIVATIVES BOTH ARE ZERO.
!
      if (msg(1).eq.0) msg(1) = 1
      msg(j+1) = 3
      return
!
   10 continue
!
!     NUMERICAL AND ANALYTIC DERIVATIVES DISAGREE
!
!     CHECK WHY
!
      if (d.eq.0.0e0) then
        call dckzro(j, par, npar, mdl, xm, n,&
    &      nrow, m, ixm, pv, pvtemp, msg, lmsg, fd, parmx, pvpstp,&
     &      stp)
      else
        call dckcrv(j, d, par, npar, eta, tau, mdl, xm,&
    &      n, nrow, m, ixm, pv, pvtemp, msg, lmsg, fd, parmx,&
     &      pvpstp, stp)
      end if
!
      return
      end
