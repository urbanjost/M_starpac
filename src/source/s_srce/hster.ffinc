!HSTER
      subroutine hster(nmsub, y, n, ncells, ldstak, ylb, yub, ierr)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE CHECKS INPUT PARAMETERS TO THE USER
!     CALLABLE MEMBERS OF THE HIST FAMILY OF ROUTINES
!     FOR ERRORS AND REPORTS ANY THAT IT FINDS, BESIDES
!     RETURNING A FLAG INDICATING THAT ERRORS HAVE BEEN
!     FOUND.
!
!     WRITTEN BY - JOHN E. KOONTZ, JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS
!
!     CREATION DATE  -  MAY 17, 1982
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   ylb,yub
     integer&
     &   ierr,ldstak,n,ncells
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   y(*)
     character&
     &   nmsub(6)*1
!
!  LOCAL SCALARS
     integer&
     &   ldsmin,nv
     logical&
     &   head,ier1,ier2,ier3,ier4
!
!  LOCAL ARRAYS
     character&
     &   llds(8)*1,ln(8)*1,lone(8)*1,ly(8)*1
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL EISGE,ERVII,LDSCMP
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     LOGICAL HEAD
!        A FLAG INDICATING WHETHER THE HEADING SHOULD BE PRINTED
!        (TRUE) OR NOT (FALSE).  IF A HEADING IS PRINTED, THE VALUE
!        OF HEAD WILL BE CHANGED TO FALSE.
!     INTEGER IERR
!        OUTPUT PARAMETER.  A FLAG INDICATING WHETHER OR
!        NOT AN ERROR HAS BEEN FOUND.  0 = OK, 1 = ERROR.
!     LOGICAL IER1
!        TRUE IF N .LT. 3
!     LOGICAL IER2
!        TRUE IF LDSTAK .LT. (N + 13)/2.
!     LOGICAL IER3
!        TRUE IF ALL Y VALUES ARE EQUAL.
!     LOGICAL IER4
!        TRUE IF NO DATA WITHIN USER LIMITS
!     INTEGER LDSMIN
!        MINIMUM LENGTH OF FRAMEWORK AREA IN DOUBLE
!        PRECISION ELEMENTS.
!     INTEGER LDSTAK
!        INPUT PARAMETER.  THE NUMBER OF LOCATIONS PROVIDED IN
!        THE FRAMEWORK AREA.
!     CHARACTER*1 LLDS(8), LN(8), LONE(8), LY(8)
!        THE ARRAY(S) CONTAINING THE NAME(S) FO THE VARIALBE(S) CHECKED
!        FOR ERRORS
!     INTEGER N
!        INPUT PARAMETER.  THE NUMBER OF ELEMENTS IN Y.
!     INTEGER NCELLS
!        THE NUMBER OF CELLS IN THE HISTOGRAM.
!     CHARACTER*1 NMSUB(6)
!        THE NAME OF THE CALLING SUBROUTINE
!     INTEGER NV
!        THE NUMBER OF VALUES OUTSIDE USER SUPPLIED LIMITS.
!     REAL Y(N)
!        INPUT PARAMETER.  THE VECTOR OF N OBSERVATIONS.
!     REAL YLB
!        THE LOWER BOUND FOR SELECTING DATA FROM Y FOR THE HISTOGRAM.
!     REAL YUB
!        THE UPPER BOUND FOR SELECTING DATA FROM Y FOR THE HISTOGRAM.
!
!     INITIALIZE NAME VECTORS
!
     data   llds(1),  llds(2),  llds(3),  llds(4),  llds(5),  llds(6),&
     &  llds(7), llds(8) /'L', 'D', 'S', 'T', 'A', 'K', ' ', ' '/
     data     ln(1),    ln(2),    ln(3),    ln(4),    ln(5),    ln(6),&
     &    ln(7),   ln(8) /'N', ' ', ' ', ' ', ' ', ' ', ' ', ' '/
     data   lone(1),  lone(2),  lone(3),  lone(4),  lone(5),  lone(6),&
     &  lone(7), lone(8) /'O', 'N', 'E', ' ', ' ', ' ', ' ', ' '/
     data     ly(1),    ly(2),    ly(3),    ly(4),    ly(5),    ly(6),&
     &    ly(7),   ly(8) /'Y', ' ', ' ', ' ', ' ', ' ', ' ', ' '/
!
!     INITIALIZE ERROR FLAGS
!
      ier1 = .false.
      ier2 = .false.
      ier3 = .false.
      ier4 = .false.
!
      ierr = 0
!
      head = .true.
!
!     CHECK TO SEE THAT THERE IS AT LEAST ONE DATA POINTS.
!
      call eisge(nmsub, ln, n, 1, 2, head, ier1, lone)
!
!     CHECK FOR SUFFICIENT WORK AREA
!
      call ldscmp(2, 0, n, 0, 0, 0, 'S', ncells, ldsmin)
!
      call eisge(nmsub, llds, ldstak, ldsmin, 9, head, ier2, llds)
!
!     CHECK WHETHER THERE IS ANY DATA BETWEEN USER SUPPLIED LIMITS
!
     if ((ylb.lt.yub) .and. (n.ge.1))&
     &  call ervii (nmsub, ly, y, n, ylb, yub, n-1, head, 1, nv, ier4)
!
!     SEE IF ANY ERRORS WERE FOUND.
!
      if (ier1 .or. ier2 .or. ier3 .or. ier4) ierr = 1
      return
      end
