!AMEDRV
     subroutine amedrv(y, n, mspec, nfac, par, npar,&
    &   res, ldstak, ifixed, lifixd, stp, lstp, mit, stopss, stopp,&
    &   scale, lscale, delta, ivaprx, nprt, rsd, pv, lpv, sdpv, lsdpv,&
     &   sdres, lsdres, vcv, ivcv, nmsub, save, npare)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE CONTROLLING SUBROUTINE FOR NONLINEAR LEAST
!     SQUARES REGRESSION USING NUMERICALLY APPROXIMATED DERIVATIVES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 2, 1985
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   delta,rsd,stopp,stopss
     integer&
    &   ivaprx,ivcv,ldstak,lifixd,lpv,lscale,lsdpv,lsdres,lstp,&
     &   mit,n,nfac,npar,npare,nprt
     logical&
     &   save
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
    &   par(*),pv(*),res(*),scale(*),sdpv(*),sdres(*),stp(*),vcv(*),&
     &   y(*)
     integer&
     &   ifixed(*),mspec(4,*)
     character&
     &   nmsub(6)*1
!
!  SCALARS IN COMMON
     integer&
    &   ierr,iflag,mbo,mbol,mspect,nfact,nparar,npardf,nparma,&
     &   nrests,parar,pardf,parma,t,temp
!
!  ARRAYS IN COMMON
      double precision dstak(12)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   exmpt
     integer&
     &   ifp,is,isubhd,ixm,ldsmin,lwt,m,nall0,ndigit,neta,nnzw,stpt
     logical&
     &   aprxdv,hlfrpt,page,prtfxd,weight,wide
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   rstak(12),wt(1)
     integer&
     &   iptout(5),istak(12)
!
!  EXTERNAL FUNCTIONS
     integer&
     &   icnti,stkst
!       EXTERNAL ICNTI,STKST
!
!  EXTERNAL SUBROUTINES
       external amecnt,ameer,amehdr,amestp,backop,cpyvii,&
    &   dcoef,drv,ldscmp,mdlts1,mdlts3,nldrvn,prtcnt,&
     &   stkclr,stkset,stpamo
!
!  INTRINSIC FUNCTIONS
      intrinsic max
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
     common /mdltsc/mspect,nfact,pardf,npardf,parar,nparar,parma,&
     &   nparma,mbo,mbol,t,temp,nrests,iflag
!
!  EQUIVALENCES
      equivalence (dstak(1),istak(1))
      equivalence (dstak(1),rstak(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     EXTERNAL AMEHDR
!        THE ROUTINE USED TO PRINT THE HEADING
!     LOGICAL APRXDV
!        THE VARIABLE USED TO INDICATE WHETHER NUMERICAL
!        APPROXIMATIONS TO THE DERIVATIVE WERE USED (TRUE) OR NOT
!        (FALSE).
!     REAL(KIND=WP) :: DELTA
!        THE MAXIMUM CHANGE ALLOWED IN THE MODEL PARAMETERS AT THE
!        FIRST ITERATION.
!     EXTERNAL DRV
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        DERIVATIVE (JACOBIAN) MATRIX OF THE MODEL.
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     REAL(KIND=WP) :: EXMPT
!        THE PROPORTION OF OBSERVATIONS FOR WHICH THE COMPUTED
!        NUMERICAL DERIVATIVES WRT A GIVEN PARAMETER ARE EXEMPTED
!        FROM MEETING THE DERIVATIVE ACCEPTANCE CRITERIA.
!     LOGICAL HLFRPT
!        THE VARIABLE WHICH INDICATES WHETHER THE DERIVATIVE
!        CHECKING ROUTINE HAS ALREADY PRINTED PART OF THE
!        INITIAL SUMMARY (TRUE) OR NOT (FALSE).
!     INTEGER IERR
!        THE VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .GE. 1, ERRORS WERE DETECTED.
!     INTEGER IFIXED(LIFIXD)
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.
!        IF IFIXED(I).NE.0, THEN PAR(I) WILL BE HELD FIXED.
!        IF IFIXED(I).EQ.0, THEN PAR(I) WILL BE OPTIMIZED.
!     INTEGER IFLAG
!        ...
!     INTEGER IFP
!        AN INDICATOR FOR THE PRECISION OF THE STACK ALLOCATION TYPE,
!        WHERE IFP=3 INDICATES SINGLE AND IFP=4 INDICATES DOUBLE.
!     INTEGER IPTOUT(5)
!        THE VARIABLE USED TO CONTROL PRINTED OUTPUT FOR EACH SECTION.
!     INTEGER IS
!        A VALUE USED TO DETERMINE THE AMOUNT OF WORK SPACE NEEDED
!        BASED ON WHETHER STEP SIZES ARE INPUT OR ARE TO BE CALCULATED.
!     INTEGER ISTAK(12)
!        THE INTEGER VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER ISUBHD
!        AN INDICATOR VALUE SPECIFYING SUBHEADINGS TO BE PRINTED.
!     INTEGER IVAPRX
!        AN INDICATOR VALUE USED TO DESIGNATE WHICH OPTION IS TO BE USED
!        TO COMPUTE THE VARIANCE COVARIANCE MATRIX (VCV), WHERE FOR
!        IVAPRX LE 0, VCV = THE DEFAULT OPTION
!        IVAPRX EQ 1, VCV = INVERSE(TRANSPOSE(J)*J)
!                     USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                     DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 2, VCV = INVERSE(H)
!                     USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                     DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 3, VCV = INVERSE(H)*TRANSPOSE(J)*JACOBIAN*INVERSE(H)
!                     USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                     DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 4, VCV = INVERSE(TRANSPOSE(J)*J)
!                     USING ONLY THE MODEL SUBROUTINE
!        IVAPRX EQ 5, VCV = INVERSE(H)
!                     USING ONLY THE MODEL SUBROUTINE
!        IVAPRX EQ 6, VCV = INVERSE(H)*TRANSPOSE(J)*JACOBIAN*INVERSE(H)
!                     USING ONLY THE MODEL SUBROUTINE
!        IVAPRX GE 7, VCV = THE DEFAULT OPTION
!        WITH J REPRESENTING THE JACOBIAN AND H THE HESSIAN.
!     INTEGER IVCV
!        THE FIRST DIMENSION OF MATRIX VCV.
!     INTEGER IXM
!        THE FIRST DIMENSION OF MATRIX XM.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     INTEGER LIFIXD
!        THE DIMENSION OF VECTOR IFIXED.
!     INTEGER LPV
!        THE DIMENSION OF VECTOR PV.
!     INTEGER LSCALE
!        THE DIMENSION OF VECTOR SCALE.
!     INTEGER LSDPV
!        THE DIMENSION OF VECTOR SDPV.
!     INTEGER LSDRES
!        THE DIMENSION OF VECTOR SDRES.
!     INTEGER LSTP
!        THE DIMENSION OF VECTOR STP.
!     INTEGER LWT
!        THE DIMENSION OF VECTOR WT.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     INTEGER MBO
!        THE MAXIMUM BACK ORDER OPERATOR.
!     INTEGER MBOL
!        THE MAXIMUM BACK ORDER ON THE LEFT
!     EXTERNAL MDLTS1
!        THE STARPAC FORMAT SUBROUTINE FOR COMPUTING THE ARIMA MODEL
!        PREDICTED VALUES.
!     EXTERNAL MDLTS3
!        THE STARPAC FORMAT SUBROUTINE FOR COMPUTING THE ARIMA MODEL
!        RESIDUALS.
!     INTEGER MIT
!        THE MAXIMUM NUMBER OF ITERATIONS ALLOWED.
!     INTEGER MSPEC(4,NFAC)
!        THE ARRAY CONTAINING THE VALUES OF P, D, Q, AND S FOR EACH FACT
!     INTEGER MSPECT
!        THE STARTING LOCATION IN THE WORK SPACE FOR
!        THE ARRAY CONTAINING THE VALUES OF P, D, Q, AND S FOR EACH FACT
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NALL0
!        NUMBER OF STACK ALLOCATIONS OUTSTANDING.
!     INTEGER NDIGIT
!        THE NUMBER OF DIGITS IN THE PRINT CONTROL VALUE.
!     INTEGER NETA
!        THE NUMBER OF ACCURATE DIGITS IN THE MODEL RESULTS.
!     INTEGER NFAC
!        THE NUMBER OF FACTORS IN THE MODEL
!     INTEGER NFACT
!        THE NUMBER OF FACTORS IN THE MODEL
!     EXTERNAL NLDRVN
!        THE NAME OF THE ROUTINE WHICH CALCULATES THE DERIVATIVES.
!     CHARACTER*1 NMSUB(6)
!        THE NAME OF THE ROUTINE CALLING THE ERROR CHECKING ROUTINE
!     INTEGER NNZW
!        THE NUMBER OF NON ZERO WEIGHTS.
!     INTEGER NPAR
!        THE NUMBER OF PARAMETERS IN THE MODEL.
!     INTEGER NPARAR
!        THE NUMBER OF AUTOREGRESSIVE PARAMETERS
!     INTEGER NPARDF
!        THE ORDER OF THE EXPANDED DIFFERENCE FILTER.
!     INTEGER NPARE
!        THE NUMBER OF PARAMETERS TO BE OPTIMIZED.
!     INTEGER NPARMA
!        THE LENGTH OF THE VECTOR PARMA
!     INTEGER NPRT
!        THE PARAMETER USED TO INDICATE HOW MUCH PRINTED OUTPUT IS
!        TO BE PROVIDED.
!     INTEGER NRESTS
!        THE MAXIMUM NUMBER OF RESIDUALS TO BE COMPUTED.
!     LOGICAL PAGE
!        THE VARIABLE USED TO INDICATE WHETHER A GIVEN SECTION OF
!        THE OUTPUT IS TO BEGIN ON A NEW PAGE (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: PAR(NPAR)
!        THE CURRENT ESTIMATES OF THE PARAMETERS.
!     INTEGER PARAR
!        THE STARTING LOCATION IN THE WORK ARRAY FOR
!        THE AUTOREGRESSIVE PARAMETERS
!     INTEGER PARDF
!        THE STARTING LOCATION IN THE WORK SPACE FOR
!        THE VECTOR CONTAINING THE DIFFERENCE FILTER PARAMETERS
!     INTEGER PARMA
!        THE STARTING LOCATION IN THE WORK ARRAY FOR
!        THE MOVING AVERAGE PARAMETERS
!     LOGICAL PRTFXD
!        THE INDICATOR VALUE USED TO DESIGNATE WHETHER THE
!        OUTPUT IS TO INCLUDE INFORMATION ON WHETHER THE
!        PARAMETER IS FIXED (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: PV(LPV)
!        THE PREDICTED VALUE OF THE FIT.
!     REAL(KIND=WP) :: RES(N)
!        THE RESIDUALS FROM THE FIT.
!     REAL(KIND=WP) :: RSD
!        THE RESIDUAL STANDARD DEVIATION.
!     REAL(KIND=WP) :: RSTAK(12)
!        THE REAL VERSION OF THE /CSTAK/ WORK AREA.
!     LOGICAL SAVE
!        THE VARIABLE USED TO INDICATE WHETHER ANY RESULTS OTHER THAN
!        THE RESIDUALS AND PARAMETERS ARE TO BE SAVED (TRUE) OR NOT
!        (FALSE).
!     REAL(KIND=WP) :: SCALE(LSCALE)
!        THE TYPICAL SIZE OF THE PARAMETERS.
!     REAL(KIND=WP) :: SDPV(LSDPV)
!        THE STANDARD DEVIATIONS OF THE PREDICTED VALUES.
!     REAL(KIND=WP) :: SDRES(LSDRES)
!        THE STANDARDIZED RESIDUALS.
!     REAL(KIND=WP) :: STOPP
!        THE STOPPING CRITERION FOR THE TEST BASED ON THE MAXIMUM SCALED
!        RELATIVE CHANGE IN THE ELEMENTS OF THE MODEL PARAMETER VECTOR
!     REAL(KIND=WP) :: STOPSS
!        THE STOPPING CRITERION FOR THE TEST BASED ON THE RATIO OF THE
!        PREDICTED DECREASE IN THE RESIDUAL SUM OF SQUARES (COMPUTED
!        BY STARPAC) TO THE CURRENT RESIDUAL SUM OF SQUARES ESTIMATE.
!     REAL(KIND=WP) :: STP(LSTP)
!        THE STEP SIZE ARRAY.
!     EXTERNAL STPAMO
!        THE ROUTINE USED TO PRINT THE OUTPUT FROM THE STEP SIZE SELECTI
!        ROUTINES.
!     INTEGER STPT
!        THE STARTING LOCATION IN /CSTAK/ OF VECTOR STPT CONTAINING
!        THE STEP SIZE ARRAY.
!     INTEGER T
!        THE STARTING LOCATION IN THE WORK ARRAY FOR
!        A TEMPORARY WORK VECTOR.
!     INTEGER TEMP
!        THE STARTING LOCATION IN THE WORK ARRAY FOR
!        A TEMPORARY WORK VECTOR
!     REAL(KIND=WP) :: VCV(IVCV,NPAR)
!        THE VARIANCE-COVARIANCE MATRIX.
!     LOGICAL WEIGHT
!        THE VARIABLE USED TO INDICATE WHETHER WEIGHTED ANALYSIS IS TO
!        BE PERFORMED (TRUE) OR NOT (FALSE).
!     LOGICAL WIDE
!        THE VARIABLE USED TO INDICATE WHETHER THE HEADING SHOULD
!        BE FULL WIDTH (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: WT(1)
!        THE USER SUPPLIED WEIGHTS, UNUSED WHEN WEIGHT = FALSE.
!     REAL(KIND=WP) :: Y(N)
!        THE DEPENDENT VARIABLE.
!
!     SET VARIOUS PROGRAM VALUES
!
      weight = .false.
      wt(1) = 1.0e0
      lwt = 1
!
      hlfrpt = .false.
      aprxdv = .true.
      prtfxd = .true.
      exmpt = -1.0e0
      neta = 0
!
      wide = .true.
      page = .false.
!
      ndigit = 5
!
!     COMPUTE BACK OPERATORS
!
      call backop(mspec, nfac, npardf, mbol, mbo, nparma, nparar)
      nnzw = n - npardf
!
!     SET UP FOR ERROR CHECKING
!
      ierr = 0
      npare = npar
     if ((ifixed(1).ge.0) .and. (npar.ge.1)) npare =&
     &   icnti(ifixed,npar,0)
      is = 0
      if (stp(1).le.0.0e0) is = 1
!
     call ldscmp(25, 0, max(is*2*(n+npar),60+npar+npare) + 4*nfac,&
    &   0, 0, 0, 'S', 5*mbo +&
    &   max(is*(10*n+6*mbo+606),&
    &        94+4*(n+mbo+101)+npare*(3*npare+35)/2),&
     &   ldsmin)
!
     call ameer(nmsub, n, npar, npare, ldstak,&
     &   ldsmin, stp, lstp, scale, lscale, ivcv, save, mspec, nfac)
!
      if (ierr.ne.0) return
!
      call stkset(ldstak, 4)
!
!     SET PRINT CONTROL VALUES
!
      call prtcnt(nprt, ndigit, iptout)
!
!     SUBDIVIDE WORKSPACE FOR STEP SIZES
!
      nall0 = stkst(1)
!
      ifp = 3
!
      stpt = stkget(npar,ifp)
!
      pardf = stkget(mbo, ifp)
      parar = stkget(mbo, ifp)
      parma = stkget(mbo, ifp)
      t = stkget(2*mbo, ifp)
!
      temp = t + mbo
!
      nfact = nfac
      mspect = stkget(4*nfac, 2)
!
!     SET UP FOR MODEL
!
      aprxdv = .true.
      m = 1
      ixm = n
      nrests = mbo + 101 + n
!
      call cpyvii(nfac, mspec(1,1), 4, istak(mspect), 1)
      call cpyvii(nfac, mspec(2,1), 4, istak(mspect+nfac), 1)
      call cpyvii(nfac, mspec(3,1), 4, istak(mspect+2*nfac), 1)
      call cpyvii(nfac, mspec(4,1), 4, istak(mspect+3*nfac), 1)
     call dcoef (nfac, istak(mspect+nfac), istak(mspect+3*nfac),&
     &  npardf, rstak(pardf), mbo, rstak(t))
!
!     COPY SUPPLIED STEP SIZES TO WORK SPACE
!
      call scopy(lstp, stp, 1, rstak(stpt), 1)
!
      if (ierr.ne.0) go to 10
!
!     SELECT STEP SIZES, IF DESIRED
!
      isubhd = 1
     if (stp(1).le.0.0e0) call amestp(y, n, m, ixm, mdlts3, par, npar,&
    &  rstak(stpt), exmpt, neta, scale, lscale, iptout(1), amehdr,&
    &  page, wide, isubhd, hlfrpt, prtfxd, ifixed, lifixd, stpamo,&
     &  nrests-n)
!
     call amecnt(y, wt, lwt, y, n, m, ixm, mdlts1, nldrvn, aprxdv, drv,&
    &  par, npar, res, ifixed, lifixd, rstak(stpt), npar, mit,&
    &  stopss, stopp, scale, lscale, delta, ivaprx, rsd, pv, lpv,&
    &  sdpv, lsdpv, sdres, lsdres, vcv, ivcv, weight, save, nnzw,&
     &  npare, amehdr, page, wide, iptout, ndigit, hlfrpt, nrests)
!
   10 continue
!
      call stkclr(nall0)
!
      return
!
      end
