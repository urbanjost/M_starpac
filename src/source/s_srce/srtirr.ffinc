!SRTIRR
      subroutine srtirr(ir, rr, la, a)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE SORTS THE LENGTH LA ARRAY A, THE LENGTH LA
!     INTEGER ARRAY IR, AND THE LENGTH LA ARRAY RR INTO
!     ASCENDING ORDER, BASED ON THE VALUES IN A.  THE ARRAY
!     A CONSTITUTES THE SORTING KEY.  THE OTHER TWO ARRAYS ARE
!     CARRIED ALONG.  ORDINARILY THE ARRAY IR CONTAINS THE
!     VALUES 1, ..., LA INITIALLY, SO THAT THE THREE ARRAYS CAN
!     LATER BE SORTED AGAIN WITH IR AS THE KEY, IN ORDER TO
!     RESTORE A AND RR TO THEIR ORIGINAL ORDER.
!
!     WRITTEN BY - JOHN E. KOONTZ
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  MAY 17, 1982
!        (BASED CLOSELY ON THE IMSL CDC LIBRARY 3 ROUTINE VSORTP)
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   la
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   a(la),rr(la)
     integer&
     &   ir(la)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   r,rt,rtt,t,tt
     integer&
     &   i,ij,it,itt,j,k,l,m
!
!  LOCAL ARRAYS
     integer&
     &   il(21),iu(21)
!
!  INTRINSIC FUNCTIONS
      intrinsic int
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: A(LA)
!        INPUT/OUTPUT PARAMETER.  THE KEY ARRAY.
!     INTEGER I
!        *
!     INTEGER IJ
!        *
!     INTEGER IL(21)
!        *
!     INTEGER IR(LA)
!        INPUT/OUTPUT PARAMETER.  THE INTEGER ARRAY CARRIED ALONG
!        IN THE SORT.  INITIALLY IT SHOULD CONTAIN 1, ..., LA.
!        ON EXIT IT CONTAINS THE PERMUTATION VECTOR OF THE SORT.
!        SORTING ON THE PERMUTATION VECTOR WILL RESTORE THE KEY
!        ARRAY A AND THE ARRAY RR TO THEIR ORIGINAL ORDERS.
!     INTEGER IT
!        *
!     INTEGER ITT
!        *
!     INTEGER IU(21)
!        *
!     INTEGER J
!        *
!     INTEGER K
!        *
!     INTEGER L
!        *
!     INTEGER LA
!        INPUT PARAMETER.  THE LENGTH OF THE INPUT/OUTPUT PARAMETERS
!        A, IR, AND RR.
!     INTEGER M
!        *
!     REAL(KIND=WP) :: R
!        *
!     REAL(KIND=WP) :: RR(LA)
!        INPUT/OUTPUT PARAMETER.  THE ARRAY CARRIED ALONG IN
!        THE SORT.  IT MIGHT BE THE SET OF WEIGHTS FOR A.
!     REAL(KIND=WP) :: RT
!        *
!     REAL(KIND=WP) :: RTT
!        *
!     REAL(KIND=WP) :: T
!        *
!     REAL(KIND=WP) :: TT
!
      m = 1
      i = 1
      j = la
      r = .375e0
   10 if (i.eq.j) go to 90
      if (r.gt.0.5898437e0) go to 20
      r = r + 3.90625e-2
      go to 30
   20 r = r - .21875e0
   30 k = i
!                                  SELECT A CENTRAL ELEMENT OF THE
!                                  ARRAY AND SAVE IT IN LOCATION T
      ij = i + int((j-i)*r)
      t = a(ij)
      it = ir(ij)
      rt = rr(ij)
!                                  IF FIRST ELEMENT OF ARRAY IS GREATER
!                                  THAN T, INTERCHANGE WITH T
      if (a(i).le.t) go to 40
      a(ij) = a(i)
      a(i) = t
      t = a(ij)
      ir(ij) = ir(i)
      ir(i) = it
      it = ir(ij)
      rr(ij) = rr(i)
      rr(i) = rt
      rt = rr(ij)
   40 l = j
!                                  IF LAST ELEMENT OF ARRAY IS LESS THAN
!                                  T, INTERCHANGE WITH T
      if (a(j).ge.t) go to 60
      a(ij) = a(j)
      a(j) = t
      t = a(ij)
      ir(ij) = ir(j)
      ir(j) = it
      it = ir(ij)
      rr(ij) = rr(j)
      rr(j) = rt
      rt = rr(ij)
!                                  IF FIRST ELEMENT OF ARRAY IS GREATER
!                                  THAN T, INTERCHANGE WITH T
      if (a(i).le.t) go to 60
      a(ij) = a(i)
      a(i) = t
      t = a(ij)
      ir(ij) = ir(i)
      ir(i) = it
      it = ir(ij)
      rr(ij) = rr(i)
      rr(i) = rt
      rt = rr(ij)
      go to 60
   50 tt = a(l)
      a(l) = a(k)
      a(k) = tt
      itt = ir(l)
      ir(l) = ir(k)
      ir(k) = itt
      rtt = rr(l)
      rr(l) = rr(k)
      rr(k) = rtt
!                                  FIND AN ELEMENT IN THE SECOND HALF OF
!                                  THE ARRAY WHICH IS SMALLER THAN T
   60 l = l - 1
      if (a(l).gt.t) go to 60
!                                  FIND AN ELEMENT IN THE FIRST HALF OF
!                                  THE ARRAY WHICH IS GREATER THAN T
   70 k = k + 1
      if (a(k).lt.t) go to 70
!                                  INTERCHANGE THESE ELEMENTS
      if (k.le.l) go to 50
!                                  SAVE UPPER AND LOWER SUBSCRIPTS OF
!                                  THE ARRAY YET TO BE SORTED
      if (l-i.le.j-k) go to 80
      il(m) = i
      iu(m) = l
      i = k
      m = m + 1
      go to 100
   80 il(m) = k
      iu(m) = j
      j = l
      m = m + 1
      go to 100
!                                  BEGIN AGAIN ON ANOTHER PORTION OF
!                                  THE UNSORTED ARRAY
   90 m = m - 1
      if (m.eq.0) return
      i = il(m)
      j = iu(m)
  100 if (j-i.ge.1) go to 30
      if (i.eq.1) go to 10
      i = i - 1
  110 i = i + 1
      if (i.eq.j) go to 90
      t = a(i+1)
      it = ir(i+1)
      rt = rr(i+1)
      if (a(i).le.t) go to 110
      k = i
  120 a(k+1) = a(k)
      ir(k+1) = ir(k)
      rr(k+1) = rr(k)
      k = k - 1
      if (t.lt.a(k)) go to 120
      a(k+1) = t
      ir(k+1) = it
      rr(k+1) = rt
      go to 110
      end
