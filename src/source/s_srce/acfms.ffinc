!ACFMS
     subroutine acfms (y, ymiss, n, lagmax, lacov, acov, amiss, nlppa,&
     &   nprt, ldstak)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE USER CALLABLE ROUTINE FOR COMPUTING THE AUTO-
!     CORRELATIONS OF A TIME SERIES WITH MISSING VALUES (LONG CALL).
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 21, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      real(kind=wp) :: amiss,ymiss
     integer&
     &   lacov,lagmax,ldstak,n,nprt
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   acov(*),y(*)
     integer&
     &   nlppa(*)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      double precision dstak(12)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   chia,chiap,fplm,ospvar,ymean,ysd
     integer&
    &   aic,ftest,i,iar,ifp,iprt,laglst,ldsmin,lyfft,nall0,nfac,&
     &   nfft,phi,prho,sdrho,work
     logical&
     &   differ,isfft
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   rstak(12)
     integer&
     &   iod(1),nd(1),ndum(1)
     character&
     &   nmsub(6)*1
!
!  EXTERNAL FUNCTIONS
!      REAL(KIND=WP) ::
!     +   R1MACH
!      INTEGER
!     +   STKST
!      EXTERNAL R1MACH,STKST
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL ACFER,ACFMNM,ACFOUT,IPRINT,LDSCMP,STKCLR,STKSET
!
!  INTRINSIC FUNCTIONS
      intrinsic sqrt
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!  EQUIVALENCES
      equivalence (dstak(1),rstak(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: ACOV(LACOV)
!        THE AUTOCOVARIANCE VECTOR.
!     INTEGER AIC
!        THE STARTING LOCATION IN DSTAK FOR
!        THE ARRAY CONTAINING THE AKAIKES CRITERION FOR EACH ORDER.
!     REAL(KIND=WP) :: AMISS
!        THE MISSING VALUE CODE FOR THE RETURNED ACVF ESTIMATES
!        (VECTOR ACOV).
!     REAL(KIND=WP) :: CHIA, CHIAP
!        THE VARIABLES IN WHICH THE CHI SQUARE STATISTIC AND
!        CHI SQUARED STATISTIC PROBABILITY FOR THE AUTOCORRELATIONS
!        ARE STORED.
!     LOGICAL DIFFER
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER THE CALLING
!        ROUTINE IS ACFD (DIFFER = TRUE) OR NOT (DIFFER = FALSE)
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     REAL(KIND=WP) :: FPLM
!        THE FLOATING POINT LARGEST MAGNITUDE.
!     INTEGER FTEST
!        THE STARTING LOCATION IN DSTAK FOR
!        THE ARRAY CONTAINING THE PARTIAL F RATIO AND PROBABILITIES
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IAR
!        THE ORDER OF THE AUTOREGRESSIVE PROCESS CHOSEN.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!     INTEGER IFP
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER THE FLOATING
!        POINT VARIABLES ARE SINGLE (IFP=3) OR DOUBLE (IFP=4) PRECISION.
!     INTEGER IOD(1)
!        THE ORDER OF EACH OF THE DIFFERENCE FACTORS.
!     INTEGER IPRT
!        THE UNIT NUMBER USED FOR OUTPUT.
!     LOGICAL ISFFT
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER THE CALLING
!        ROUTINE HAS SUFFIX F (ISFFT = TRUE) OR NOT (ISFFT = FALSE)
!     INTEGER LACOV
!        THE LENGTH OF THE VECTOR ACOV.
!     INTEGER LAGLST
!        THE LAST LAG BEFORE MISSING DATA CAUSED THE ACVF OF THE
!        SERIES NOT TO BE COMPUTED.
!     INTEGER LAGMAX
!        THE MAXIMUM LAG VALUE REQUESTED.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     INTEGER LYFFT
!        THE LENGTH OF THE VECTOR YFFT.
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS IN EACH SERIES
!     INTEGER NALL0
!        THE NUMBER OF OUTSTANDING STACK ALLOCATIONS
!     INTEGER ND(1)
!        THE NUMBER OF TIMES EACH DIFFERENCE FACTOR IS TO BE APPLIED
!     INTEGER NDUM(1)
!        A DUMMY ARRAY.
!     INTEGER NFAC
!        THE NUMBER OF DIFFERENCE FACTORS
!     INTEGER NFFT
!        THE NUMBER OF OBSERVATIONS IN THE EXTENDED SERIES.
!     INTEGER NLPPA(LACOV)
!        THE ARRAY CONTAINING THE NUMBER OF LAGGED PRODUCT PAIRS
!        USED TO COMPUTE EACH ACVF ESTIMATE.
!     CHARACTER*1 NMSUB(6)
!        THE NAME OF THE SUBROUTINE CALLING THE ERROR CHECKING
!        SUBROUTINE.
!     INTEGER NPRT
!        THE INDICATOR VARIABLE USED TO SPECIFY WHETHER OR NOT
!        PRINTED OUTPUT IS TO BE GIVEN, WHERE IF THE VALUE OF
!        NPRT IS ZERO, NO OUTPUT IS MADE.
!     REAL(KIND=WP) :: OSPVAR
!        THE ONE STEP PREDICTION VARIANCE FOR THE ORDER SELECTED (IAR).
!     INTEGER PHI
!        THE STARTING LOCATION IN DSTAK FOR THE
!        THE ARRAY OF AUTOREGRESSIVE COEFFICIENTS FOR THE SELECTED
!        ORDER.
!     INTEGER PRHO
!        THE STARTING LOCATION IN THE WORK AREA FOR PRHO.
!     REAL(KIND=WP) :: RSTAK(12)
!        THE REAL VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER SDRHO
!        THE STARTING LOCATION IN THE WORK AREA FOR SDRHO.
!     INTEGER WORK
!        THE STARTING LOCATION IN THE WORK AREA FOR WORK.
!     REAL(KIND=WP) :: Y(N)
!        THE VECTOR CONTAINING THE OBSERVED TIME SERIES
!     REAL(KIND=WP) :: YMEAN
!        THE MEAN OF THE OBSERVED TIME SERIES
!     REAL(KIND=WP) :: YMISS
!        THE USER SUPPLIED CODE WHICH IS USED TO DETERMINE WHETHER
!        OR NOT AN OBSERVATION IN THE SERIES IS MISSING.
!        IF Y(I) .EQ. YMISS, THE VALUE IS ASSUMED MISSING.
!        IF Y(I) .NE. YMISS, THE VALUE IS ASSUMED NOT MISSING.
!     REAL(KIND=WP) :: YSD
!        THE STANDARD DEVIATION OF THE OBSERVED TIME SERIES
!
!     SET UP NAME ARRAYS
!
     data&
    &  nmsub(1),  nmsub(2),  nmsub(3),  nmsub(4),  nmsub(5),  nmsub(6)&
     & /     'A',       'C',       'F',       'M',       'S',       ' '/
!
!     SET UP FOR ERROR CHECKING
!
      ierr = 0
      differ = .false.
      nfac = 1
      nd(1) = 0
      iod(1) = 0
      isfft = .false.
      lyfft = n
      nfft = n
!
      if (nprt .eq. 0) then
        ldsmin = 0
      else
        call ldscmp(5, 0, 0, 0, 0, 0, 'S', 6*lagmax+1, ldsmin)
      end if
!
     call acfer(nmsub, n, lagmax, lacov, ldstak, ldsmin,&
     &  differ, nfac, nd, iod, isfft, lyfft, nfft)
!
!     CHECK WHETHER AN ERROR HAS BEEN DETECTED
!
      if (ierr.eq.0) then
!
!       SET UP THE WORK AREA.
!
        call stkset(ldstak, 4)
        nall0 = stkst(1)
!
        fplm = r1mach(2)
!
        amiss = fplm
!
        if (nprt.eq.0) then
!
!         SPECIFY STARTING LOCATIONS IN THE STACK FOR DUMMY VARIABLES
!
          prho = 1
          aic = 1
          ftest = 1
          phi = 1
          work = 1
          sdrho = 1
        else
!
          ifp = 3
!
          prho = stkget(lagmax, ifp)
          aic = stkget(lagmax+1, ifp)
          ftest = stkget(2*lagmax, ifp)
          phi = stkget(lagmax, ifp)
          work = stkget(lagmax, ifp)
          sdrho = work
        end if
!
        if (ierr.eq.0) then
!
!         CALL ROUTINE FOR MAIN AUTOCORRELATION COMPUTATIONS.
!
         call acfmnm (y, ymiss, n, lagmax, acov(2), rstak(sdrho),&
    &       nlppa, ymean, rstak(prho), rstak(aic), rstak(ftest),&
    &       rstak(phi), iar, ospvar, acov, lacov, lagmax+1, chia,&
     &       chiap, laglst, rstak(work), nprt)
!
          if (laglst .ge. 0) then
            ysd = sqrt (acov(1) * n / (n - 1))
          else
            ysd = acov(1)
          end if
!
!           CALL ROUTINE TO PRINT OUT AUTOCORRELATIONS
!
         if ((nprt.ne.0) .or. (acov(1).eq.0.0_wp))&
    &      call acfout (ymean, ysd, n, nlppa(1), lagmax, acov(2),&
    &         rstak(sdrho), rstak(prho), nlppa, rstak(aic), lagmax+1,&
    &         rstak(ftest), iar, rstak(phi), ospvar, chia, chiap,&
    &         laglst, .true., ymiss, .false., .false., 0, ndum, ndum,&
     &         0)
!
          if (nprt.ne.0) then
            do 50 i = 1, lagmax
               acov(i+1) = acov(i+1) * acov(1)
   50       continue
          end if
        end if
!
        call stkclr(nall0)
      end if
!
      if (ierr.ne.0) then
!
!     PRINT PROPER CALL SEQUENCE AND RETURN
!
        ierr = 1
        call iprint (iprt)
        write (iprt, 1000)
      end if
!
      return
!
!     FORMAT STATEMENTS
!
1000 format(/42h the correct form of the call statement is//&
    &  '       CALL ACFMS (Y, YMISS, N,'/&
    &  '      +            LAGMAX, LACOV, ACOV, AMISS, NLPPA, NPRT,',&
     &  ' LDSTAK)')
      end
