!NLINIT
     subroutine nlinit (n, ifixd, par, npar, pare, npare, mit,&
    &   stopss, stopp, scale, lscale, delta, ivaprx, aprxdv, ivcvpt,&
     &   iwork, iiwork, rwork, irwork, scl)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE PERFORMS INITIALIZATION FOR THE NONLINEAR
!     LEAST SQUARES ROUTINES.
!
!     REFERENCES
!
!     DENNIS, J.E., GAY, D.M., AND WELSCH, R.E. (1979), AN ADAPTIVE
!             NONLINEAR LEAST-SQUARES ALGORITHM, (BEING REVISED).
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  OCTOBER 3, 1983
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   delta,stopp,stopss
     integer&
     &   iiwork,irwork,ivaprx,ivcvpt,lscale,mit,n,npar,npare,scl
     logical&
     &   aprxdv
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   par(npar),pare(npar),rwork(irwork),scale(lscale)
     integer&
     &   ifixd(npar),iwork(iiwork)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     integer&
    &   afctol,cnvcod,covprt,covreq,dinit,dtype,iscl,j,lmax0,&
    &   mxfcal,mxiter,niter,outlev,prunit,rfctol,sclj,solprt,&
     &   statpr,x0prt,xctol
!
!  EXTERNAL FUNCTIONS
!     REAL(KIND=WP) :: RMDCON
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL DFAULT,NLSPK
!
!  INTRINSIC FUNCTIONS
      intrinsic abs,iabs,max
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     INTEGER AFCTOL
!        THE LOCATION IN RWORK OF THE ABSOLUTE CONVERGENCE TOLERANCE.
!     LOGICAL APRXDV
!        THE VARIABLE USED TO INDICATE WHETHER NUMERICAL
!        APPROXIMATIONS TO THE DERIVATIVE WERE USED (TRUE) OR NOT
!        (FALSE).
!     INTEGER CNVCOD
!        A VALUE USED TO CONTROL THE PRINTING OF ITERATION REPORTS.
!     INTEGER COVPRT
!        THE LOCATION IN IWORK OF THE VARIABLE USED TO INDICATE WHETHER
!        THE COVARIANCE MATRIX IS TO BE PRINTED BY THE NL2 CODE, WHERE
!        IWORK(COVPRT) = 0 INDICATES IT IS NOT.
!     INTEGER COVREQ
!        THE LOCATION IN IWORK OF THE VARIABLE USED TO INDICATE HOW
!        THE COVARIANCE MATRIX IS TO BE COMPUTED BY THE NL2 CODE, WHERE
!        IWORK(COVREQ) = 3 INDICATES THE COVARIANCE MATRIX IS TO BE COMP
!        AS THE RESIDUAL VARIANCE TIMES THE INVERSE OF THE JACOBIAN MATR
!        TRANSPOSED TIMES THE JACOBIAN MATRIX .
!     REAL(KIND=WP) :: DELTA
!        THE MAXIMUM CHANGE ALLOWED IN THE MODEL PARAMETERS AT THE
!        FIRST ITERATION.
!     INTEGER DINIT
!        THE LOCATION IN IWORK OF THE VALUE USED TO INDICATE
!        WHETHER OR NOT USER SUPPLIED SCALE VALUES ARE TO BE
!        USED, WHERE THE (NL2) DEFAULT VALUE OF RWORK(DINIT) = 0.0E0
!        INIDCATES NO, AND THE VALUE RWORK(DINIT) = -1.0E0 INDICATES
!        YES.
!     INTEGER DTYPE
!        THE LOCATION IN IWORK OF THE VALUE INDICATING WHETHER THE
!        SCALE VALUES HAVE BEEN SUPPLIED BY THE USER (IWORK(DTYPE) .LE.
!        OR THE DEFAULT VALUES ARE TO BE USED (IWORK(DTYPE) .GT. 0).
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .GE. 1, ERRORS WERE DETECTED.
!     INTEGER IFIXD(NPAR)
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.
!        IF IFIXED(I).NE.0, THEN PAR(I) WILL BE HELD FIXED.
!        IF IFIXED(I).EQ.0, THEN PAR(I) WILL BE OPTIMIZED.
!     INTEGER IIWORK
!        THE DIMENSION OF THE INTEGER WORK VECTOR IWORK.
!     INTEGER IRWORK
!        THE DIMENSION OF THE REAL WORK VECTOR RWORK.
!     INTEGER ISCL
!        THE LOCATION IN IWORK INDICATING THE STARTING LOCATION IN
!         RWORK OF THE SCALE VECTOR.
!     INTEGER IVAPRX
!        AN INDICATOR VALUE USED TO DESIGNATE WHICH OPTION IS TO BE USED
!        TO COMPUTE THE VARIANCE COVARIANCE MATRIX (VCV), WHERE
!        IVAPRX LE 0 INDICATES THE THE DEFAULT OPTION WILL BE USED
!        IVAPRX EQ 1 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 2 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 3 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                          *INVERSE(HESSIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 4 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVAPRX EQ 5 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVAPRX EQ 6 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                          *INVERSE(HESSIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVAPRX GE 7 INDICATES THE DEFAULT OPTION WILL BE USED
!     INTEGER IVCVPT
!        AN INDICATOR VALUE USED TO DESIGNATE WHICH FORM OF THE
!        VARIANCE COVARIANCE MATRIX (VCV) IS BEING PRINTED, WHERE
!        IVCVPT = 1 INDICATES THE VCV WAS COMPUTED AS
!                   INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!        IVCVPT = 2 INDICATES THE VCV WAS COMPUTED AS
!                   INVERSE(HESSIAN)
!        IVCVPT = 3 INDICATES THE VCV WAS COMPUTED AS
!                   INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                       *INVERSE(HESSIAN)
!     INTEGER IWORK(IIWORK)
!        THE INTEGER WORK SPACE VECTOR USED BY THE NL2 SUBROUTINES.
!     INTEGER J
!        THE INDEX OF THE PARAMETER BEING EXAMINED.
!     INTEGER LMAX0
!        THE LOCATION IN RWORK OF THE VALUE INDICATING THE
!        MAXIMUM CHANGE ALLOWED IN THE MODEL PARAMETERS AT THE
!        FIRST ITERATION.
!     INTEGER MIT
!        THE MAXIMUM NUMBER OF ITERATIONS ALLOWED.
!     INTEGER MXFCAL
!        THE LOCATION IN IWORK OF THE VARIABLE DESIGNATING THE
!        MAXIMUM NUMBER OF FUNCTION CALLS ALLOWED, EXCLUDING
!        CALLS NECESSARY TO COMPUTE THE DERIVATIVES AND VARIANCE
!        COVARIANCE MATRIX.
!     INTEGER MXITER
!        THE LOCATION IN IWORK OF THE VARIABLE DESIGNATING THE
!        MAXIMUM NUMBER OF ITERATIONS ALLOWED.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NITER
!        THE LOCATION IN IWORK OF THE NUMBER OF THE CURRENT ITERATION.
!     INTEGER NPAR
!        THE NUMBER OF UNKNOWN PARAMETERS IN THE MODEL.
!     INTEGER NPARE
!        THE NUMBER OF UNKNOWN PARAMETERS TO BE OPTIMIZED.
!     INTEGER OUTLEV
!        THE LOCATION IN IWORK OF THE PARAMETER USED TO CONTROL THE
!        PRINTING OF THE ITERATION REPORTS BY NL2.
!     REAL(KIND=WP) :: PAR(NPAR)
!        THE ARRAY IN WHICH THE CURRENT ESTIMATES OF THE UNKNOWN
!        PARAMETERS ARE STORED.
!     REAL(KIND=WP) :: PARE(NPAR)
!        THE CURRENT ESTIMATES OF THE UNKNOWN PARAMETERS, BUT ONLY
!        THOSE TO BE OPTIMIZED (NOT THOSE WHOSE VALUES ARE FIXED).
!     INTEGER PRUNIT
!        THE LOCATION IN IWORK OF THE PARAMETER USED TO CONTROL
!        THE PRINT UNIT USED BY NL2.  IWORK(PRUNIT) = 0 MEANS
!        DONT PRINT ANYTHING.
!     INTEGER RFCTOL
!        THE LOCATION IN RWORK OF THE RELATIVE FUNCTION CONVERGENCE
!        TOLERANCE.
!     REAL(KIND=WP) :: RWORK(IRWORK)
!        THE REAL WORK VECTOR USED BY THE NL2 SUBROUTINES.
!     REAL(KIND=WP) :: SCALE(LSCALE)
!        THE TYPICAL SIZE OF THE UNKNOWN PARAMETERS.
!     INTEGER SCL
!        THE INDEX IN RWORK OF THE 1ST VALUE OF THE USER SUPPLIED SCALE
!        VALUE.
!     INTEGER SCLJ
!        THE INDEX IN RWORK OF THE JTH VALUE OF THE USER SUPPLIED SCALE
!        VALUE.
!     INTEGER SOLPRT
!        THE LOCATION IN IWORK OF THE PARAMETER USED TO CONTROL PRINTING
!        BY NL2 OF THE FINAL SOLUTION.
!     INTEGER STATPR
!        THE LOCATION IN IWORK OF THE PARAMETER USED TO CONTROL PRINTING
!        BY NL2 OF SUMMARY STATISTICS.
!     REAL(KIND=WP) :: STOPP
!        THE STOPPING CRITERION FOR THE TEST BASED ON THE MAXIMUM SCALED
!        RELATIVE CHANGE IN THE ELEMENTS OF THE MODEL PARAMETER VECTOR
!     REAL(KIND=WP) :: STOPSS
!        THE STOPPING CRITERION FOR THE TEST BASED ON THE RATIO OF THE
!        PREDICTED DECREASE IN THE RESIDUAL SUM OF SQUARES (COMPUTED
!        BY STARPAC) TO THE CURRENT RESIDUAL SUM OF SQUARES ESTIMATE.
!     INTEGER XCTOL
!        THE LOCATION IN RSTAK/DSTAK OF THE P CONVERGENCE TOLERANCE.
!     INTEGER X0PRT
!         THE LOCATION IN IWORK OF THE PARAMETER USED TO CONTROL PRINTIN
!        BY NL2 OF THE INITIAL PARAMETER AND SCALE VALUES.
!
!     IWORK SUBSCRIPT VALUES
!
     data cnvcod /34/, covprt /14/, covreq /15/, dinit /38/, dtype&
    &   /16/, iscl /27/, mxfcal /17/, mxiter /18/,&
    &   niter /31/, outlev /19/, prunit /21/, solprt /22/, statpr&
     &   /23/, x0prt /24/
!
!     RWORK SUBSCRIPT VALUES
!
      data afctol /31/, lmax0 /35/, rfctol /32/, xctol /33/
!
!+++++++++++++++++++++++++++++++  BODY  ++++++++++++++++++++++++++++++++
!
!     PACK PARAMETERS INTO PARE
!
      call nlspk(par, ifixd, npar, pare, npar)
!
!     SET NL2SOL DEFAULT VALUES
!
      call dfault(iwork, rwork)
!
!     SET NON NL2 DEFAULT VALUES
!
      iwork(mxiter) = mit
      if (mit.le.0) iwork(mxiter) = 21
!
      iwork(mxfcal) = 2*iwork(mxiter)
!
!     SET STOPPING CRITERION
!
      rwork(afctol) = rmdcon(1,typ=0.0_wp)
     if ((stopss.ge.rmdcon(3,typ=0.0_wp)) .and. (stopss.le.0.1))&
     & rwork(rfctol) = stopss
!
     if ((stopp.ge.0.0e0) .and. (stopp.le.1.0e0))&
     &   rwork(xctol) = stopp
!
!     SET SCALE VALUES
!
      scl = 94 + 2*n + npare*(3*npare+31)/2
      iwork(iscl) = scl
      if (scale(1).gt.0.0e0) go to 40
!
      iwork(dtype) = 1
!
!     INITIALIZE SCALE VALUES FOR FIRST ITERATION
!
      sclj = scl - 1
      do 30 j=1,npar
         if (ifixd(j).ne.0) go to 30
         sclj = sclj + 1
         if (par(j).eq.0.0e0) rwork(sclj) = 1.0e0
         if (par(j).ne.0.0e0) rwork(sclj) = 1.0_wp/abs(par(j))
   30 continue
!
      go to 60
!
   40 iwork(dtype) = 0
      rwork(dinit) = -1.0e0
      sclj = scl - 1
      do 50 j=1,npar
         if (ifixd(j).ne.0) go to 50
         sclj = sclj + 1
         rwork(sclj) = 1.0_wp/max(abs(scale(j)),abs(par(j)))
   50 continue
!
   60 if (delta.le.0.0e0) rwork(lmax0) = 100.0e0
      if (delta.gt.0.0e0) rwork(lmax0) = delta
!
!     SET NL2 COVARIANCE COMPUTATION CONTROL PARAMETER
!
     if ((ivaprx.le.1) .or. (ivaprx.eq.4) .or. (ivaprx.ge.7))&
     &   iwork(covreq) = 3
      if ((ivaprx.eq.2) .or. (ivaprx.eq.5)) iwork(covreq) = 2
      if ((ivaprx.eq.3) .or. (ivaprx.eq.6)) iwork(covreq) = 1
     if ((ivaprx.ge.4) .and. (ivaprx.le.6))&
     &   iwork(covreq) = -iwork(covreq)
      if (aprxdv) iwork(covreq) = -iabs(iwork(covreq))
     if ((ivaprx.le.1) .or. (ivaprx.eq.4) .or. (ivaprx.ge.7))&
     &   ivcvpt = 1
      if ((ivaprx.eq.2) .or. (ivaprx.eq.5)) ivcvpt = 2
      if ((ivaprx.eq.3) .or. (ivaprx.eq.6)) ivcvpt = 3
!
!     INITIALIZE THE ITERATION COUNTER
!
      iwork(niter) = 0
!
!     SET NL2 PRINT CONTROL PARAMETERS
!
      iwork(cnvcod) = 0
      iwork(covprt) = 0
      iwork(outlev) = 0
      iwork(prunit) = 0
      iwork(solprt) = 0
      iwork(statpr) = 0
      iwork(x0prt) = 0
!
      return
!
      end
