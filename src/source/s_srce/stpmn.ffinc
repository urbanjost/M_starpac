!STPMN
      SUBROUTINE STPMN(J,XM,N,M,IXM,MDL,PAR,NPAR,
     &   NEXMPT,ETA,RELTOL,SCALE,STP,NFAIL,IFAIL,CD,
     &   ITEMP,FD,FDLAST,FDSAVE,PV,PVMCD,PVNEW,PVPCD,PVSTP,PVTEMP)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE MAIN SUBROUTINE FOR SELECTING THE STEP SIZE FOR
!     COMPUTING AGAINST NUMERICAL DERIVATIVES
!
!     WRITTEN BY  -  ROBERT B. SCHNABEL (CODED BY JANET R. DONALDSON)
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  APRIL 2, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) ::
     &   ETA,RELTOL,SCALE,STP
      INTEGER
     &   IXM,J,M,N,NEXMPT,NFAIL,NPAR
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     &   CD(N),FD(N),FDLAST(N),FDSAVE(N),PAR(NPAR),PV(N),PVMCD(N),
     &   PVNEW(N),PVPCD(N),PVSTP(N),PVTEMP(N),XM(IXM,M)
      INTEGER
     &   IFAIL(N),ITEMP(N)
!
!  SUBROUTINE ARGUMENTS
       EXTERNAL MDL
!
!  SCALARS IN COMMON
      REAL(KIND=WP) ::
     &   Q
!
!  LOCAL SCALARS
      REAL(KIND=WP) ::
     &   ABSTOL,CURVE,ETA3,FPLRS,PARMX,PVMEAN,PVTYP,STPCD,STPLOW,
     &   STPMID,STPUP,TAUABS,TEMP,THIRD
      INTEGER
     &   I
!
!  EXTERNAL FUNCTIONS
      REAL(KIND=WP) ::
     &   R1MACH
!       EXTERNAL R1MACH
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL CMPFD,GMEAN,RELCOM,STPADJ,STPSEL
!
!  INTRINSIC FUNCTIONS
      INTRINSIC ABS,MAX,SIGN,SQRT
!
!  COMMON BLOCKS
      COMMON /NOTOPT/Q
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL ABSTOL
!        THE ABSOLUTE AGREEMENT TOLERANCE.
!     REAL CD(N)
!        THE CENTRAL DIFFERENCE QUOTIENT APPROXIMATION TO THE
!        DERIVATIVE OF THE MODEL WITH RESPECT TO THE JTH PARAMETER.
!     REAL CURVE
!        A MEASURE OF THE CURVATURE OF THE MODEL.
!     REAL ETA
!        THE RELATIVE NOISE IN THE MODEL
!     REAL ETA3
!        THE CUBE ROOT OF ETA.
!     REAL FD(N)
!        THE FORWARD DIFFERENCE QUOTIENT APPROXIMATION TO THE
!        DERIVATIVE OF THE MODEL WITH RESPECT TO THE JTH PARAMETER
!     REAL FDLAST(N)
!        THE FORWARD DIFFERENCE QUOTIENT APPROXIMATION TO THE
!        DERIVATIVE OF THE MODEL WITH RESPECT TO THE JTH PARAMETER
!        COMPUTED WITH THE MOST RECENT STEP SIZE SELECTED.
!     REAL FDSAVE(N)
!        A VECTOR USED TO SAVE THE BEST OF THE
!        THE FORWARD DIFFERENCE QUOTIENT APPROXIMATIONS TO THE
!        DERIVATIVE OF THE MODEL WITH RESPECT TO THE JTH PARAMETER
!     REAL FPLRS
!        THE FLOATING POINT LARGEST RELATIVE SPACING.
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IFAIL(N)
!        THE VECTOR OF INDICATOR VARIABLES DESIGNATING WHETHER
!        THE STEP SIZE SELECTED WAS SATISFACTORY FOR A GIVEN
!        OBSERVATION AND PARAMETER.
!     INTEGER ITEMP(N)
!        A TEMPORARY STORAGE VECTOR.
!     INTEGER IXM
!        THE FIRST DIMENSION OF THE INDEPENDENT VARIABLE ARRAY.
!     INTEGER J
!        THE INDEX OF THE PARAMETER BEING EXAMINED.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     EXTERNAL MDL
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        PREDICTED VALUES BASED ON THE CURRENT PARAMETER ESTIMATES.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NPAR
!        THE NUMBER OF UNKNOWN PARAMETERS IN THE MODEL.
!     INTEGER NEXMPT
!        THE NUMBER OF OBSERVATIONS FOR WHICH A GIVEN STEP SIZE
!        DOES NOT HAVE TO BE SATISFACTORY AND THE SELECTED STEP
!        SIZE STILL BE CONSIDERED OK.
!     INTEGER NFAIL
!        THE VECTOR CONTAINING THE COUNTS FOR EACH PARAMETER
!        OF THE NUMBER OF OBSERVATIONS THE SELECTED STEP SIZE WAS
!        NOT SATISFACTORY.
!     REAL PAR(NPAR)
!        THE ARRAY IN WHICH THE CURRENT ESTIMATES OF THE UNKNOWN
!        PARAMETERS ARE STORED.
!     REAL PARMX
!        THE MAXIMUM OF THE CURRENT PARAMETER ESTIMATE AND THE
!        TYPICAL VALUE OF THAT PARAMETER
!     REAL PV(N)
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!     REAL PVMCD(N)
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!        FOR ALL BUT THE JTH PARAMETER VALUE, WHICH IS PAR(J)-STPCD.
!     REAL PVMEAN
!        THE MEAN OF A FUNCTION OF THE PREDICTED VALUES.
!     REAL PVNEW(N)
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!        FOR ALL BUT THE JTH PARAMETER VALUE, WHICH IS PAR(J)+STPNEW.
!     REAL PVPCD(N)
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!        FOR ALL BUT THE JTH PARAMETER VALUE, WHICH IS PAR(J)+STPCD.
!     REAL PVSTP(N)
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!        FOR ALL BUT THE JTH PARAMETER VALUE, WHICH IS PAR(J)+STP.
!     REAL PVTEMP(N)
!        A TEMPORARY STORAGE VECTOR FOR PREDICTED VALUES.
!     REAL PVTYP
!        THE TYPICAL SIZE OF THE PREDICTED VALUES OF THE MODEL.
!     REAL Q
!        A DUMMY VARIABLE WHICH IS USED, ALONG WITH COMMON NOTOPT (NO
!        OPTIMIZATION), TO COMPUTE THE STEP SIZE.
!     REAL SCALE
!        THE TYPICAL SIZE OF THE JTH PARAMETER.
!     REAL STP
!        THE STEP SIZE CURRENTLY BEING EXAMINED FOR THE FORWARD
!        DIFFERENCE APPROXIMATION TO THE DERIVATIVE.
!     REAL STPCD
!        THE STEP SIZE USED FOR THE CENTRAL DIFFERENCE QUOTIENT.
!     REAL STPLOW
!        THE LOWER LIMIT ON THE STEP SIZE.
!     REAL STPMID
!        THE MIDPOINT OF THE ACCEPTABLE RANGE OF THE STEP SIZE.
!     REAL STPUP
!        THE UPPER LIMIT ON THE STEP SIZE.
!     REAL RELTOL
!        THE RELATIVE AGREEMENT TOLERANCE.
!     REAL TAUABS
!        THE ABSOLUTE AGREEMENT TOLERANCE.
!     REAL TEMP
!        A TEMPORARY LOCATION IN WHICH THE CURRENT ESTIMATE OF THE JTH
!        PARAMETER IS STORED.
!     REAL THIRD
!        THE VALUE ONE THIRD.
!     REAL XM(IXM,M)
!        THE ARRAY IN WHICH ONE ROW OF THE INDEPENDENT VARIABLE ARRAY
!        IS STORED.
!
      FPLRS = R1MACH(4)
!
!     SET VARIOUS PARAMETERS NECESSARY FOR COMPUTING THE
!     OPTIMUM STEP SIZE
!
      THIRD = 1.0E0 / 3.0E0
!
      ETA3 = ETA ** THIRD
!
      PARMX = MAX(ABS(PAR(J)), ABS(SCALE))
      IF (PARMX .EQ. 0.0E0) PARMX = 1.0E0
!
      STPCD = ((3.0E0 ** THIRD) * ETA3 * PARMX * SIGN(1.0E0, PAR(J)))
!
      Q = STPCD + PAR(J)
      STPCD = Q - PAR(J)
!
      TEMP = PAR(J)
!
      PAR(J) = TEMP + STPCD
      CALL MDL(PAR, NPAR, XM, N, M, IXM, PVPCD)
!
      PAR(J) = TEMP - STPCD
      CALL MDL(PAR, NPAR, XM, N, M, IXM, PVMCD)
!
      PAR(J) = TEMP
!
!     ESTIMATE CURVATURE BY SECOND DERIVATIVE OF MODEL WITH RESPECT TO
!     PAR(J)
!
      DO 10 I = 1, N
         PVTEMP(I) = ABS((PVPCD(I)+PVMCD(I)) - 2*PV(I))
         IF (PVTEMP(I).EQ.0.0E0) THEN
            IF (PV(I).EQ.0.0E0) THEN
               PVTEMP(I) = FPLRS
            ELSE
               PVTEMP(I) = FPLRS*ABS(PV(I))
            END IF
         END IF
   10 CONTINUE
!
!     COMPUTE THE GEOMETRIC MEAN
!
      CALL GMEAN(PVTEMP, N, PVMEAN)
!
      CURVE = ABS(PVMEAN / STPCD / STPCD)
!
!     COMPUTE A TYPICAL VALUE OF THE MODEL
!
      DO 20 I = 1, N
         PVTEMP(I) = ABS(PVPCD(I) + PV(I) + PVMCD(I))
         IF (PVTEMP(I).EQ.0.0E0) THEN
            IF (PV(I).EQ.0.0E0) THEN
               PVTEMP(I) = FPLRS
            ELSE
               PVTEMP(I) = FPLRS*ABS(PV(I))
            END IF
         END IF
   20 CONTINUE
!
      CALL GMEAN(PVTEMP, N, PVMEAN)
!
      PVTYP = ABS(PVMEAN / 3.0E0)
!
!     SET VALUES REPRESENTATIVE OF THE RANGE THE STEP SIZE
!     CAN BE EXPECTED TO TAKE
!
      STPUP = (ETA3) * PARMX
      STPLOW = (ETA3) * STPUP
      STPMID = SQRT(STPLOW) * SQRT(STPUP)
!
!     SELECT AN OPTIMUM STARTING STEP SIZE
!
      IF (CURVE.EQ.0.0E0) THEN
         STP = PARMX * SIGN(1.0E0, PAR(J))
      ELSE
         STP = (2.0E0 * SQRT(ETA) * SQRT(PVTYP) / SQRT(CURVE)) *
     &         SIGN(1.0E0,PAR(J))
      END IF
!
      IF (ABS(STP).GT.PARMX) STP = PARMX * SIGN(1.0E0,PAR(J))
!
      Q = STP + PAR(J)
      STP = Q - PAR(J)
!
      IF (STP.EQ.0.0E0) THEN
         STP = FPLRS * PAR(J)
         IF (STP.EQ.0.0E0) STP = FPLRS
!
   30    CONTINUE
         Q = STP + PAR(J)
         STP = Q - PAR(J)
!
         IF (STP.EQ.0.0E0) THEN
            STP = 2.0E0 * STP
            GO TO 30
         END IF
      END IF
!
!     COMPUTE THE ABSOLUTE TOLERANCES
!
      ABSTOL = 10.0E0 * ETA * PVTYP
!
      TAUABS = 2.0E0 * SQRT(ETA) * SQRT(PVTYP)
      IF (CURVE .NE. 0.0E0) TAUABS = TAUABS * SQRT(CURVE)
!
      TEMP = PAR(J)
      PAR(J) = TEMP + STP
!
      CALL MDL(PAR, NPAR, XM, N, M, IXM, PVSTP)
!
      PAR(J) = TEMP
!
!     COMPUTE THE FORWARD AND CENTRAL DIFFERENCE QUOTIENT ESTIMATE
!     OF THE DERIVATIVE
!
      CALL CMPFD(N, STP, PVSTP, PV, FD)
!
      CALL CMPFD(N, 2.0E0*STPCD, PVPCD, PVMCD, CD)
!
!     COMPUTE THE NUMBER OF OBSERVATIONS FOR WHICH THE FD DOES NOT
!     AGREE WITH THE CD WITHIN THE TOLERANCE SPECIFIED.
!
      CALL RELCOM(N, FD, CD, RELTOL, ABSTOL, NFAIL, IFAIL)
!
!     IF THE FORWARD DIFFERENCE APPROXIMATION DOES NOT AGREE WITHIN
!     TOLERANCE FOR MORE THAN   NEXMPT   OBSERVATION, SELECT NEW
!     VALUE OF THE STEP SIZE, ELSE ADJUST THE STEP SIZE AND RETURN.
!
      IF (NFAIL.GT.NEXMPT) THEN
!
!        SELECT NEW VALUE OF THE STEP SIZE
!
            CALL STPSEL(XM, N, M, IXM, MDL, PAR, NPAR,
     &         NEXMPT, STP, NFAIL, IFAIL, J, ETA3, RELTOL, ABSTOL,
     &         TAUABS, STPLOW,
     &         STPMID, STPUP, ITEMP, FD, FDLAST, FDSAVE, PV, PVNEW)
      ELSE
!
!        ADJUST THE CURRENT STEP SIZE VALUE
!
            CALL STPADJ(XM, N, M, IXM, MDL, PAR, NPAR,
     &         NEXMPT, STP, NFAIL, IFAIL, J, RELTOL, ABSTOL, STPLOW,
     &         STPMID, STPUP, ITEMP, FD, FDLAST, PV, PVNEW)
!
      END IF
!
!     CONVERT SELECTED ABSOLUTE STEP SIZE TO RELATIVE STEP SIZE
!
      STP = ABS(STP) / PARMX
!
      RETURN
!
      END
