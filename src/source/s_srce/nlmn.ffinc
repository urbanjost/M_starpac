!NLMN
      SUBROUTINE NLMN(Y, WEIGHT, NNZW, WT, LWT, XM, N, M, IXM, MDL,
     +   NLDRV, APRXDV, DRV, IFIXD, PAR, PARE, NPAR, RES, PAGE, WIDE,
     +   HLFRPT, STP, LSTP, MIT, STOPSS, STOPP, SCALE, LSCALE, DELTA,
     +   IVAPRX, IPTOUT, NDIGIT, RSD, PV, SDPVI, SDRESI, VCVL, LVCVL, D,
     +   IWORK, IIWORK, RWORK, IRWORK, NLHDR, NPARE)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE CONTROLING SUBROUTINE FOR PERFORMING NONLINEAR
!     LEAST SQUARES REGRESSION USING THE NL2 SOFTWARE PACKAGE
!     (IMPLEMENTING THE METHOD OF DENNIS, GAY AND WELSCH).
!     THIS SUBROUTINE WAS ADAPTED FROM SUBROUTINE NL2SOL.
!
!     REFERENCES
!
!     DENNIS, J.E., GAY, D.M., AND WELSCH, R.E. (1979), AN ADAPTIVE
!             NONLINEAR LEAST-SQUARES ALGORITHM, (BEING REVISED).
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  APRIL 2, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP)
     +   DELTA,RSD,STOPP,STOPSS
      INTEGER
     +   IIWORK,IRWORK,IVAPRX,IXM,LSCALE,LSTP,LVCVL,LWT,M,MIT,N,
     +   NDIGIT,NNZW,NPAR,NPARE,SDPVI,SDRESI,VCVL
      LOGICAL
     +   APRXDV,HLFRPT,PAGE,WEIGHT,WIDE
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP)
     +   D(N,NPAR),PAR(NPAR),PARE(NPAR),PV(N),RES(N),RWORK(IRWORK),
     +   SCALE(LSCALE),STP(LSTP),WT(LWT),XM(IXM,M),Y(N)
      INTEGER
     +   IFIXD(NPAR),IPTOUT(NDIGIT),IWORK(IIWORK)
!
!  SUBROUTINE ARGUMENTS
      EXTERNAL DRV,MDL,NLDRV,NLHDR
!
!  SCALARS IN COMMON
      INTEGER
     +   IERR
!
!  LOCAL SCALARS
      REAL(KIND=WP)
     +   WTSQRT
      INTEGER
     +   CNVCOD,COVMAT,I,ICNVCD,IVCVPT,QTR,RD,RDI,RSAVE,RSSHLF,S,
     +   SCL
      LOGICAL
     +   CMPDRV,DONE,HEAD,NEWITR,PRTSMY
!
!  LOCAL ARRAYS
      INTEGER
     +   ISKULL(10)
!
!  EXTERNAL SUBROUTINES
      EXTERNAL NL2ITR,NLERR,NLFIN,NLINIT,NLISM,NLITRP,NLSUPK
!
!  INTRINSIC FUNCTIONS
      INTRINSIC SQRT
!
!  COMMON BLOCKS
      COMMON /ERRCHK/IERR
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     LOGICAL APRXDV
!        THE VARIABLE USED TO INDICATE WHETHER NUMERICAL
!        APPROXIMATIONS TO THE DERIVATIVE WERE USED (TRUE) OR NOT
!        (FALSE).
!     LOGICAL CMPDRV
!        THE VARIABLE USED TO INDICATE WHETHER DERIVATIVES MUST BE
!        COMPUTED (TRUE) OR NOT (FALSE).
!     INTEGER CNVCOD
!        A VALUE USED TO CONTROL THE PRINTING OF ITERATION REPORTS.
!     INTEGER COVMAT
!        THE LOCATION IN IWORK OF THE STARTING LOCATION IN RWORK
!        OF THE BEGINNING OF THE VCV MATRIX.
!     REAL D(N,NPAR)
!        THE FORWARD DIFFERENCE QUOTIENT APPROXIMATION TO THE
!        DERIVATIVE OF THE MODEL WITH RESPECT TO THE JTH PARAMETER.
!     REAL DELTA
!        THE MAXIMUM CHANGE ALLOWED IN THE MODEL PARAMETERS AT THE
!        FIRST ITERATION.
!     EXTERNAL DRV
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        DERIVATIVE (JACOBIAN) MATRIX OF THE MODEL.
!     LOGICAL DONE
!        THE VARIABLE USED TO INDICATE WHETHER THIS IS THE FINAL
!        COMPUTATION OF THE JACOBIAN OR NOT.
!     LOGICAL HEAD
!        THE VARIABLE USED TO INDICATE WHETHER A HEADING IS TO BE
!        PRINTED DURING A GIVEN CALL TO THE ITERATION REPORT (TRUE)
!        OR NOT (FALSE).
!     LOGICAL HLFRPT
!        THE VARIABLE WHICH INDICATES WHETHER THE DERIVATIVE
!        CHECKING ROUTINE HAS ALREADY PRINTED PART OF THE
!        INITIAL SUMMARY (TRUE) OR NOT (FALSE).
!     INTEGER I
!        AN INDEXING VARIABLE.
!     INTEGER ICNVCD
!        THE LOCATION IN IWORK OF
!        THE CONVERGENCE CONDITION.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .GE. 1, ERRORS WERE DETECTED.
!     INTEGER IFIXD(NPAR)
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.
!        IF IFIXED(I).NE.0, THEN PAR(I) WILL BE HELD FIXED.
!        IF IFIXED(I).EQ.0, THEN PAR(I) WILL BE OPTIMIZED.
!     INTEGER IIWORK
!        THE DIMENSION OF THE INTEGER WORK VECTOR IWORK.
!     INTEGER IPTOUT(NDIGIT)
!        THE VARIABLE USED TO CONTROL PRINTED OUTPUT FOR EACH SECTION.
!     INTEGER IRWORK
!        THE DIMENSION OF THE REAL WORK VECTOR RWORK.
!     INTEGER ISKULL(10)
!        AN ERROR MESSAGE INDICATOR VARIABLE.
!     INTEGER IVAPRX
!        AN INDICATOR VALUE USED TO DESIGNATE WHICH OPTION IS TO BE USED
!        TO COMPUTE THE VARIANCE COVARIANCE MATRIX (VCV), WHERE
!        IVAPRX LE 0 INDICATES THE THE DEFAULT OPTION WILL BE USED
!        IVAPRX EQ 1 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 2 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 3 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                          *INVERSE(HESSIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 4 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVAPRX EQ 5 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVAPRX EQ 6 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                          *INVERSE(HESSIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVAPRX GE 7 INDICATES THE DEFAULT OPTION WILL BE USED
!     INTEGER IVCVPT
!        AN INDICATOR VALUE USED TO DESIGNATE WHICH FORM OF THE
!        VARIANCE COVARIANCE MATRIX (VCV) IS BEING PRINTED, WHERE
!        IVCVPT = 1 INDICATES THE VCV WAS COMPUTED AS
!                   INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!        IVCVPT = 2 INDICATES THE VCV WAS COMPUTED AS
!                   INVERSE(HESSIAN)
!        IVCVPT = 3 INDICATES THE VCV WAS COMPUTED AS
!                   INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                       *INVERSE(HESSIAN)
!     INTEGER IWORK(IIWORK)
!        THE INTEGER WORK SPACE VECTOR USED BY THE NL2 SUBROUTINES.
!     INTEGER IXM
!        THE FIRST DIMENSION OF THE INDEPENDENT VARIABLE ARRAY.
!     INTEGER LSCALE
!        THE ACTUAL LENGTH OF THE VECTOR SCALE.
!     INTEGER LSTP
!        THE ACTUAL LENGTH OF THE VECTOR STP.
!     INTEGER LVCVL
!        THE LENGTH OF THE VECTOR CONTAINING
!        THE LOWER HALF OF THE VCV MATRIX, STORED ROW WISE.
!     INTEGER LWT
!        THE ACTUAL LENGTH OF THE VECTOR WT.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     INTEGER MIT
!        THE MAXIMUM NUMBER OF ITERATIONS ALLOWED.
!     EXTERNAL MDL
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        PREDICTED VALUES BASED ON THE CURRENT PARAMETER ESTIMATES.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NDIGIT
!        THE NUMBER OF DIGITS IN THE PRINT CONTROL VALUE.
!     LOGICAL NEWITR
!        A FLAG USED TO INDICATE WHETHER A NEW ITERATION HAS BEEN
!        COMPLETED (TRUE) OR NOT (FALSE).
!     EXTERNAL NLDRV
!        THE NAME OF THE ROUTINE WHICH CALCULATED THE DERIVATIVES
!     EXTERNAL NLHDR
!        THE NAME OF THE ROUTINE WHICH PRODUCES THE HEADING.
!     INTEGER NNZW
!        THE NUMBER OF NON ZERO WEIGHTS.
!     INTEGER NPAR
!        THE NUMBER OF PARAMETERS IN THE MODEL.
!     INTEGER NPARE
!        THE NUMBER OF PARAMETERS TO BE OPTIMIZED.
!     LOGICAL PAGE
!        THE VARIABLE USED TO INDICATE WHETHER A GIVEN SECTION OF
!        THE OUTPUT IS TO BEGIN ON A NEW PAGE (TRUE) OR NOT (FALSE).
!     REAL PAR(NPAR)
!        THE CURRENT ESTIMATES OF THE PARAMETERS.
!     REAL PARE(NPAR)
!        THE CURRENT ESTIMATES OF THE PARAMETERS, BUT ONLY
!        THOSE TO BE OPTIMIZED (NOT THOSE WHOSE VALUES ARE FIXED).
!     LOGICAL PRTSMY
!        THE VARIABLE USED TO INDICATE WHETHER THE SUMMARY
!        INFORMATION IS TO BE PRINTED (TRUE) OR NOT (FALSE).
!     REAL PV(N)
!        THE PREDICTED VALUES.
!     INTEGER QTR
!        THE LOCATION IN IWORK OF THE STARTING LOCATION IN RWORK
!        THE ARRAY Q TRANSPOSE R.
!     INTEGER RD
!        THE LOCATION IN IWORK OF THE STARTING LOCATION IN RWORK OF
!        THE DIAGONAL ELEMENTS OF THE R MATRIX OF THE Q - R
!        FACTORIZATION OF D.
!     INTEGER RDI
!        THE LOCATION IN RWORK OF THE DIAGONAL ELEMENTS OF THE R
!        MATRIX OF THE Q - R FACTORIZATION OF D.
!     REAL RES(N)
!        THE RESIDUALS FROM THE FIT.
!     INTEGER RSAVE
!        THE LOCATION IN IWORK OF THE STARTING LOCATION IN RWORK
!        THE ARRAY RSAVE.
!     REAL RSD
!        THE VALUE OF THE RESIDUAL STANDARD DEVIATION AT THE SOLUTION.
!     INTEGER RSSHLF
!        THE LOCATION IN RWORK OF
!        HALF THE RESIDUAL SUM OF SQUARES.
!     REAL RWORK(IRWORK)
!        THE REAL WORK VECTOR USED BY THE NL2 SUBROUTINES.
!     INTEGER S
!        THE LOCATION IN IWORK OF THE STARTING LOCATION IN RWORK
!        THE ARRAY OF SECOND ORDER TERMS OF THE HESSIAN.
!     REAL SCALE(LSCALE)
!        THE TYPICAL SIZE OF THE PARAMETERS.
!     INTEGER SCL
!        THE INDEX IN RWORK OF THE 1ST VALUE OF THE USER SUPPLIED SCALE
!        VALUE.
!     INTEGER SDPVI
!        THE STARTING LOCATION IN RWORK OF
!        THE STANDARD DEVIATIONS OF THE PREDICTED VALUES.
!     INTEGER SDRESI
!        THE STARTING LOCATION IN RWORK OF THE
!        THE STANDARDIZED RESIDUALS.
!     REAL STOPP
!        THE STOPPING CRITERION FOR THE TEST BASED ON THE MAXIMUM SCALED
!        RELATIVE CHANGE IN THE ELEMENTS OF THE MODEL PARAMETER VECTOR
!        PREDICTED DECREASE IN THE RESIDUAL STANDARD DEVIATION (COMPUTED
!        BY STARPAC) TO THE CURRENT RESIDUAL SUM OF SQUARES ESTIMATE.
!     REAL STOPSS
!        THE STOPPING CRITERION FORTHE TEST BASED ON THE RATIO OF THE
!        PREDICTED DECREASE IN THE RESIDUAL SUM OF SQUARES (COMPUTED
!        BY STARPAC) TO THE CURRENT RESIDUAL SUM OF SQUARES ESTIMATE.
!     REAL STP(LSTP)
!        THE DUMMY STEP SIZE ARRAY.
!     INTEGER VCVL
!        THE STARTING LOCATION IN RWORK OF THE LOWER HALF OF THE
!        VCV MATRIX, STORED ROW WISE.
!     LOGICAL WEIGHT
!        THE VARIABLE USED TO INDICATE WHETHER WEIGHTED ANALYSIS IS TO
!        BE PERFORMED (TRUE) OR NOT (FALSE).
!     LOGICAL WIDE
!        THE VARIABLE USED TO INDICATE WHETHER THE HEADING SHOULD
!        BE FULL WIDTH (TRUE) OR NOT (FALSE).
!     REAL WT(LWT)
!        THE USER SUPPLIED WEIGHTS.
!     REAL WTSQRT
!        THE SQUARE ROOT OF THE USER SUPPLIED WEIGHTS.
!     REAL XM(IXM,M)
!        THE ARRAY IN WHICH ONE ROW OF THE INDEPENDENT VARIABLE ARRAY
!        IS STORED.
!     REAL Y(N)
!        THE ARRAY OF THE DEPENDENT VARIABLE.
!
!     IWORK SUBSCRIPT VALUES
!
      DATA CNVCOD /34/, ICNVCD /1/, COVMAT /26/, QTR /49/, RD /51/,
     +   RSAVE /52/, S/53/
      DATA RSSHLF /10/
!
!+++++++++++++++++++++++++++++++  BODY  ++++++++++++++++++++++++++++++++
!
!     INITIALIZE CONTROL PARAMETERS
!
      CALL NLINIT (N, IFIXD, PAR, NPAR, PARE, NPARE, MIT, STOPSS,
     +   STOPP, SCALE, LSCALE, DELTA, IVAPRX, APRXDV, IVCVPT, IWORK,
     +   IIWORK, RWORK, IRWORK, SCL)
!
      CMPDRV = .TRUE.
      DONE = .FALSE.
      HEAD = .TRUE.
      NEWITR = .FALSE.
      PRTSMY = (IPTOUT(1).NE.0)
!
!
!     COMPUTE RESIDUALS
!
   10 CALL MDL(PAR, NPAR, XM, N, M, IXM, PV)
!
      DO 20 I=1,N
         WTSQRT = 1.0E0
         IF (WEIGHT) WTSQRT = SQRT(WT(I))
         RES(I) = WTSQRT*(Y(I)-PV(I))
   20 CONTINUE
!
!     PRINT INITIAL SUMMARY
!
      IF (.NOT.PRTSMY) GO TO 30
      CALL NLISM(NLHDR, PAGE, WIDE, HLFRPT, NPAR, M, N, NNZW, WEIGHT,
     +   IFIXD, PAR, SCALE, IWORK, IIWORK, RWORK, IRWORK, RES, APRXDV,
     +   STP, LSTP, NPARE)
      PRTSMY = .FALSE.
!
   30 CONTINUE
!
      IF (.NOT.CMPDRV) GO TO 50
!
      CMPDRV = .FALSE.
!
   40 CONTINUE
!
!     PRINT ITERATION REPORT IF DESIRED
!
      IF ((IPTOUT(2).NE.0) .AND. NEWITR) CALL NLITRP(NLHDR, HEAD, PAGE,
     +   WIDE, IPTOUT(2), NPAR, NNZW, IWORK, IIWORK, RWORK, IRWORK,
     +   IFIXD, PARE, NPARE)
!
!  ***  COMPUTE JACOBIAN  ***
!
      IF (DONE) CALL MDL(PAR, NPAR, XM, N, M, IXM, PV)
!
      CALL NLDRV (MDL, DRV, DONE, IFIXD, PAR, NPAR, XM, N, M, IXM,
     +   PV, D, WEIGHT, WT, LWT, STP, LSTP, RWORK(SCL), NPARE)
!
      IF (DONE) GO TO 70
!
!     COMPUTE NEXT ITERATION
!
   50 CALL NL2ITR(RWORK(SCL), IWORK, D, N, N, NPARE, RES, RWORK, PARE)
!
!     UNPACK PARAMETERS
!
      CALL NLSUPK(PARE, NPARE, PAR, IFIXD, NPAR)
!
      NEWITR = (IWORK(CNVCOD).EQ.0)
      IF (IWORK(1)-2) 10, 40, 60
!
   60 DONE = .TRUE.
      GO TO 40
   70 CONTINUE
!
!     SET ERROR FLAGS, IF NECESSARY
!
      CALL NLERR(IWORK(ICNVCD), ISKULL)
!
!     FINISH COMPUTATIONS AND PRINT ANY DESIRED RESULTS
!
!     EQUIVALENCE LOCATIONS WITHIN RWORK.
!
      SDPVI = IWORK(RSAVE)
      SDRESI = IWORK(QTR)
      VCVL = IWORK(COVMAT)
      IF (VCVL.GE.1) GO TO 80
!
      VCVL = IWORK(S)
      IF (IERR.NE.0) GO TO 80
      ISKULL(1) = 1
      ISKULL(7) = 1
      IERR = 7
!
   80 CONTINUE
!
      LVCVL = NPARE*(NPARE+1)/2
!
      RDI = IWORK(RD)
!
      CALL NLFIN(Y, WEIGHT, NNZW, WT, LWT, XM, N, M, IXM, IFIXD, PAR,
     +   NPAR, NPARE, RES, PAGE, WIDE, IPTOUT, NDIGIT, RWORK(RSSHLF),
     +   RSD, PV, RWORK(SDPVI), RWORK(SDRESI), RWORK(RDI), RWORK(VCVL),
     +   LVCVL, D, NLHDR, IVCVPT, ISKULL)
!
      RETURN
!
      END
