!UFSDRV
     subroutine ufsdrv(y, ly, ymiss, acov, nlppa, spcf, ispcf, nf,&
    &   fmin, fmax, freq, n, nw, lagmax, lags, work, lacov, lwork,&
    &   delta, isort, isym, xaxis, yaxis, lpcv, alpha, nprt, window,&
     &   nmsub, ldsmin, ldstak, option, lnlppa, nfft)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE CONTROLING ROUTINE FOR TIME SERIES FOURIER
!     SPECTRUM ANALYSIS .
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 7, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   alpha,delta,fmax,fmin,ymiss
     integer&
    &   ispcf,lacov,lagmax,ldsmin,ldstak,lnlppa,lpcv,lwork,ly,n,&
     &   nf,nfft,nprt,nw
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   acov(*),freq(*),spcf(*),work(*),xaxis(*),y(*),yaxis(*)
     integer&
     &   isort(*),isym(*),lags(*),nlppa(*)
     logical&
     &   option(4)
     character&
     &   nmsub(6)*1
!
!  SUBROUTINE ARGUMENTS
       external window
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     real(kind=wp) ::&
    &   alow,aup,bw,df,fmn,fmx,spcfmn,spcfmx,xpltmn,xpltmx,ymean,&
     &   ypltmn,ypltmx
     integer&
     &   i,ilog,ispcer,lag,laglst,nfused,npts,nspc,nwused
     logical&
     &   newpg,univar
!
!  EXTERNAL FUNCTIONS
     integer&
     &   lstlag
!       EXTERNAL LSTLAG
!
!  EXTERNAL SUBROUTINES
       external acvf,acvff,acvfm,setfrq,spcck,ufser,ufslag,ufsmn,ufsout,&
     &   ufspcv
!
!  INTRINSIC FUNCTIONS
      intrinsic max,min,nint
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: ACOV(LACOV)
!        THE AUTOCOVARIANCE.
!     REAL(KIND=WP) :: ALOW
!        A FACTOR USED TO COMPUTE THE LOWER CONFIDENCE LIMITS.
!     REAL(KIND=WP) :: ALPHA
!        THE DESIRED CONFIDENCE LEVEL.
!     REAL(KIND=WP) :: AUP
!        A FACTOR USED TO COMPUTE THE UPPER CONFIDENCE LIMITS.
!     REAL(KIND=WP) :: BW
!        THE BANDWIDTH.
!     REAL(KIND=WP) :: DELTA
!        THE SAMPLING INTERVAL.
!     REAL(KIND=WP) :: DF
!        THE EFFECTIVE DEGREES OF FREEDOM.
!     REAL(KIND=WP) :: FMAX, FMIN
!        THE MAXIMUM AND MINIMUM FREQUENCES AT WHICH THE
!        SPECTRUM IS TO BE COMPUTED.
!     REAL(KIND=WP) :: FMN, FMX
!        THE MAXIMUM AND MINIMUM FREQUENCES ACTUALLY USED.
!     REAL(KIND=WP) :: FREQ(NF)
!        THE VECTOR OF FREQUENCIES AT WHICH THE SPECTRUM IS TO BE
!        COMPUTED.
!     INTEGER I
!        AN INDEX VARIABLE
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER ILOG
!        A CODE USED TO SPECIFY THE TYPE OF PLOT, WHERE IF
!        ILOG = 0 THE PLOT IS LINEAR/LINEAR, IF
!        ILOG = 1 THE PLOT IS LOG/LINEAR, IF
!        ILOG = 2 THE PLOT IS LINEAR/LOG, AND IF
!        ILOG = 3 THE PLOT IS LOG/LOG.
!     INTEGER ISORT(NF)
!        THE VECTOR USED FOR SORTING.
!     INTEGER ISPCER
!        AN ERROR FLAG USED FOR THE SPECTRUM PLOTS.
!     INTEGER ISPCF
!         THE ACTUAL FIRST DIMENSION OF THE SPECTRUM ARRAYS.
!     INTEGER ISYM(LPCV)
!        THE ARRAY CONTAINING THE CODE FOR THE PLOT SYMBOLS.
!     INTEGER LACOV
!        THE LENGTH OF THE VECTOR ACOV.
!     INTEGER LAG
!        THE LAG WINDWO TRUNCATION POINT USED FOR A SPECIFIC WINDOW.
!     INTEGER LAGLST
!        THE LAST LAG BEFORE MISSING DATA CAUSED AN ACVF
!        TO BE UNABLE TO BE COMPUTED.
!     INTEGER LAGMAX
!        THE MAXIMUM LAG VALUE TO BE USED.
!     INTEGER LAGS(NW)
!        THE ARRAY USED TO STORE THE LAG WINDOW TRUCCATION
!        POINTS USED FOR EACH SET OF SPECTRUM VALUES.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE VECTOR DSTAK IN COMMON CSTAK.
!     INTEGER LNLPPA
!        THE LENGTH OF THE VECTOR NLPPA.
!     INTEGER LPCV
!        THE LENGTH OF THE VECTORS USED FOR PLOTTING.
!     INTEGER LWORK
!        THE LENGTH OF THE VECTOR W.
!     INTEGER LY
!        THE LENGTH OF THE VECTOR Y.
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS IN EACH SERIES
!     LOGICAL NEWPG
!        THE LOGICAL VARIABLE USED TO DETERMINE IF OUTPUT
!        WILL BEGIN ON A NEW PAGE (TRUE) OR NOT (FALSE).
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES AT WHICH THE SPECTRUM IS
!        TO BE COMPUTED.
!     INTEGER NFFT
!        THE NUMBER OF OBSERVATIONS IN THE EXTENDED SERIES.
!     INTEGER NFUSED
!        THE NUMBER OF FREQUENCIES ACTUALLY USED.
!     INTEGER NLPPA(LNLPPA)
!        THE ARRAY CONTAINING THE NUMBER OF LAG PRODUCT PAIRS.
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THIS SUBROUTINE.
!     INTEGER NPRT
!        A CODE USED TO SPECIFY THE TYPE OF PLOT, WHERE IF
!        NPRT < 0 THE PLOT IS DECIBLES/LINEAR
!        NPRT = 0 THE PLOT IS SUPPRESSED
!        NPRT > 0 THE PLOT IS LOG/LINEAR
!     INTEGER NPTS
!        THE NUMBER OF X, Y CO-ORDINATES TO BE PLOTTED.
!     INTEGER NSPC
!        THE NUMBER OF VALID (POSITIVE) SPECTRUM VALUES.
!     INTEGER NW
!        THE VARIABLE USED TO DETERMINE THE NUMBER OF DIFFERENT
!        BANDWIDTHS TO BE USED.
!     INTEGER NWUSED
!        THE NUMBER OF DIFFERENT BANDWIDTHS ACTUALLY USED.
!     LOGICAL OPTION(4)
!        AN INDICATOR ARRAY USED TO DESIGNATE WHETHER ANY OF THE
!        FOUR POSSIBLE OPTIONS (F, M, V, OR S) HAVE BEEN USED (TRUE)
!        OR NOT (FALSE).
!     REAL(KIND=WP) :: SPCF(ISPCF,NW)
!        THE ARRAYS IN WHICH THE SPECTRUM IS STORED.
!     REAL(KIND=WP) :: SPCFMN, SPCFMX
!        THE MINIMUM AND MAXIMUM SPECTRUM VALUE TO BE PLOTTED.
!     LOGICAL UNIVAR
!        THE LOGICAL VARIABLE USED TO DETERMINE IF THE OUTPUT
!        IS FOR UNIVARIATE (TRUE) OR BIVARIATE (FALSE) SPECTRA.
!     EXTERNAL WINDOW
!        THE SUBROUTINE USED TO COMPUTE THE WINDOW.
!     REAL(KIND=WP) :: WORK(LWORK)
!        THE VECTOR OF LAG WINDOWS.
!     REAL(KIND=WP) :: XAXIS(LPCV)
!        THE X AXIS VALUES FOR THE SPECTRUM PLOT.
!     REAL(KIND=WP) :: XPLTMN, XPLTMX
!        THE MINIMUM AND MAXIMUM VALUES TO BE PLOTTED FOR THE X AXIS.
!     REAL(KIND=WP) :: Y(LY)
!        THE ARRAY CONTAINING THE OBSERVED TIME SERIES.
!     REAL(KIND=WP) :: YAXIS(LPCV)
!        THE Y AXIS VALUES FOR THE SPECTRUM PLOTS.
!     REAL(KIND=WP) :: YMEAN
!        THE MEAN OF THE OBSERVED TIME SERIES
!     REAL(KIND=WP) :: YMISS
!        THE USER SUPPLIED CODE WHICH IS USED TO DETERMINE WHETHER OR
!        NOT AN OBSERVATION IN THE SERIES IS MISSING.  IF Y(I) = YMISS,
!        THE VALUE IS ASSUMED MISSING, OTHERWISE IT IS NOT.
!     REAL(KIND=WP) :: YPLTMN, YPLTMX
!        THE MINIMUM AND MAXIMUM VALUES TO BE PLOTTED FOR THE Y AXIS.
!
      nfused = nf
      if (option(4)) then
        fmn = max(fmin, 0.0e0)
        fmx = min(fmax, 0.5e0)
        if (fmn.ge.fmx) then
          fmn = 0.0e0
          fmx = 0.5e0
        end if
      else
!
!       SET VARIOUS VALUES FOR SHORT FORMS OF CALL STATEMENT
!
        nprt = -1
        fmn = 0.0e0
        fmx = 0.5e0
      end if
!
!     CHECK FOR ERRORS
!
     call ufser(nmsub, n, lagmax, lacov, nfused, ispcf, nw, lags,&
     &  ldstak, ldsmin, ly, nfft, option)
!
      if (ierr.eq.1) return
!
!     SET VARIOUS PROGRAM PARAMETERS.
!
      alpha = 0.95e0
      delta = 1.0e0
!
!     COMPUTE COVARIANCES
!
      laglst = lagmax
      if (option(1)) then
       call acvff(y, n, nfft, ymean, acov, lagmax, lacov,&
     &   ly, work, nfft)
      else
        if (.not.option(3)) then
          if (option(2)) then
           call acvfm(y, ymiss, n, ymean, acov, lagmax, laglst,&
     &        nlppa, lacov)
          else
            call acvf(y, n, ymean, acov, lagmax, lacov)
          end if
        end if
      end if
      if (option(2) .and. option(3)) laglst = lstlag(nlppa,lagmax,lacov)
!
      if (laglst.ge.1) go to 20
!
!     AN ERROR HAS BEEN DETECTED
!
      ierr = 2
      return
!
   20 continue
!
!     COMPUTE THE VECTOR OF LAG WINDOW TRUNCATION POINTS, ORDERED
!     SMALLEST TO LARGEST.
!
      nwused = nw
     if (.not.option(4)) call ufslag(acov, laglst, lags, n, nw,&
     &   nwused, lacov)
!
!     BEGIN COMPUTING FOURIER SPECTRUM FOR SERIES
!
      univar = .true.
!
      if (nprt.ge.1) then
        ilog = 1
      else
        ilog = 0
      end if
!
      xpltmn = fmn
      xpltmx = fmx
!
!     SET FREQUENCIES FOR THE SPECTRUM.
!
      call setfrq(freq, nfused, 2, fmn, fmx, delta)
!
!     COMPUTE AND PLOT SPECTRUM VALUES.
!
      newpg = .false.
!
      do 50 i=1,nwused
         lag = lags(i)
         ispcer = 0
         if (lag.le.laglst) go to 30
         ispcer = 2
         df = 0.0e0
         go to 40
!
  30    call ufsmn(acov, nlppa, lag, df, nfused, freq, alpha, bw,&
    &              spcf(1+(i-1)*ispcf), alow, aup, lacov, ispcf,&
     &              window, work, lag, n, delta, option(2), lnlppa)
!
         if (nprt.eq.0) go to 50
!
         ispcer = 0
        call spcck(spcf(1+(i-1)*ispcf), isort, nfused,&
     &              spcfmn, spcfmx, nspc, ispcer)
!
         if (ispcer.ne.0) go to 40
!
        call ufspcv(spcf(1+(i-1)*ispcf), spcfmn, spcfmx,&
    &               freq, nfused, xaxis, yaxis, isym, npts, ispcf,&
    &               nfused+5, nspc, bw, alow, aup,&
     &               xpltmn, xpltmx, ypltmn, ypltmx, nprt)
!
  40    call ufsout(xaxis, yaxis, isym, npts, bw, nint(df), lag,&
    &      laglst, newpg, ispcer, nfused+5, xpltmn, xpltmx, ypltmn,&
     &      ypltmx, ilog, yaxis, xaxis, npts, univar, nmsub)
!
         newpg = .true.
!
   50 continue
!
      return
!
      end
