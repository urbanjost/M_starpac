!MDFLT
      subroutine mdflt (per, nf, nk, kmd, perf, ldstak)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE USER CALLABLE ROUTINE FOR APPLYING MODIFIED
!     DANIEL FILTERS TO A SYMMETRIC SERIES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 7, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   ldstak,nf,nk
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   per(*),perf(*)
     integer&
     &   kmd(*)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      double precision dstak(12)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   sym
     integer&
     &   i,iprt,l,ldsmin,nall0,work
     logical&
     &   err01,err02,err03,head
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   rstak(12)
     character&
     &   lkmd(8)*1,llds(8)*1,lnf(8)*1,lnk(8)*1,nmsub(6)*1
!
!  EXTERNAL FUNCTIONS
!      INTEGER
!     +   STKST
!      EXTERNAL STKST
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL EISGE,EIVEO,FLTMD,IPRINT,LDSCMP,STKCLR,STKSET
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!  EQUIVALENCES
      equivalence (dstak(1),rstak(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     LOGICAL ERR01, ERR02, ERR03
!        VALUE(S) INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     LOGICAL HEAD
!        A VARIABLE USED TO INDICATE WHETHER A HEADING IS NEEDED FOR
!        ERROR MESSAGES (TRUE) OR NOT (FALSE).
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED.
!     INTEGER IPRT
!        THE LOGICAL UNIT NUMBER USED FOR OUTPUT.
!     INTEGER KMD(NK)
!        THE ARRAY OF FILTER LENGTHS.
!     CHARACTER*1 LKMD(8), LLDS(8), LNK(8), LNF(8)
!        THE ARRAY(S) CONTAINING THE NAME(S) OF THE PARAMETER(S) CHECKED
!        FOR ERRORS.
!     INTEGER NALL0
!        THE NUMBER OF OUTSTANDING STACK ALLOCATIONS
!     INTEGER NF
!        THE NUMBER OF POINTS IN THE SERIES TO BE FILTERED.
!     INTEGER NK
!        THE NUMBER OF FILTERS TO BE APPLIED.
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THIS SUBROUTINE.
!     REAL(KIND=WP) :: PER(NF)
!        THE INPUT SERIES TO BE FILTERED.
!     REAL(KIND=WP) :: PERF(NF)
!        THE FILTERED SERIES.
!     REAL(KIND=WP) :: RSTAK(12)
!        THE REAL VERSION OF THE /CSTAK/ WORK AREA.
!     REAL(KIND=WP) :: SYM
!        AN INDICATOR VARIABLE USED TO DESIGNATE WHETHER THE SERIES
!        IS SYMMETRIC (SYM = 1.0E0) OR NOT (SYM = -1.0E0).
!     INTEGER WORK
!        THE STARTING LOCATION IN THE WORK AREA FOR THE WORK VECTOR.
!
!     SET UP NAME ARRAYS
!
     data&
    &  nmsub(1),  nmsub(2),  nmsub(3),  nmsub(4),  nmsub(5),  nmsub(6)&
     & /     'M',       'D',       'F',       'L',       'T',       ' '/
     data&
    & lkmd(1), lkmd(2), lkmd(3), lkmd(4), lkmd(5),&
     &  lkmd(6), lkmd(7), lkmd(8) /'K','M','D',' ',' ',' ',' ',' '/
     data&
    & llds(1), llds(2), llds(3), llds(4), llds(5),&
     &  llds(6), llds(7), llds(8) /'L','D','S','T','A','K',' ',' '/
     data&
    & lnf(1), lnf(2), lnf(3), lnf(4), lnf(5),&
     &  lnf(6), lnf(7), lnf(8) /'N','F',' ',' ',' ',' ',' ',' '/
     data&
    & lnk(1), lnk(2), lnk(3), lnk(4), lnk(5),&
     &  lnk(6), lnk(7), lnk(8) /'N','K',' ',' ',' ',' ',' ',' '/
!
!     SET UP FOR ERROR CHECKING
!
      ierr = 0
      head = .true.
!
!     CALL ERROR CHECKING ROUTINES
!
      call eisge(nmsub, lnf, nf, 17, 1, head, err01, lnf)
!
      call eisge(nmsub, lnk, nk, 1, 1, head, err02, lnk)
!
      if (.not.err02) call eiveo(nmsub, lkmd, kmd, nk, .true., head)
!
      if (err01) go to 10
!
      call ldscmp(1, 0, 0, 0, 0, 0, 'S', nf, ldsmin)
!
      call eisge(nmsub, llds, ldstak, ldsmin, 9, head, err03, llds)
!
      if ((.not.err02) .and. (.not.err03)) go to 20
!
   10 continue
      ierr = 1
      call iprint (iprt)
      write (iprt, 1000)
      return
!
   20 continue
!
!     SET THE SIZE OF THE WORK AREA
!
      call stkset(ldstak, 4)
      nall0 = stkst(1)
!
!     SUBDIVIDE THE WORK AREA
!
      work = stkget(nf, 3)
!
!     DESIGNATE THE SERIES IS SYMMETRIC
!
      sym = 1.0e0
!
      do 30 i = 1, nf
         perf(i) = per(i)
   30 continue
!
      do 40 l = 1, nk
         call fltmd(perf, rstak(work), nf, kmd(l), sym)
   40 continue
!
      call stkclr(nall0)
!
      return
!
!     FORMAT STATEMENTS
!
1000 format (/42h the correct form of the call statement is//&
     &  '       CALL MDFLT (PER, NF, NK, KMD, PERF, LDSTAK)')
      end
