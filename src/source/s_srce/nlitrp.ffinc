!NLITRP
     subroutine nlitrp(nlhdr, head, page, wide, iptout, npar, nnzw,&
     &   iwork, iiwork, rwork, irwork, ifixd, pare, npare)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE PRINTS THE ITERATION REPORTS FOR THE
!     NONLINEAR LEAST SQUARES REGRESSION SUBROUTINES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  APRIL 2, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      integer iiwork,iptout,irwork,nnzw,npar,npare
      logical head,page,wide
!
!  ARRAY ARGUMENTS
      real(kind=wp) :: pare(npar),rwork(irwork)
      integer ifixd(npar),iwork(iiwork)
!
!  SUBROUTINE ARGUMENTS
       external nlhdr
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   rsd,rss,rssc,rsspc
     integer&
    &   dst0,f,f0,fdif,icase,iprt,isubhd,mxiter,nfcall,niter,&
     &   nreduc,preduc,reldx,stppar
     character&
     &   lettrn*1,lettry*1
!
!  LOCAL ARRAYS
     character&
     &   ischkd(2)*1
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL IPRINT,LSTVCF
!
!  INTRINSIC FUNCTIONS
      intrinsic mod,real,sqrt
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     INTEGER DST0
!        THE LOCATION IN RWORK OF THE VALUE OF THE 2 NORM OF D TIMES
!        THE  NEWTON STEP.
!     INTEGER F
!        THE LOCATION IN RWORK OF THE VALUE OF HALF THE RESIDUAL
!        SUM OF SQUARES AT THE CURRENT PARAMETER VALUES.
!     INTEGER FDIF
!        THE LOCATION IN RWORK OF THE DIFFERENCE BETWEEN THE
!        RESIDUAL SUM OF SQUARES AT THE BEGINNING AND END OF THE
!        CURRENT ITERATION.
!     INTEGER F0
!        THE LOCATION IN RWORK OF THE VALUE OF HALF THE RESIDUAL
!        VARIANCE AT THE BEGINNING OF THE CURRENT ITERATION.
!     LOGICAL HEAD
!        THE VARIABLE USED TO INDICATE WHETHER A HEADING IS TO BE
!        PRINTED DURING A GIVEN CALL TO THE ITERATION REPORT (TRUE)
!        OR NOT (FALSE).
!     INTEGER ICASE
!        AN INDICATER VARIABLE USED TO DESIGNATE THE MESSAGE TO BE
!        PRINTED.
!     INTEGER IFIXD(NPAR)
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.
!        IF IFIXED(I).NE.0, THEN PAR(I) WILL BE HELD FIXED.
!        IF IFIXED(I).EQ.0, THEN PAR(I) WILL BE OPTIMIZED.
!     INTEGER IIWORK
!        THE DIMENSION OF THE INTEGER WORK VECTOR IWORK.
!     INTEGER IPRT
!        THE UNIT NUMBER FOR PRINTED OUTPUT.
!     INTEGER IRWORK
!        THE DIMENSION OF THE REAL WORK VECTOR RWORK.
!     CHARACTER*1 ISCHKD(2)
!        THE INDICATOR USED TO DESIGNATE WHETHER THE
!        TEST VALUE WAS CHECKED FOR CONVERGENCE (Y) OR NOT (N).
!     INTEGER ISUBHD
!        AN INTEGER VALUE SPECIFYING SUBHEADINGS TO BE PRINTED.
!     INTEGER IWORK(IIWORK)
!        THE INTEGER WORK SPACE VECTOR USED BY THE NL2 SUBROUTINES.
!     CHARACTER*1 LETTRN, LETTRY
!        THE LETTERS N AND Y, RESPECTIVELY.
!     INTEGER MXITER
!        THE LOCATION IN IWORK OF THE VARIABLE DESIGNATING THE
!        MAXIMUM NUMBER OF ITERATIONS ALLOWED.
!     INTEGER NFCALL
!        THE LOCATION IN IWORK OF THE NUMBER OF FUNCTION EVALUATIONS.
!     INTEGER NITER
!        THE LOCATION IN IWORK OF THE NUMBER OF THE CURRENT ITERATION.
!     EXTERNAL NLHDR
!        THE NAME OF THE ROUTINE WHICH PRODUCES THE HEADING.
!     INTEGER NPAR
!        THE NUMBER OF UNKNOWN PARAMETERS IN THE MODEL.
!     INTEGER NPARE
!        THE NUMBER OF UNKNOWN PARAMETERS TO BE OPTIMIZED.
!     INTEGER NNZW
!        THE NUMBER OF NON ZERO WEIGHTS.
!     INTEGER NREDUC
!        THE LOCATION IN RWORK OF THE VALUE USED TO CHECK IF THE
!        HESSIAN APPROXIMATION IS POSITIVE DEFINITE.  IF
!        IF RWORK(NREDUC) .EQ. 0, THE HESSIAN IS SINGULAR, OTHERWISE
!        IT IS NOT.
!     LOGICAL PAGE
!        THE VARIABLE USED TO INDICATE WHETHER A GIVEN SECTION OF
!        THE OUTPUT IS TO BEGIN ON A NEW PAGE (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: PARE(NPAR)
!        THE CURRENT ESTIMATES OF THE UNKNOWN PARAMETERS, BUT ONLY
!        THOSE TO BE OPTIMIZED (NOT THOSE WHOSE VALUES ARE FIXED).
!     INTEGER PREDUC
!        THE LOCATION IN RWORK OF THE PREDICTED FUNCTION REDUCTION
!        FOR THE CURRENT STEP.
!     INTEGER RELDX
!        THE LOCATION IN RWORK OF THE SCALED RELATIVE CHANGE IN
!        THE PARAMETER VALUES CAUSED BY THE CURRENT ITERATION.
!     REAL(KIND=WP) :: RSD
!        THE RESIDUAL STANDARD DEVIATION.
!     REAL(KIND=WP) :: RSS
!        THE RESIDUAL SUM OF SQUARES.
!     REAL(KIND=WP) :: RSSC
!        THE CHANGE IN THE RESIDUAL SUM OF SQUARES CAUSED BY THIS
!        ITERATION.
!     REAL(KIND=WP) :: RSSPC
!        THE PREDICTED CHANGE IN THE RESIDUAL SUM OF SQUARES AT THIS
!        ITERATION.
!     REAL(KIND=WP) :: RWORK(IRWORK)
!        THE REAL WORK VECTOR USED BY THE NL2 SUBROUTINES.
!     INTEGER STPPAR
!        THE LOCATION IN RWORK OF THE MARQUARDT LAMBDA PARAMETER.
!     LOGICAL WIDE
!        THE VARIABLE USED TO INDICATE WHETHER THE HEADING SHOULD
!        BE FULL WIDTH (TRUE) OR NOT (FALSE).
!
!
      data lettrn /'N'/, lettry /'Y'/
!
!     IWORK SUBSCRIPT VALUES
!
      data mxiter /18/, nfcall /6/, niter /31/
!
!     RWORK SUBSCRIPT VALUES
!
     data dst0 /3/, f /10/, fdif /11/, f0 /13/, nreduc /6/, preduc&
     &   /7/, reldx /17/, stppar /5/
!
      call iprint(iprt)
!
      if (iwork(1).eq.10) go to 90
     if ((iptout.eq.1) .and. (iwork(niter).ne.1) .and.&
     &   (iwork(niter).ne.iwork(mxiter)) .and. (iwork(1).le.2)) return
!
      isubhd = 0
      if (head) call nlhdr(page, wide, isubhd)
      head = .false.
      if (mod(iwork(niter),4).eq.0) head = .true.
!
      write (iprt,1000) iwork(niter)
!
!     COMPUTE STATISTICS TO BE PRINTED
!
      rss = 2.0e0*rwork(f)
      rsd = sqrt(rss)
      if (nnzw-npare.ge.1) rsd = rsd/sqrt(real(nnzw-npare))
!
      rssc = 0.0e0
      if (rwork(f0).gt.0.0e0) rssc = rwork(fdif)/rwork(f0)
!
      rsspc = 0.0e0
      if (rwork(f0).gt.0.0e0) rsspc = rwork(nreduc)/rwork(f0)
!
!     REFERENCE NL2 SUBROUTINE ASSESS, STATEMENT LABEL 300 TO 320
!
      ischkd(1) = lettrn
      ischkd(2) = lettrn
      if (rwork(fdif).gt.2.0e0*rwork(preduc)) go to 10
      if (rwork(dst0).lt.0.0e0) go to 10
      if (rwork(nreduc).ge.0.0e0) ischkd(1) = lettry
      if (rwork(stppar).eq.0.0e0) ischkd(2) = lettry
   10 continue
!
     write (iprt,1010) iwork(nfcall), rsd, rss, rssc, rsspc,&
     &   ischkd(1), rwork(reldx), ischkd(2)
      if (npare.lt.npar) write (iprt,1020)
      if (npare.ge.npar) write (iprt,1150)
      call lstvcf(npare, pare, npar, ifixd)
!
      if (iwork(1).le.2) return
!
!     PRINT FINAL ITERATION MESSAGE
!
      icase = iwork(1) - 2
     go to (20, 30, 40, 50, 60, 70, 80, 90, 100, 140, 110, 120, 130),&
     &   icase
!
!     ***** PARAMETER CONVERGENCE *****
!
   20 write (iprt,1030)
      return
!
!     ***** RESIDUAL SUM OF SQUARES CONVERGENCE *****
!
   30 write (iprt,1040)
      return
!
!     ***** PARAMETER AND RESIDUAL SUM OF SQUARES CONVERGENCE ****
!
   40 write (iprt,1050)
      return
!
!     ***** RESIDUAL SUM OF SQUARES IS EXACTLY ZERO *****
!
   50 write (iprt,1060)
      return
!
!     ***** SINGULAR CONVERGENCE *****
!
   60 write (iprt,1070)
      return
!
!     ***** FALSE CONVERGENCE *****
!
   70 write (iprt,1080)
      return
!
!     ***** LIMIT ON NUM. OF CALLS TO THE MODEL SUBROUTINE REACHED *****
!
   80 write (iprt,1090)
      return
!
!     ***** ITERATION LIMIT REACHED *****
!
   90 write (iprt,1100)
      return
!
!     ***** STOPX *****
!
  100 write (iprt,1110)
      return
!
!     ***** INITIAL RESIDUAL SUM OF SQUARES OVERFLOWS *****
!
  110 write (iprt,1120)
      return
!
!     ***** BAD PARAMETERS TO ASSESS *****
!
  120 write (iprt,1130)
      return
!
!     ***** J COULD NOT BE COMPUTED *****
!
  130 write (iprt,1140)
      return
!
  140 return
!
!      FORMAT STATEMENTS
!
 1000 format (//17h iteration number, i5/1x, 22('-'))
1010 format (5x, 5hmodel, 53x, 10hforecasted/5x, 5hcalls, 9x, 3hrsd,&
    &   13x, 3hrss, 8x, 12hrel chng rss, 4x, 12hrel chng rss, 4x,&
    &   12hrel chng par/62x, 5hvalue, 3x, 4hchkd, 4x, 5hvalue, 3x,&
     &   4hchkd/3x, i7, 3(2x, g14.4), 2(g12.4, 3x, a1))
1020 format (/5x, 25h current parameter values, 19h (only unfixed para,&
     &   18hmeters are listed))
 1030 format (/34h ***** parameter convergence *****)
 1040 format (/48h ***** residual sum of squares convergence *****)
1050 format (/44h ***** parameter and residual sum of squares,&
     &   18h convergence *****)
1060 format (/50h ***** the residual sum of squares is exactly zero,&
     &   6h *****)
 1070 format (/33h ***** singular convergence *****)
 1080 format (/30h ***** false convergence *****)
1090 format (/44h ***** limit on number of calls to the model,&
     &   25h subroutine reached *****)
 1100 format (/36h ***** iteration limit reached *****)
 1110 format (/18h ***** stopx *****)
1120 format (/53h ***** initial residual sum of squares overflows ****,&
     &   1h*)
 1130 format (/37h ***** bad parameters to assess *****)
 1140 format (/52h ***** derivative matrix could not be computed *****)
 1150 format (/5x, 25h current parameter values)
      end
