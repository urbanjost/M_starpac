!XBFS
      subroutine xbfs(lds,typ)
      real(kind=wp),intent(in) :: typ
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     ROUTINE TO TEST THE FOURIER SPECTRUM ANALYSIS ROUTINES
!
!     SERIES Y1 AND Y2 ARE LISTED AS SERIES X1 AND X2 ON PAGE OF 361 OF
!     JENKINS AND WATTS.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 2, 1985
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   lds
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      double precision dstak(12)
!
!  LOCAL SCALARS
      real(kind=wp) :: cmiss,fmax,fmin,ymiss,ymiss1,ymiss2
     integer&
    &   i,iccov,icspc2,index1,index2,inlppc,iphas,iprt,ispcf,j,&
     &   jccov,jnlppc,lacov,lagmax,ldstak,lyfft,n,nf,nprt,nw
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
    &   ccov(101,2,2),cspc2(300,2),freq(300),phas(300,2),y1(150),&
     &   y2(150),yfft1(400),yfft2(400),ym(150,2),ymmiss(4)
     integer&
     &   lags(4),nlppc(101,2,2)
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL BFS,BFSF,BFSFS,BFSM,BFSMS,BFSMV,BFSMVS,BFSS,BFSV,BFSVS,
!     +   CCFMS,CCFS,IPRINT,NRAND,SETIV,SETRV
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!  EQUIVALENCES
      equivalence (ym(1,1),y1(1))
      equivalence (ym(1,2),y2(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: CMISS
!         THE MISSING VALUE CODE FOR THE RETURNED CCVF ESTIMATES.
!     REAL(KIND=WP) :: CCOV(101,2,2)
!        THE COVARIANCES.
!     REAL(KIND=WP) :: CSPC2(300,2)
!        THE SQUARED COHERENCY COMPONENT OF THE SPECTRUM.
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     REAL(KIND=WP) :: FMAX, FMIN
!        THE MAXIMUM AND MINIMUM FREQUENCIES AT WHICH THE
!        SPECTRUM IS TO BE COMPUTED.
!     REAL(KIND=WP) :: FREQ(300)
!        THE VECTOR OF FREQUENCIES AT WHICH THE SPECTRUM IS COMPUTED.
!     INTEGER I
!        AN INDEX VARIABLE
!     INTEGER ICCOV
!        THE FIRST DIMENSION OF THE ARRAY CCOV.
!     INTEGER ICSPC2
!        THE FIRST DIMENSION OF THE ARRAY CSPC2.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER IPHAS
!        THE FIRST DIMENSION OF THE ARRAY PHAS.
!     INTEGER IPRT
!        THE LOGICAL UNIT USED FOR PRINTED OUTPUT.
!     INTEGER ISPCF
!         THE ACTUAL DIMENSION FOR THE SPECTRUM ARRAYS.
!     INTEGER J
!        INDEX VARIABLE.
!     INTEGER LACOV
!        THE LENGTH OF THE VECTOR ACOV.
!     INTEGER LAGMAX
!        THE INDEXING VARIABLE INDICATING THE LAG VALUE OF THE
!        AUTOCOVARIANCE BEING COMPUTED AND THE MAXIMUM LAG TO BE USED,
!        RESPECTIVELY.
!     INTEGER LAGS(4)
!        THE ARRAY USED TO STORE THE LAG WINDOW TRUCCATION
!        POINTS USED FOR EACH SET OF SPECTRUM VALUES.
!     INTEGER LDS, LDSTAK
!        THE LENGTH OF THE VECTOR DSTAK IN COMMON CSTAK.
!     INTEGER LYFFT
!        THE LENGTH OF THE VECTORS YFFT AND ZFFT, RESPECTIVELY..
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES AT WHICH THE SPECTRUM IS
!        TO BE COMPUTED.
!     INTEGER NLPPC(101,2,2)
!        THE NUMBERS OF LAGGED PRODUCT PAIRS USED FOR EACH ACVF.
!     INTEGER NPRT
!        A CODE USED TO SPECIFY THE TYPE OF PLOT.
!        IF NPRT < 0 THE PLOT IS DECIBLES/LINEAR
!        IF NPRT = 0 THE PLOT IS SUPPRESSED.
!        IF NPRT > 0 THE PLOT IS LOG/LINEAR
!     INTEGER NW
!        THE NUMBER OF DIFFERENT LAG WINDOW TRUNCATION POINTS SPECIFIED,
!        AND THEREFORE, THE NUMBER OF PLOTS.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS IN THE SERIES Y.
!     REAL(KIND=WP) :: PHAS(300,2)
!        THE PHASE COMPONENT OF THE SPECTRUM.
!     REAL(KIND=WP) :: YFFT1(400), YFFT2(400)
!        THE VECTORS OF THE OBSERVED TIME SERIES TO BE ANALYZED USING
!        THE FFT.
!     REAL(KIND=WP) :: YMISS, YMISS1, YMISS2, YMMISS(4)
!        THE USER SUPPLIED CODE WHICH IS USED TO DETERMINE WHETHER OR
!        NOT AN OBSERVATION IN THE SERIES IS MISSING.  IF Y(I) = YMISS,
!        THE VALUE IS ASSUMED MISSING, OTHERWISE IT IS NOT.
!     REAL(KIND=WP) :: YM(150,2)
!        THE MULTIVARIATE REPRESENTATION OF THE DATA
!     REAL(KIND=WP) :: Y1(150), Y2(150)
!         THE VECTORS CONTAINING THE TIME SERIES FROM JENKINS AND WATTS.
!
     data   y1(  1),  y1(  2),  y1(  3),  y1(  4),  y1(  5),  y1(  6)&
     &    /-0.88_wp, -0.16_wp, -1.87_wp, -1.12_wp,  1.38_wp,  2.13_wp/
     data   y1(  7),  y1(  8),  y1(  9),  y1( 10),  y1( 11),  y1( 12)&
     &    / 2.76_wp,  0.56_wp, -0.69_wp, -1.79_wp, -3.82_wp, -2.38_wp/
     data   y1( 13),  y1( 14),  y1( 15),  y1( 16),  y1( 17),  y1( 18)&
     &    / 1.00_wp,  0.70_wp, -0.15_wp,  0.98_wp,  0.11_wp, -0.35_wp/
     data   y1( 19),  y1( 20),  y1( 21),  y1( 22),  y1( 23),  y1( 24)&
     &    /-0.73_wp,  0.89_wp, -1.63_wp, -0.44_wp, -1.37_wp, -1.71_wp/
     data   y1( 25),  y1( 26),  y1( 27),  y1( 28),  y1( 29),  y1( 30)&
     &    /-1.22_wp, -2.00_wp, -0.22_wp,  0.38_wp,  1.31_wp,  0.71_wp/
     data   y1( 31),  y1( 32),  y1( 33),  y1( 34),  y1( 35),  y1( 36)&
     &    / 0.32_wp,  0.48_wp, -1.88_wp, -0.94_wp, -1.54_wp, -0.13_wp/
     data   y1( 37),  y1( 38),  y1( 39),  y1( 40),  y1( 41),  y1( 42)&
     &    / 1.02_wp,  0.02_wp, -0.77_wp,  0.11_wp, -0.60_wp, -0.52_wp/
     data   y1( 43),  y1( 44),  y1( 45),  y1( 46),  y1( 47),  y1( 48)&
     &    /-0.09_wp,  1.23_wp,  1.46_wp,  0.61_wp,  0.42_wp,  2.16_wp/
     data   y1( 49),  y1( 50),  y1( 51),  y1( 52),  y1( 53),  y1( 54)&
     &    / 3.18_wp,  2.10_wp,  0.37_wp, -0.24_wp,  0.57_wp, -0.53_wp/
     data   y1( 55),  y1( 56),  y1( 57),  y1( 58),  y1( 59),  y1( 60)&
     &    / 2.44_wp,  1.02_wp, -0.53_wp, -2.49_wp, -2.12_wp, -1.04_wp/
     data   y1( 61),  y1( 62),  y1( 63),  y1( 64),  y1( 65),  y1( 66)&
     &    /-0.12_wp, -1.88_wp, -1.50_wp,  1.54_wp,  3.33_wp,  3.08_wp/
     data   y1( 67),  y1( 68),  y1( 69),  y1( 70),  y1( 71),  y1( 72)&
     &    / 1.71_wp,  0.79_wp,  1.55_wp,  0.89_wp, -0.89_wp, -1.18_wp/
     data   y1( 73),  y1( 74),  y1( 75),  y1( 76),  y1( 77),  y1( 78)&
     &    / 0.89_wp,  1.71_wp,  3.05_wp,  0.15_wp, -1.04_wp,  0.12_wp/
     data   y1( 79),  y1( 80),  y1( 81),  y1( 82),  y1( 83),  y1( 84)&
     &    / 0.08_wp,  0.11_wp, -2.62_wp, -1.28_wp,  1.07_wp,  3.20_wp/
     data   y1( 85),  y1( 86),  y1( 87),  y1( 88),  y1( 89),  y1( 90)&
     &    / 1.92_wp,  0.53_wp, -1.08_wp,  0.49_wp, -0.58_wp,  0.17_wp/
     data   y1( 91),  y1( 92),  y1( 93),  y1( 94),  y1( 95),  y1( 96)&
     &    / 1.15_wp, -0.97_wp, -1.63_wp,  1.14_wp, -0.67_wp, -0.88_wp/
     data   y1( 97),  y1( 98),  y1( 99),  y1(100)&
     &    /-0.07_wp,  0.24_wp,  0.55_wp, -2.16_wp/
     data   y2(  1),  y2(  2),  y2(  3),  y2(  4),  y2(  5),  y2(  6)&
     &    / 0.79_wp,  1.12_wp, -1.10_wp, -2.39_wp, -1.75_wp, -0.82_wp/
     data   y2(  7),  y2(  8),  y2(  9),  y2( 10),  y2( 11),  y2( 12)&
     &    /-0.36_wp,  1.27_wp,  1.75_wp,  2.44_wp,  0.36_wp, -2.10_wp/
     data   y2( 13),  y2( 14),  y2( 15),  y2( 16),  y2( 17),  y2( 18)&
     &    /-1.93_wp, -1.30_wp, -1.75_wp, -0.34_wp,  0.74_wp,  0.49_wp/
     data   y2( 19),  y2( 20),  y2( 21),  y2( 22),  y2( 23),  y2( 24)&
     &    / 0.70_wp,  0.71_wp,  0.09_wp,  0.59_wp,  1.54_wp,  0.14_wp/
     data   y2( 25),  y2( 26),  y2( 27),  y2( 28),  y2( 29),  y2( 30)&
     &    / 0.55_wp, -1.40_wp, -2.55_wp, -1.66_wp, -0.43_wp,  0.58_wp/
     data   y2( 31),  y2( 32),  y2( 33),  y2( 34),  y2( 35),  y2( 36)&
     &    / 2.18_wp, -0.24_wp,  0.58_wp, -0.18_wp, -1.55_wp, -0.64_wp/
     data   y2( 37),  y2( 38),  y2( 39),  y2( 40),  y2( 41),  y2( 42)&
     &    /-1.09_wp,  0.90_wp, -0.66_wp, -0.35_wp,  0.48_wp,  0.50_wp/
     data   y2( 43),  y2( 44),  y2( 45),  y2( 46),  y2( 47),  y2( 48)&
     &    / 0.05_wp, -0.68_wp,  0.24_wp,  0.58_wp, -1.26_wp, -0.25_wp/
     data   y2( 49),  y2( 50),  y2( 51),  y2( 52),  y2( 53),  y2( 54)&
     &    / 0.25_wp,  2.18_wp,  2.96_wp,  1.56_wp, -0.36_wp, -0.59_wp/
     data   y2( 55),  y2( 56),  y2( 57),  y2( 58),  y2( 59),  y2( 60)&
     &    /-0.12_wp,  3.03_wp,  2.11_wp,  0.78_wp,  0.89_wp, -1.45_wp/
     data   y2( 61),  y2( 62),  y2( 63),  y2( 64),  y2( 65),  y2( 66)&
     &    /-0.36_wp, -0.37_wp, -1.39_wp, -4.19_wp, -0.73_wp, -0.98_wp/
     data   y2( 67),  y2( 68),  y2( 69),  y2( 70),  y2( 71),  y2( 72)&
     &    / 0.36_wp,  0.06_wp, -1.94_wp, -0.08_wp,  0.17_wp,  1.00_wp/
     data   y2( 73),  y2( 74),  y2( 75),  y2( 76),  y2( 77),  y2( 78)&
     &    /-0.05_wp,  0.43_wp,  0.15_wp,  2.69_wp,  0.57_wp,  0.29_wp/
     data   y2( 79),  y2( 80),  y2( 81),  y2( 82),  y2( 83),  y2( 84)&
     &    / 1.10_wp,  0.48_wp, -1.06_wp, -2.28_wp, -2.03_wp, -0.75_wp/
     data   y2( 85),  y2( 86),  y2( 87),  y2( 88),  y2( 89),  y2( 90)&
     &    / 1.00_wp,  1.71_wp,  0.58_wp,  1.97_wp,  0.99_wp,  1.94_wp/
     data   y2( 91),  y2( 92),  y2( 93),  y2( 94),  y2( 95),  y2( 96)&
     &    / 2.18_wp,  3.14_wp,  0.60_wp,  0.51_wp,  1.35_wp,  0.56_wp/
     data   y2( 97),  y2( 98),  y2( 99),  y2(100)&
     &    / 0.11_wp,  0.00_wp,  2.34_wp,  1.88_wp/
!
!
      call iprint(iprt)
      call setrv(ymmiss, 4, 0.89_wp)
!
!     CHECK ERROR HANDLING
!
!        TEST 1  -  MISCELANEOUS ERROR CHECKING
!
      write (iprt, 2000)
      lagmax = -1
      n = -10
      index1 = 0
      index2 = 0
      iccov = 0
      jccov = 0
      inlppc = 0
      jnlppc = 0
      icspc2 = -10
      iphas = -10
      lacov = -11
      lyfft = -11
      nw = -1
      nf = -5
      fmin = 0.5_wp
      fmax = 0.0_wp
      nprt = -1
      ispcf = -20
      ldstak = 0
      ymiss1 = 0.89_wp
      ymiss2 = 0.89_wp
!
      write(iprt, 1001)
      call bfs (y1, y2, n)
      write (iprt, 1002) ierr
!
      write(iprt, 1003)
     call bfss(y1, y2, n, nw, lags, nf, fmin, fmax, nprt,&
     &   cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
      write(iprt, 1019)
      call bfsf (yfft1, yfft2, n, lyfft, ldstak)
      write (iprt, 1002) ierr
!
      write(iprt, 1020)
     call bfsfs(yfft1, yfft2, n, lyfft, ldstak, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq)
      write (iprt, 1002) ierr
!
      write(iprt, 1005)
      call bfsm (y1, ymiss1, y2, ymiss2, n)
      write (iprt, 1002) ierr
!
      write(iprt, 1006)
     call bfsms(y1, ymiss1, y2, ymiss2, n, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
      write (iprt, 1007)
      call bfsv(ccov, index1, index2, n, lagmax, iccov, jccov)
      write (iprt, 1002) ierr
!
      write (iprt, 1008)
     call bfsvs (ccov, index1, index2, n, iccov, jccov,&
    &   nw, lags, nf, fmin, fmax, nprt, cspc2, icspc2, phas, iphas,&
     &   freq, ldstak)
      write (iprt, 1002) ierr
!
      write (iprt, 1021)
     call bfsmv(ccov, nlppc, index1, index2, n, lagmax, iccov, jccov,&
     &   inlppc, jnlppc)
      write (iprt, 1002) ierr
!
      write (iprt, 1022)
     call bfsmvs (ccov, nlppc, index1, index2, n, iccov, jccov,&
    &   inlppc, jnlppc, nw, lags, nf, fmin, fmax, nprt, cspc2, icspc2,&
     &   phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
!        TEST 2  -  MISCELANEOUS ERROR CHECKING (CONTINUED)
!
      write (iprt, 2010)
      n = 100
      lagmax = 40
      index1 = 0
      index2 = 0
      iccov = 0
      jccov = 0
      inlppc = 0
      jnlppc = 0
      icspc2 = 300
      iphas = 300
      lacov = 101
      lyfft = -11
      nw = 2
      lags(1) = 0
      lags(2) = 100
      nf = 202
      fmin = 0.0_wp
      fmax = 0.5_wp
      nprt = 3
      ispcf = 101
      ldstak = 0
!
      write(iprt, 1003)
     call bfss(y1, y2, n, nw, lags, nf, fmin, fmax, nprt,&
     &   cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
      write(iprt, 1019)
      call bfsf (yfft1, yfft2, n, lyfft, ldstak)
      write (iprt, 1002) ierr
!
      write(iprt, 1020)
     call bfsfs(yfft1, yfft2, n, lyfft, ldstak, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq)
      write (iprt, 1002) ierr
!
      write(iprt, 1006)
     call bfsms(y1, ymiss1, y2, ymiss2, n, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
      write (iprt, 1008)
     call bfsvs (ccov, index1, index2, n, iccov, jccov,&
    &   nw, lags, nf, fmin, fmax, nprt, cspc2, icspc2, phas, iphas,&
     &   freq, ldstak)
      write (iprt, 1002) ierr
!
      write (iprt, 1022)
     call bfsmvs (ccov, nlppc, index1, index2, n, iccov, jccov,&
    &   inlppc, jnlppc, nw, lags, nf, fmin, fmax, nprt, cspc2, icspc2,&
     &   phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
!        TEST 3  -  LDSTAK TOO SMALL
!
      write (iprt, 2030)
      n = 100
      index1 = 2
      index2 = 1
      iccov = 101
      jccov = 2
      inlppc = 101
      jnlppc = 2
      icspc2 = 300
      iphas = 300
      lagmax = 99
      lacov = 101
      lyfft = 400
      nw = 2
      lags(1) = 8
      lags(2) = 16
      nf = 26
      fmin = 0.0_wp
      fmax = 0.5_wp
      nprt = 1
      ispcf = 101
      ldstak = 0
!
      write(iprt, 1003)
     call bfss(y1, y2, n, nw, lags, nf, fmin, fmax, nprt,&
     &   cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
      write(iprt, 1019)
      call bfsf (yfft1, yfft2, n, lyfft, ldstak)
      write (iprt, 1002) ierr
!
      write(iprt, 1020)
     call bfsfs(yfft1, yfft2, n, lyfft, ldstak, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq)
      write (iprt, 1002) ierr
!
      write(iprt, 1006)
     call bfsms(y1, ymiss1, y2, ymiss2, n, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
      write (iprt, 1008)
     call bfsvs (ccov, index1, index2, n, iccov, jccov,&
    &   nw, lags, nf, fmin, fmax, nprt, cspc2, icspc2, phas, iphas,&
     &   freq, ldstak)
      write (iprt, 1002) ierr
!
      write (iprt, 1022)
     call bfsmvs (ccov, nlppc, index1, index2, n, iccov, jccov,&
    &   inlppc, jnlppc, nw, lags, nf, fmin, fmax, nprt, cspc2, icspc2,&
     &   phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
!        TEST 4  -  ALL DATA AND COVARIANCES MISSING
!
      write (iprt, 2040)
      n = 100
      lagmax = 99
      icspc2 = 300
      iphas = 300
      lacov = 101
      lyfft = 400
      nw = 2
      lags(1) = 8
      lags(2) = 16
      nf = 26
      fmin = 0.0_wp
      fmax = 0.5_wp
      nprt = 1
      ispcf = 101
      ldstak = lds
      call setrv(yfft1, n, ymiss1)
      call setrv(yfft2, n, ymiss2)
      call setrv(ccov, 404, 0.0_wp)
      call setiv(nlppc, 404, 0)
!
      write(iprt, 1005)
      call bfsm (yfft1, ymiss1, yfft2, ymiss2, n)
      write (iprt, 1002) ierr
!
      write(iprt, 1006)
     call bfsms(yfft1, ymiss1, yfft2, ymiss2, n, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
      write (iprt, 1021)
     call bfsmv(ccov, nlppc, index1, index2, n, lagmax, iccov, jccov,&
     &   inlppc, jnlppc)
      write (iprt, 1002) ierr
!
      write (iprt, 1022)
     call bfsmvs (ccov, nlppc, index1, index2, n, iccov, jccov,&
    &   inlppc, jnlppc, nw, lags, nf, fmin, fmax, nprt, cspc2, icspc2,&
     &   phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
!        TEST 5  -  EVERY OTHER VALUE MISSING
!
      write (iprt, 2050)
      n = 100
      lagmax = 99
      icspc2 = 300
      iphas = 300
      lacov = 101
      lyfft = 400
      nw = 2
      lags(1) = 8
      lags(2) = 16
      nf = 26
      fmin = 0.0_wp
      fmax = 0.5_wp
      nprt = 1
      ispcf = 101
      ldstak = lds
      call setrv(yfft1, n, ymiss1)
      call setrv(yfft2, n, ymiss2)
      do 10 i = 1, n, 2
         yfft1(i) = y1(i)
         yfft2(i) = y2(i)
   10 continue
!
      write(iprt, 1005)
      call bfsm (yfft1, ymiss1, yfft2, ymiss2, n)
      write (iprt, 1002) ierr
!
      write(iprt, 1006)
     call bfsms(yfft1, ymiss1, yfft2, ymiss2, n, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
!     CHECK RESULTS FROM VALID CALL
!
      write(iprt, 2020)
      ymiss = 1.16_wp
      n = 100
      lagmax = 99
      icspc2 = 300
      iphas = 300
      lacov = 101
      lyfft = 400
      nw = 2
      lags(1) = 8
      lags(2) = 16
      nf = 26
      fmin = 0.0_wp
      fmax = 0.5_wp
      nprt = 1
      ispcf = 101
      ldstak = lds
!
!     TEST OF BFS
!
      write(iprt, 1001)
      call bfs (y1, y2, n)
      write (iprt, 1002) ierr
!
!     TEST OF BFSS
!
      write(iprt, 2020)
      write(iprt, 1003)
     call bfss(y1, y2, n, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM BFSS
!
     write (iprt, 1004) (freq(i), (cspc2(i,j), phas(i,j),j=1,nw),&
     &   i=1,nf)
!
!     TEST OF BFSF
!
      write(iprt, 2020)
      write(iprt, 1019)
      call scopy(n, y1, 1, yfft1, 1)
      call scopy(n, y2, 1, yfft2, 1)
      call bfsf (yfft1, yfft2, n, lyfft, ldstak)
      write (iprt, 1002) ierr
!
!     TEST OF BFSFS
!
      write(iprt, 2020)
      write(iprt, 1020)
      call scopy(n, y1, 1, yfft1, 1)
      call scopy(n, y2, 1, yfft2, 1)
     call bfsfs(yfft1, yfft2, n, lyfft, ldstak, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM BFSFS
!
     write (iprt, 1004) (freq(i), (cspc2(i,j), phas(i,j),j=1,nw),&
     &   i=1,nf)
!
!     TEST OF BFSM
!
      write(iprt, 2020)
      write(iprt, 1005)
      call bfsm (y1, ymiss1, y2, ymiss2, n)
      write (iprt, 1002) ierr
!
!     TEST OF BFSMS
!
      write(iprt, 2020)
      write(iprt, 1006)
     call bfsms(y1, ymiss1, y2, ymiss2, n, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM BFSMS
!
     write (iprt, 1004) (freq(i), (cspc2(i,j), phas(i,j),j=1,nw),&
     &   i=1,nf)
!
!     TEST OF BFSV
!
      write(iprt, 2020)
     call ccfs (ym, n, 2, 150, lagmax, ccov, iccov, jccov, 0,&
     &   ldstak)
      write (iprt, 1007)
      call bfsv(ccov, index1, index2, n, lagmax, iccov, jccov)
      write (iprt, 1002) ierr
!
!     TEST OF BFSVS
!
      write(iprt, 2020)
      write (iprt, 1008)
     call bfsvs(ccov, index1, index2, n, iccov, jccov, nw, lags, nf,&
     &   fmin, fmax, nprt, cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM BFSVS
!
     write (iprt, 1004) (freq(i), (cspc2(i,j), phas(i,j),j=1,nw),&
     &   i=1,nf)
!
!     TEST OF BFSMV
!
      write(iprt, 2020)
     call ccfms (ym, ymmiss, n, 2, 150, lagmax, ccov, cmiss, iccov,&
     &  jccov, nlppc, inlppc, jnlppc, 0, ldstak)
      write (iprt, 1021)
     call bfsmv(ccov, nlppc, index1, index2, n, lagmax, iccov,&
     &  jccov, inlppc, jnlppc)
      write (iprt, 1002) ierr
!
!     TEST OF BFSMVS
!
      write(iprt, 2020)
      write (iprt, 1022)
     call bfsmvs(ccov, nlppc, index1, index2, n, iccov,&
    &  jccov, inlppc, jnlppc, nw, lags, nf, fmin, fmax, nprt,&
     &  cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM BFSMVS
!
     write (iprt, 1004) (freq(i), (cspc2(i,j), phas(i,j),j=1,nw),&
     &   i=1,nf)
!
!     MINIMUM PROBLEM SIZE
!
      ymiss = 1.16_wp
      n = 17
      lagmax = 1
      icspc2 = 1
      iphas = 1
      lacov = 101
      lyfft = 400
      nw = 1
      lags(1) = 1
      lags(2) = 16
      nf = 1
      fmin = 0.0_wp
      fmax = 0.5_wp
      nprt = 1
      ispcf = 101
      ldstak = lds
!
!     TEST OF BFS
!
      write(iprt, 2060)
      write(iprt, 1001)
      call bfs(y1, y2, n)
      write (iprt, 1002) ierr
!
!     TEST OF BFSS
!
      write(iprt, 2060)
      write(iprt, 1003)
     call bfss(y1, y2, n, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM BFSS
!
     write (iprt, 1004) (freq(i), (cspc2(i,j), phas(i,j),j=1,nw),&
     &   i=1,nf)
!
!     CHECK HANDLING OF FMIN AND FMAX
!
      ymiss = 1.16_wp
      n = 100
      lagmax = 99
      icspc2 = 300
      iphas = 300
      lacov = 101
      lyfft = 400
      nw = 2
      lags(1) = 8
      lags(2) = 16
      nf = 26
      fmin = 0.45_wp
      fmax = 0.5_wp
      nprt = 1
      ispcf = 101
      ldstak = lds
!
!     TEST OF BFSS
!
      write(iprt, 2070)
      write(iprt, 1003)
     call bfss(y1, y2, n, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq, ldstak)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM BFSS
!
     write (iprt, 1004) (freq(i), (cspc2(i,j), phas(i,j),j=1,nw),&
     &   i=1,nf)
!
!     CHECK RESULTS FOR WHITE NOISE SPECTRUM
!
      ymiss = 1.16_wp
      call nrand(yfft1, n, 12343)
      call nrand(yfft2, n, 34523)
      n = 100
      lagmax = 99
      icspc2 = 300
      iphas = 300
      lacov = 101
      lyfft = 400
      nw = 2
      lags(1) = 8
      lags(2) = 16
      nf = 26
      fmin = 0.0_wp
      fmax = 0.5_wp
      nprt = 1
      ispcf = 101
      ldstak = lds
!
!     TEST OF BFSFS
!
      write(iprt, 2080)
      write(iprt, 1003)
     call bfsfs(yfft1, yfft2, n, lyfft, ldstak, nw, lags, nf, fmin,&
     &   fmax, nprt, cspc2, icspc2, phas, iphas, freq)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM BFSS
!
     write (iprt, 1004) (freq(i), (cspc2(i,j), phas(i,j),j=1,nw),&
     &   i=1,nf)
!
      return
!
!     FORMAT STATEMENTS
!
 1001 format (12h test of bfs)
 1002 format (8h ierr is, i5/)
 1003 format (13h test of bfss)
 1004 format (5(1x, e15.7))
 1005 format (13h test of bfsm)
 1006 format (14h test of bfsms)
 1007 format (13h test of bfsv)
 1008 format (14h test of bfsvs)
 1019 format (13h test of bfsf)
 1020 format (14h test of bfsfs)
 1021 format (14h test of bfsmv)
 1022 format (15h test of bfsmvs)
 2000 format (32h1check error handling  -  test 1)
 2010 format (32h1check error handling  -  test 2)
 2020 format (14h1valid problem)
 2030 format (14h1lds too small)
 2040 format (33h1all data and covariances missing)
 2050 format (31h1every other data value missing)
 2060 format (21h1minimum problem size)
 2070 format (32h1check handling of fmin and fmax)
 2080 format (21h1white noise spectrum)
      end
