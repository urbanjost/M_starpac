!BFSMN
     subroutine bfsmn(spcf1, spcf2, ceven, codd, w, lw, lag, df, nprt,&
    &   nf, cspc2, phas, freq, npts, xaxis, yaxis, isym, lpcv, alpha,&
     &   lagmx1, delta)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE COMPUTES THE SQUARED COHERENCY AND PHASE COMPONENTS
!     OF A BIVARIATE SPECTRUM.
!
!     REFERENCE - JENKINS AND WATTS
!                 SPECTRAL ANALYSIS AND ITS APPLICATIONS
!
!     WRITTEN BY - STEPHEN M. KEEFER AND JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 2, 1985
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   alpha,delta,df
     integer&
     &   lag,lagmx1,lpcv,lw,nf,nprt,npts
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
    &   ceven(*),codd(*),cspc2(*),freq(*),phas(*),spcf1(*),spcf2(*),&
     &   w(*),xaxis(*),yaxis(*)
     integer&
     &   isym(*)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
    &   arg,barl,barq,bary,c,ci,fac,fplm,fplrs,fpspm,g,pi,pit2,sn,v0,&
     &   v1,v2,z0,z1,z2
     integer&
     &   i,k
!
!  EXTERNAL FUNCTIONS
     real(kind=wp) ::&
     &   ppfnml,r1mach
!       EXTERNAL PPFNML,R1MACH
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL GETPI
!
!  INTRINSIC FUNCTIONS
      intrinsic atan2,cos,log,sign,sin,sqrt,tanh
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: ALPHA
!        THE DESIRED CONFIDENCE LEVEL.
!     REAL(KIND=WP) :: ARG
!        AN ARGUMENT USED IN THE SPECTRUM COMPUTATIONS.
!     REAL(KIND=WP) :: BARL
!        THE SMOOTHED COSPECTRAL ESTIMATES.
!     REAL(KIND=WP) :: BARQ
!        THE SMOOTHED QUADRATURE SPECTRAL ESTIMATES.
!     REAL(KIND=WP) :: BARY
!        A TRANSFORMATION OF THE SQUARED COHERENCY COMPONENT.
!     REAL(KIND=WP) :: C
!        AN ARGUMENT USED IN THE SPECTRUM COMPUTATIONS.
!     REAL(KIND=WP) :: CEVEN(LAGMX1)
!        THE SUMS OF THE COVARIANCES FOR EACH LAG.
!     REAL(KIND=WP) :: CI
!        THE CONFIDENCE INTERVAL FOR THE SQUARED COHERENCY COMPONENT.
!     REAL(KIND=WP) :: CODD(LAGMX1)
!        THE DIFFERENCES OF THE AUTOCOVARIANCES FOR EACH LAG.
!     REAL(KIND=WP) :: CSPC2(NF)
!        THE SQUARED COHERENCY COMPONENT OF THE BIVARIATE SPECTRA.
!     REAL(KIND=WP) :: DELTA
!        THE SAMPLING INTERVAL.
!     REAL(KIND=WP) :: DF
!        THE EFFECTIVE DEGREES OF FREEDOM.
!     REAL(KIND=WP) :: FAC
!        THE CONVERSION FACTOR FROM RADIANS TO DEGREES.
!     REAL(KIND=WP) :: FPLM
!        THE FLOATING POINT LARGEST MAGNITUDE.
!     REAL(KIND=WP) :: FPLRS
!        THE FLOATING POINT LARGEST RELATIVE SPACING.
!     REAL(KIND=WP) :: FPSPM
!        THE FLOATING POINT SMALLEST POSITIVE MAGNITUDE.
!     REAL(KIND=WP) :: FREQ(NF)
!        THE FREQUENCIES AT WHICH THE SPECTRUM IS COMPUTED.
!     REAL(KIND=WP) :: G
!        AN ARGUMENT USED IN THE COMPUTATION OF THE ALPHA PERCENT
!        SIGNIFICANCE LEVEL.
!     INTEGER I
!        AN INDEX VALUE.
!     INTEGER ISYM(LPCV)
!        THE VECTOR CONTAINING THE CODES FOR THE PLOT SYMBOLS.
!     INTEGER K
!         AN INDEX VALUE.
!     INTEGER LAG
!        THE LAG WINDOW TRUNCATION POINT USED FOR A SPECIFIC WINDOW.
!     INTEGER LAGMX1
!        THE VALUE LAGMAX+1.
!     INTEGER LPCV
!        THE LENGTH OF THE PLOT CO-ORDINATE VECTORS.
!     INTEGER LW
!         THE LENGTH OF VECTOR W.
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES AT WHICH THE SPECTRUM IS
!        TO BE COMPUTED.
!     INTEGER NPRT
!        A CODE USED TO SPECIFY THE TYPE OF PLOT.
!        IF NPRT = 0 THE PLOT IS SUPPRESSED.
!        IF NPRT = 2 THE PLOT IS PROVIDED.
!     INTEGER NPTS
!        THE NUMBER OF X, Y CO-ORDINATES TO BE PLOTTED.
!     REAL(KIND=WP) :: PHAS(NF)
!        THE PHASE COMPONENT OF THE BIVARIATE SPECTRA.
!     REAL(KIND=WP) :: PI, PIT2
!        THE VALUE OF PI AND PI*2.
!     REAL(KIND=WP) :: SN
!        AN ARGUMENT USED IN THE COMPUTATION OF THE SPECTRUM.
!     REAL(KIND=WP) :: SPCF1(NF), SPCF2(NF)
!        THE UNIVARIATE SPECTRUM FOR EACH SERIES.
!     REAL(KIND=WP) :: V0, V1, V2
!        ARGUMENTS USED IN THE COMPUTATION OF THE SPECTRUM.
!     REAL(KIND=WP) :: W(LW)
!        THE WINDOW.
!     REAL(KIND=WP) :: XAXIS(LPCV)
!        THE X AXIS VALUES FOR THE SPECTRUM PLOTS.
!     REAL(KIND=WP) :: YAXIS(LPCV)
!        THE Y AXIS VALUES FOR THE SPECTRUM PLOTS.
!     REAL(KIND=WP) :: Z0, Z1, Z2
!        ARGUMENTS USED IN THE COMPUTATION OF THE SPECTRUM.
!
!
      call getpi(pi)
      pit2 = pi*2.0e0
!
      fpspm = r1mach(1)
      fplm = r1mach(2)
      fplrs = r1mach(4)
!
      fac = 180.0_wp/pi
!
!
!     COMPUTE SMOOTHED CO-SPECTRAL ESTIMATE
!
      do 40 i=1,nf
!
!           COMPUTE SMOOTHED CO- AND QUADRATURE SPECTRA USING
!           THE ALGORITHM SHOWN ON PAGE 420 OF JENKINS AND WATTS
!
         if (freq(i).eq.0.0e0) then
            c = 1.0e0
            sn = 0.0e0
         else if (freq(i).eq.0.25e0) then
            c = 0.0e0
            sn = 1.0e0
         else if (freq(i).eq.0.5e0) then
            c = -1.0e0
            sn = 0.0
         else
            arg = pit2*freq(i)
            c = cos(arg)
            sn = sin(arg)
         end if
         v0 = 0.0e0
         v1 = 0.0e0
         z0 = 0.0e0
         z1 = 0.0e0
         do 10 k=lag-1,1,-1
            v2 = 2.0e0*c*v1 - v0 + w(k+1)*ceven(k+1)
            z2 = 2.0e0*c*z1 - z0 + w(k+1)*codd(k+1)
            v0 = v1
            v1 = v2
            z0 = z1
            z1 = z2
   10    continue
         barl = delta*(ceven(1)+2.0e0*(v1*c-v0))
         barq = 2.0e0*delta*z1*sn
!
!     COMPUTE THE SMOOTHED SQUARED COHERENCY SPECTRA
!
         if (spcf1(i)*spcf2(i).gt.0.0e0) then
            cspc2(i) = (barl*barl+barq*barq)
            cspc2(i) = cspc2(i)/(spcf1(i)*spcf2(i))
         else
            cspc2(i) = fplm
         end if
!
!     COMPUTE PHASE (IN RADIANS)
!
         if ((barq.ne.0.0e0) .or. (barl.ne.0.0e0)) then
            phas(i) = atan2(-barq,barl)
         else
            if (i.eq.1) then
               phas(i) = 0.0e0
            else
               phas(i) = sign(pi,phas(i-1))
            end if
         end if
   40 continue
!
      if (nprt.eq.0) return
!
!     COMPUTE SMOOTHED SQUARED COHERENCY PLOT VECTORS
!
      ci = ppfnml(alpha)*sqrt(1.0_wp/df)
      g = 2.0_wp/df
      g = 1.0e0 - (1.0e0-alpha)**(g/(1.0e0-g))
      npts = 0
      do 60 i=1,nf
         npts = npts + 1
!
!     COMPUTE 95 PER CENT SIGNIFICANCE LEVEL
!
         yaxis(npts) = g
         xaxis(npts) = freq(i)
         isym(npts) = 4
         if (spcf1(i)*spcf2(i).le.0.0e0) go to 60
!
!     COMPUTE COHERENCE SPECTRAL ESTIMATE
!
         if (cspc2(i).gt.1.0e0) go to 60
         npts = npts + 1
         yaxis(npts) = cspc2(i)
         xaxis(npts) = freq(i)
         isym(npts) = 1
         if (cspc2(i).lt.g) go to 60
!
!     COMPUTE CONFIDENCE INTERVAL
!
         bary = sqrt(cspc2(i))
         bary = 0.5e0*(log((1.0e0+bary)/(1.0e0-bary)))
         npts = npts + 1
         yaxis(npts) = (tanh(bary+ci))*(tanh(bary+ci))
         xaxis(npts) = freq(i)
         isym(npts) = 2
         npts = npts + 1
         yaxis(npts) = (tanh(bary-ci))*(tanh(bary-ci))
         xaxis(npts) = freq(i)
         isym(npts) = 2
   60 continue
!
      return
!
      end
