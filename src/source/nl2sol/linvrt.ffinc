!LINVRT
      subroutine linvrt(n, lin, l)
!
!  ***  COMPUTE  LIN = L**-1,  BOTH  N X N  LOWER TRIANG. STORED   ***
!  ***  COMPACTLY BY ROWS.  LIN AND L MAY SHARE THE SAME STORAGE.  ***
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      integer
     +   n
!
!  ARRAY ARGUMENTS
      real(kind=wp) ::
     +   l(*),lin(*)
!
!  LOCAL SCALARS
      real(kind=wp) ::
     +   one,t,zero
      integer
     +   i,ii,im1,j0,j1,jj,k,k0,np1
!
!  ***  PARAMETERS  ***
!
!     INTEGER N
!     REAL(KIND=WP) :: L(*), LIN(*)
!     DIMENSION L(N*(N+1)/2), LIN(N*(N+1)/2)
!
!  ***  LOCAL VARIABLES  ***
!
!     INTEGER I, II, IM1, JJ, J0, J1, K, K0, NP1
!     REAL(KIND=WP) :: ONE, T, ZERO
      data one/1.0_wp/, zero/0.0_wp/
!
!  ***  BODY  ***
!
      np1 = n + 1
      j0 = n*(np1)/2
      do 30 ii = 1, n
         i = np1 - ii
         lin(j0) = one/l(j0)
         if (i .le. 1) go to 999
         j1 = j0
         im1 = i - 1
         do 20 jj = 1, im1
              t = zero
              j0 = j1
              k0 = j1 - jj
              do 10 k = 1, jj
                   t = t - l(k0)*lin(j0)
                   j0 = j0 - 1
                   k0 = k0 + k - i
 10                continue
              lin(j0) = t/l(k0)
 20           continue
         j0 = j0 - 1
 30      continue
 999  return
      end subroutine linvrt
