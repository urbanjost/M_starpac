!LSQRT
      subroutine lsqrt(n1, n, l, a, irc)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!  ***  COMPUTE ROWS N1 THROUGH N OF THE CHOLESKY FACTOR  L  OF
!  ***  A = L*(L**T),  WHERE  L  AND THE LOWER TRIANGLE OF  A  ARE BOTH
!  ***  STORED COMPACTLY BY ROWS (AND MAY OCCUPY THE SAME STORAGE).
!  ***  IRC = 0 MEANS ALL WENT WELL.  IRC = J MEANS THE LEADING
!  ***  PRINCIPAL  J X J  SUBMATRIX OF  A  IS NOT POSITIVE DEFINITE --
!  ***  AND  L(J*(J+1)/2)  CONTAINS THE (NONPOS.) REDUCED J-TH DIAGONAL.
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      integer
     &   irc,n,n1
!
!  ARRAY ARGUMENTS
      real(kind=wp) ::
     &   a(1),l(1)
!
!  LOCAL SCALARS
      real(kind=wp) ::
     &   t,td,zero
      integer
     &   i,i0,ij,ik,im1,j,j0,jk,jm1,k
!
!  INTRINSIC FUNCTIONS
      intrinsic sqrt
!
!  ***  PARAMETERS  ***
!
!     INTEGER N1, N, IRC
!     REAL(KIND=WP) :: L(1), A(1)
!     DIMENSION L(N*(N+1)/2), A(N*(N+1)/2)
!
!  ***  LOCAL VARIABLES  ***
!
!     INTEGER I, IJ, IK, IM1, I0, J, JK, JM1, J0, K
!     REAL(KIND=WP) :: T, TD, ZERO
!
!/
      data zero/0.0_wp/
!
!  ***  BODY  ***
!
      i0 = n1 * (n1 - 1) / 2
      do 50 i = n1, n
         td = zero
         if (i .eq. 1) go to 40
         j0 = 0
         im1 = i - 1
         do 30 j = 1, im1
              t = zero
              if (j .eq. 1) go to 20
              jm1 = j - 1
              do 10 k = 1, jm1
                   ik = i0 + k
                   jk = j0 + k
                   t = t + l(ik)*l(jk)
 10                continue
 20           ij = i0 + j
              j0 = j0 + j
              t = (a(ij) - t) / l(j0)
              l(ij) = t
              td = td + t*t
 30           continue
 40      i0 = i0 + i
         t = a(i0) - td
         if (t .le. zero) go to 60
         l(i0) = sqrt(t)
 50      continue
!
      irc = 0
      go to 999
!
 60   l(i0) = t
      irc = i
!
 999  return
!
      end subroutine lsqrt
