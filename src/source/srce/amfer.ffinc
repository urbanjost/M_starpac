!AMFER
     subroutine amfer(nmsub, n, npar, ldstak, ldsmin,&
     &  save, mspec, nfac, ifcst, nfcst)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE ERROR CHECKING ROUTINE FOR NONLINEAR LEAST SQUARES
!     ESTIMATION ROUTINES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 2, 1985
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   ifcst,ldsmin,ldstak,n,nfac,nfcst,npar
     logical&
     &   save
!
!  ARRAY ARGUMENTS
     integer&
     &   mspec(4,*)
     character&
     &   nmsub(6)*1
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     integer&
     &   i,np,nv
     logical&
     &   head
!
!  LOCAL ARRAYS
     logical&
     &   error(20)
     character&
    &   lifcst(8)*1,llds(8)*1,lmspec(8)*1,ln(8)*1,lnfac(8)*1,&
     &   lnfcst(8)*1,lnpar(8)*1,lone(8)*1
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL EIAGE,EISEQ,EISGE
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     LOGICAL ERROR(20)
!        VALUE(S) INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     LOGICAL HEAD
!        THE VARIABLE USED TO INDICATE WHETHER A HEADING IS TO BE
!        PRINTED DURING A GIVEN CALL TO THE ITERATION REPORT (TRUE)
!        OR NOT (FALSE).
!     INTEGER IERR
!        THE VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .GE. 1, ERRORS WERE DETECTED.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     CHARACTER*1 LIFCST(8), LLDS(8), LMSPEC(8), LN(8), LNFAC(8),
!    *  LNPAR(8), LNFCST(8), LONE(8)
!        THE ARRAY(S) CONTAINING THE NAME(S) OF INPUT PARAMETER(S)
!        CHECKED FOR ERRORS.
!     INTEGER MSPEC(4,NFAC)
!        THE ARRAY CONTAINING THE VALUES OF P, D, Q, AND S FOR EACH FACT
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NFAC
!        THE NUMBER OF FACTORS IN THE MODEL
!     INTEGER NFCST
!        THE NUMBER OF FORECASTS.
!     CHARACTER*1 NMSUB(6)
!        THE NAME OF THE ROUTINE CALLING THE ERROR CHECKING ROUTINE
!     INTEGER NPAR
!        THE NUMBER OF PARAMETERS IN THE MODEL.
!     INTEGER NV
!        *
!     LOGICAL SAVE
!        THE VARIABLE USED TO INDICATE WHETHER ANY RESULTS OTHER THAN
!        THE RESIDUALS AND PARAMETERS ARE TO BE SAVED (TRUE) OR NOT
!        (FALSE).
!
!     SET UP NAME ARRAYS
!
     data lifcst(1), lifcst(2), lifcst(3), lifcst(4), lifcst(5),&
    &   lifcst(6), lifcst(7), lifcst(8)&
     &  /'I','F','C','S','T',' ',' ',' '/
     data llds(1), llds(2), llds(3), llds(4), llds(5), llds(6),&
     &   llds(7), llds(8) /'L','D','S','T','A','K',' ',' '/
     data lmspec(1), lmspec(2), lmspec(3), lmspec(4), lmspec(5),&
    &   lmspec(6), lmspec(7), lmspec(8)&
     &  /'M','S','P','C',' ',' ',' ',' '/
     data ln(1), ln(2), ln(3), ln(4), ln(5), ln(6), ln(7), ln(8) /'N',&
     &   ' ',' ',' ',' ',' ',' ',' '/
     data lnfac(1), lnfac(2), lnfac(3), lnfac(4), lnfac(5),&
     &   lnfac(6), lnfac(7), lnfac(8) /'N','F','A','C',' ',' ',' ',' '/
     data lnfcst(1), lnfcst(2), lnfcst(3), lnfcst(4), lnfcst(5),&
    &   lnfcst(6), lnfcst(7), lnfcst(8)&
     &  /'N','F','C','S','T',' ',' ',' '/
     data lnpar(1), lnpar(2), lnpar(3), lnpar(4), lnpar(5),&
    &   lnpar(6), lnpar(7), lnpar(8) /'N','P','A','R',' ',' ',' ',&
     &   ' '/
     data lone(1), lone(2), lone(3), lone(4), lone(5),&
     &   lone(6), lone(7), lone(8) /'1',' ',' ',' ',' ',' ',' ',' '/
!
!     ERROR CHECKING
!
      do 10 i=1,20
         error(i) = .false.
   10 continue
!
      ierr = 0
      head = .true.
!
      call eisge(nmsub, ln, n, 1, 2, head, error(1), lone)
!
      call eisge(nmsub, lnfac, nfac, 1, 2, head, error(2), lone)
!
     if (.not. error(2))&
    &  call eiage(nmsub, lmspec, mspec, 4, nfac, 4, 0, 0, head, 1, nv,&
     &  error(3), lmspec)
!
      if ((.not. error(2)) .and. (.not. error(3))) then
        np = 1
         do 15 i = 1, nfac
           np = np + mspec(1,i) + mspec(3,i)
   15   continue
        call eiseq(nmsub, lnpar, npar, np, 1, head, error(4), lnpar)
      end if
!
     if ((.not.error(1)) .and. (.not.error(2)) .and. (.not.error(3))&
    &   .and. (.not.error(4)) .and. (.not.error(5)))&
    &   call eisge(nmsub, llds, ldstak, ldsmin, 9, head, error(6),&
     &   llds)
!
     if (save)&
    &   call eisge(nmsub, lifcst, ifcst, nfcst, 3, head, error(15),&
     &   lnfcst)
!
      do 20 i=1,20
         if (error(i)) go to 30
   20 continue
      return
!
   30 continue
      ierr = 1
      return
!
      end
