!CPYVII
      subroutine cpyvii(n,x,incx,y,incy)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     COPY INTEGER X TO INTEGER Y.
!     FOR I = 0 TO N-1, COPY  X(LX+I*INCX) TO Y(LY+I*INCY),
!     WHERE LX = 1 IF INCX .GE. 0, ELSE LX = (-INCX)*N, AND LY IS
!     DEFINED IN A SIMILAR WAY USING INCY.
!
!     MODELED AFTER BLAS COPY ROUTINES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  OCTOBER 3, 1983
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   incx,incy,n
!
!  ARRAY ARGUMENTS
     integer&
     &   x(n),y(n)
!
!  LOCAL SCALARS
     integer&
     &   i,ix,iy,m,mp1,ns
!
!  INTRINSIC FUNCTIONS
      intrinsic mod
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     INTEGER I
!        AN INDEX VALUE.
!     INTEGER INCX
!        THE INCREMENT FOR THE MATRIX X.
!     INTEGER INCY
!        THE INCREMENT FOR THE MATRIX Y.
!     INTEGER N
!        THE NUMBER OF ROWS OF DATA TO BE COPIED FROM MATRIX X.
!     INTEGER X(N)
!        THE MATRIX TO BE COPIED FROM.
!     INTEGER Y(N)
!        THE MATRIX TO BE COPIED TO.
!
      if(n.le.0)return
      if(incx.eq.incy) if(incx-1) 5,20,60
    5 continue
!
!        CODE FOR UNEQUAL OR NONPOSITIVE INCREMENTS.
!
      ix = 1
      iy = 1
      if(incx.lt.0)ix = (-n+1)*incx + 1
      if(incy.lt.0)iy = (-n+1)*incy + 1
      do 10 i = 1,n
        y(iy) = x(ix)
        ix = ix + incx
        iy = iy + incy
   10 continue
      return
!
!        CODE FOR BOTH INCREMENTS EQUAL TO 1
!
!        CLEAN-UP LOOP SO REMAINING VECTOR LENGTH IS A MULTIPLE OF 7.
!
   20 m = mod(n,7)
      if( m .eq. 0 ) go to 40
      do 30 i = 1,m
        y(i) = x(i)
   30 continue
      if( n .lt. 7 ) return
   40 mp1 = m + 1
      do 50 i = mp1,n,7
        y(i) = x(i)
        y(i + 1) = x(i + 1)
        y(i + 2) = x(i + 2)
        y(i + 3) = x(i + 3)
        y(i + 4) = x(i + 4)
        y(i + 5) = x(i + 5)
        y(i + 6) = x(i + 6)
   50 continue
      return
!
!        CODE FOR EQUAL, POSITIVE, NONUNIT INCREMENTS.
!
   60 continue
      ns = n*incx
          do 70 i=1,ns,incx
          y(i) = x(i)
   70     continue
      return
      end
