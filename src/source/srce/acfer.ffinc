!ACFER
     subroutine acfer(nmsub, n, lagmax, lacov, ldstak, ldsmin,&
     &  differ, nfac, nd, iod, isfft, lyfft, nfft)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE ERROR CHECKING ROUTINE FOR THE ACF FAMILY
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 2, 1985
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   lacov,lagmax,ldsmin,ldstak,lyfft,n,nfac,nfft
     logical&
     &   differ,isfft
!
!  ARRAY ARGUMENTS
     integer&
     &   iod(*),nd(*)
     character&
     &   nmsub(6)*1
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     integer&
     &   i
     logical&
     &   head
!
!  LOCAL ARRAYS
     logical&
     &   err(15)
     character&
    &   llacov(8)*1,llagmx(8)*1,llds(8)*1,llgmx1(8)*1,&
    &   llyfft(8)*1,ln(8)*1,lnfft(8)*1,lnm1(8)*1,lone(8)*1,&
     &   lthree(8)*1
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL EISGE,EISII,ERDF
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     LOGICAL DIFFER
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER THE CALLING
!        ROUTINE IS ACFD (DIFFER = TRUE) OR NOT (DIFFER = FALSE)
!     LOGICAL ERR(15)
!        VALUES INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     LOGICAL HEAD
!        A FLAG INDICATING WHETHER THE HEADING SHOULD BE PRINTED
!        (TRUE) OR NOT (FALSE).  IF A HEADING IS PRINTED, THE VALUE
!        OF HEAD WILL BE CHANGED TO FALSE.
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!     INTEGER IOD(NFAC)
!        THE ORDER OF EACH OF THE DIFFERENCE VACTORS
!     LOGICAL ISFFT
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER THE CALLING
!        ROUTINE HAS SUFFIX F (ISFFT = TRUE) OR NOT (ISFFT = FALSE)
!     INTEGER LACOV
!        THE LENGTH OF THE VECTOR ACOV.
!     INTEGER LAGMAX
!        THE MAXIMUM LAG VALUE REQUESTED.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     CHARACTER*1 LLACOV(8), LLAGMX(8), LLDS(8), LLGMX1(8), LLYFFT(8),
!    *  LN(8), LNFFT(8), LNM1(8), LONE(8), LTHREE(8)
!        THE ARRAY(S) CONTAINING THE NAME(S) OF INPUT PARAMETER(S)
!        CHECKED FOR ERRORS.
!     INTEGER LYFFT
!        THE LENGTH OF THE VECTOR YFFT.
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS IN EACH SERIES
!     INTEGER ND(NFAC)
!        THE ARRAY CONTAINING THE NUMBER OF TIMES THE DIFFERENCE FACTORS
!        ARE TO BE APPLIED
!     INTEGER NFAC
!        THE NUMBER OF FACTORS.
!     INTEGER NFFT
!        THE NUMBER OF OBSERVATIONS IN THE EXTENDED SERIES.
!     CHARACTER*1 NMSUB(6)
!        THE NAME OF THE SUBROUTINE CALLING THE ERROR CHECKING
!        SUBROUTINE.
!
!
!     SET UP NAME ARRAYS
!
     data&
    & llacov(1), llacov(2), llacov(3), llacov(4), llacov(5),&
     & llacov(6), llacov(7), llacov(8) /'L','A','C','O','V',' ',' ',' '/
     data&
    & llagmx(1), llagmx(2), llagmx(3), llagmx(4), llagmx(5),&
     & llagmx(6), llagmx(7), llagmx(8) /'L','A','G','M','A','X',' ',' '/
     data&
    & llds(1), llds(2), llds(3), llds(4), llds(5),&
     & llds(6), llds(7), llds(8) /'L','D','S','T','A','K',' ',' '/
     data&
    & llgmx1(1), llgmx1(2), llgmx1(3), llgmx1(4), llgmx1(5),&
     & llgmx1(6), llgmx1(7), llgmx1(8) /'L','A','G','M','A','X','+','1'/
     data&
    & llyfft(1), llyfft(2), llyfft(3), llyfft(4), llyfft(5),&
     & llyfft(6), llyfft(7), llyfft(8) /'L','Y','F','F','T',' ',' ',' '/
     data&
    & ln(1), ln(2), ln(3), ln(4), ln(5),&
     & ln(6), ln(7), ln(8) /'N',' ',' ',' ',' ',' ',' ',' '/
     data&
    & lnm1(1), lnm1(2), lnm1(3), lnm1(4), lnm1(5),&
     & lnm1(6), lnm1(7), lnm1(8) /'(','N','-','1',')',' ',' ',' '/
     data&
    & lnfft(1), lnfft(2), lnfft(3), lnfft(4), lnfft(5),&
     & lnfft(6), lnfft(7), lnfft(8) /'N','F','F','T',' ',' ',' ',' '/
     data&
    & lone(1), lone(2), lone(3), lone(4), lone(5),&
     & lone(6), lone(7), lone(8) /'O','N','E',' ',' ',' ',' ',' '/
     data&
    & lthree(1), lthree(2), lthree(3), lthree(4), lthree(5),&
     & lthree(6), lthree(7), lthree(8) /'T','H','R','E','E',' ',' ',' '/
!
!     SET UP FOR ERROR CHECKING
!
      ierr = 0
      head = .true.
      do 10 i = 1, 15
        err(i) = .false.
   10 continue
!
!     CALL ERROR CHECKING ROUTINES
!
      call eisge(nmsub, ln, n, 3, 2, head, err(1), lthree)
!
      if (.not.err(1)) then
!
       call eisii(nmsub, llagmx, lagmax, 1, n-1, 1, head, err(2), lone,&
     &    lnm1)
!
        if (differ) call erdf(nmsub, nfac, nd, iod, n, head, err(3))
!
        if (.not.err(2)) then
!
         call eisge(nmsub, llacov, lacov, lagmax+1, 2, head, err(4),&
     &      llgmx1)
!
          call eisge(nmsub, llds, ldstak, ldsmin, 9, head, err(5), llds)
!
         if (isfft)&
    &      call eisge(nmsub, llyfft, lyfft, nfft, 2, head, err(6),&
     &      lnfft)
        end if
      end if
!
      do 20 i = 1, 15
        if (err(i)) ierr = 1
   20 continue
!
      return
!
      end
