!PPMN
     subroutine ppmn (ym, ymmiss, x, xmiss, n, m, iym, ischck, isym,&
     &  lisym, isize, nout, ymn, ymx, xmn, xmx, miss, ilog)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE MAIN ROUTINE FOR PAGE PLOTS
!
!     WRITTEN BY  --
!                 JANET R. DONALDSON
!                 STATISTICAL ENGINEERING DIVISION/BOULDER
!                 NATIONAL BUREAU OF STANDARDS
!
!     CREATION DATE  -  NOVEMBER 21, 1980
!
!     INPUT ARGUMENTS - (IN ORDER OF USAGE)
!
!        X  THE N VECTOR OF OBSERVATIONS FOR THE X
!           COORDINATES
!       YM  THE N BY M MATRIX OF OBSERVATIONS FOR THE Y (VERTICAL)
!           COORDINATES
!           THE ITH COLUMN IS PLOTTED USING THE FOLLOWING SYMBOL
!               1 = A    2 = B    3 = C    4 = D
!               5 = E    6 = F    7 = G    8 = H
!               9 = I   10 = J   11 = K   12 = L
!              13 = M   14 = N   15 = O   16 = P
!              17 = Q   18 = R   19 = S   20 = T
!              21 = U   22 = V   23 = W   24 = Y
!              25 (AND ABOVE) = Z
!           THE NUMBERS 1 TO 9 INDICATE MULTIPLE POINTS ON A GIVEN
!           PLOT LOCATION, WHERE THE NUMBER INDICATES HOW MANY POINTS
!           ARE REPRESENTED
!           NOTE THAT  X  IS NOT USED AS A PLOTTING SYMBOL EXCEPT TO
!           INDICATE THAT MORE THAN 9 POINTS FELL ON THE SAME PLOT
!           LOCATION
!        N  THE INTEGER NUMBER OF OBSERVATIONS TO BE PLOTTED (IN EACH
!           COLUMN)
!        M  THE NUMBER OF COLUMNS IN THE YM ARRAY TO BE PLOTTED VERSUS X
!           FOR THE CASE OF A VECTOR YM, M MUST BE EQUAL TO 1
!    IYM  THE ACTUAL INTEGER VALUE OF THE ROW DIMENSION OF THE Y ARRAY
!           WHEN YM IS A VECTOR (M.EQ.1) IYM SHOULD BE SET EQUAL TO N
!   ISCHCK  THE INTEGER VALUE INDICATING HOW THE PLOTTING SYMBOLS
!           WILL BE DESIGNATED, WHERE
!           0 INDICATES THE PLOTTING SYMBOLS HAVE NOT BEEN DESIGNATED IN
!             THE N VECTOR ISYM AND ONLY THE SYMBOL + IS TO BE USED
!           1 INDICATES THE PLOTTING SYMBOLS HAVE BEEN DESIGNATED IN THE
!             N VECTOR ISYM
!           2 INDICATES THAT M SERIES ARE BEING PLOTTED.
!             SYMBOL I+4 WILL BE USED FOR COLUMN I OF YM.
!     ISYM  THE N VECTOR OF INTEGERS DETERMINING THE PLOTTING SYMBOLS TO
!           USED FOR THE S SERIES OF PLOTS, WHERE
!               1 = +    2 = .    3 = *    4 = -
!               5 = A    6 = B    7 = C    8 = D
!               9 = E   10 = F   11 = G   12 = H
!              13 = I   14 = J   15 = K   16 = L
!              17 = M   18 = N   19 = O   20 = P
!              21 = Q   22 = R   23 = S   24 = T
!              25 = U   26 = V   27 = W   28 = Y
!              29 (AND ABOVE) = Z
!           THE NUMBERS 1 TO 9 INDICATE MULTIPLE POINTS ON A GIVEN
!           PLOT LOCATION, WHERE THE NUMBER INDICATES HOW MANY POINTS
!           ARE REPRESENTED
!           NOTE THAT  X  IS NOT USED AS A PLOTTING SYMBOL EXCEPT TO
!           INDICATE THAT MORE THAN 9 POINTS FELL ON THE SAME PLOT
!           LOCATION
!    ISIZE  THE INTEGER CODE FOR THE PLOT SIZE, WHERE
!           0 INDICATES A PLOT 100 COL BY 50 ROWS
!           1 INDICATES A PLOT 50 COL BY  50 ROWS
!     NOUT  THE INTEGER VALUE INDICATING HOW MANY OF THE POINTS WHICH
!           FELL OUTSIDE OF THE GRAPH LIMITS ARE TO BE LISTED
!           IF XLB.EQ.XUB AND YLB.EQ.YUB, NOUT SHOULD BE SET TO ZERO
!     XLB  THE MINIMUM VALUE OF X TO BE PLOTTED(IE, THE LOWER BOUND FOR
!           THE X AXIS), WHERE IF XLB=XUB THE ROUTINE WILL DETERMINE
!           THIS VALUE FROM THE MINIMUM VALUE OF THE X VECTOR
!     XUB  THE MAXIMUM VALUE OF X TO BE PLOTTED(IE, THE UPPER BOUND FOR
!           THE X AXIS), WHERE IF XLB=XUB THE ROUTINE WILL DETERMINE
!           THIS VALUE FROM THE MAXIMUM VALUE OF THE X VECTOR
!     YLB  THE MINIMUM VALUE OF Y TO BE PLOTTED(IE, THE LOWER BOUND FOR
!           THE Y AXIS), WHERE IF YLB=YUB THE ROUTINE WILL DETERMINE
!           THIS VALUE FROM THE MINIMUM VALUE OF THE Y VECTOR
!     YUB  THE MAXIMUM VALUE OF Y TO BE PLOTTED(IE, THE UPPER BOUND FOR
!           THE Y AXIS), WHERE IF YLB=YUB THE ROUTINE WILL DETERMINE
!           THIS VALUE FROM THE MAXIMUM VALUE OF THE Y VECTOR
!     ILOG  THE INTEGER INDICATOR VARIABLE USED TO DETERMINE WHETHER
!           THE Y AXIS SCALE IS TO BE LOG OR NOT
!           IF ILOG.EQ.0, THE SCALE IS NOT LOG
!           IF ILOG.NE.0, THE SCALE IS LOG
!
!
!     ADDITIONAL VARIABLES USED - (IN ALPHABETICAL ORDER)
!
!    ALINE  THE VECTOR OF THE CURRENT PLOT LINE
!   ALPHAI  THE PLOT AXIS SYMBOL I
!   AXISCH  THE Y A AXIS SYMBOL TO BE USED FOR THE CURRENT LINE,
!           EITHER I OR -
!   ALPHAX  THE PLOTTING SYMBOL X DESIGNATING MORE THAN 9 POINTS FELL ON
!           A SINGLE PLOTTING LOCATION
!    BLANK  THE PLOTTING SYMBOL BLANK
!     DELX  THE RANGE OF THE X AXIS
!     DELY  THE RANGE OF THE Y AXIS
!   HYPHEN  THE PLOT AXIS SYMBOL -
!       IC  THE COUNT OF THE NUMBER OF VALUES FALLING OUTSIDE OF THE
!           GRAPH BOUNDS
!     ICOL  THE COLUMN LOCATION FOR THE PLOT LINE
!     IOUT  THE MINIMUM OF NOUT OR 50, INDICATING HOW MANY OF THE
!           POINTS WHICH FELL OUTSIDE OF THE GRAPH LIMITS WILL ACTUALLY
!           BE LISTED
!   IPCODE  THE INTEGER CODE, USED IN ERROR CHECKING, WHICH DETERMINES
!           WHICH PLOT ROUTINE HAS BEEN CALLED
!      IPR  THE UNIT NUMBER OF THE PRINTER
!    ITEST  THE INDICATOR VARIABLE FOR WHETHER THE X AXIS LABELS ARE
!           PRINTED IN E OR F FORMAT
!      KSS  AN INTEGER VECTOR USED IN DETERMINING THE PLOT SYMBOL
!           NEEDED
!       NN  THE NUMBER OF Y LABELS TO BE LISTED ON THE LEFT AXIS,
!           (DEPENDENT ON THE GRAPH SIZE)
!   NUMCOL  THE INTEGER VALUE OF THE NUMBER OF COLUMNS IN THE GRAPH
!   NUMLAB  THE INTEGER NUMBER OF X LABELS TO BE LISTED AT THE BOTTOM
!           OF THE GRAPH (DEPENDENT ON GRAPH SIZE)
!   NUMROW  THE INTEGER NUMBER OF ROWS IN THE GRAPH
!      SYM  THE VECTOR OF PLOT SYMBOL ASSIGNMENTS (SEE IS ABOVE)
!     SYM1  THE VECTOR OF INTEGER VALUES USED TO INDICATE MULTIPLE
!           POINTS ON THE SAME PLOT LOCATION
!     TEMP  THE ARRAY OF VALUES TO BE PRINTED WHICH FALL OUTSIDE THE
!           GRAPH LIMITS
!   XLABEL  THE VECTOR OF X AXIS LABELS
!       XMN  THE MINIMUM X VALUE TO BE PLOTTED, COMPUTED FROM DATA OR
!           ASSIGNED BY XLB
!   XWIDTH  THE VALUE OF AN INDIVIDUAL X AXIS GRAPH INTERVAL
!       XMX  THE MAXIMUM X VALUE TO BE PLOTTED, COMPUTED FROM DATA OR
!           ASSIGNED BY XUB
!   YLABEL  THE VALUE OF THE Y AXIS LABEL TO BE PRINTED
!   YLOWER  THE LOWER BOUND FOR Y VALUES TO BE PLOTTED ON THE CURRENT
!           LINE
!       YMN  THE MINIMUM Y VALUE TO BE PLOTTED, COMPUTED FROM DATA OR
!           ASSIGNED BY YLB
!   YUPPER  THE UPPER BOUND FOR Y VALUES TO BE PLOTTED ON THE CURRENT
!           LINE
!   YWIDTH  THE VALUE OF AN INDIVIDUAL Y AXIS GRAPH INTERVAL
!       YMX  THE MAXIMUM Y VALUE TO BE PLOTTED, COMPUTED FROM DATA OR
!           ASSIGNED BY YUB
!
!!SUBROUTINE PPMN (YM(IYM,M),YMMISS(M),X(N),xmiss,n,m,iym,ischck,ISYM(LISYM),lisym,isize,nout,ymn,ymx,xmn,xmx,_miss,ilog)
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      real(kind=wp) :: xmiss,xmn,xmx,ymn,ymx
      integer :: ilog,ischck,isize,iym,lisym,m,n,nout
      logical :: miss
!
!  ARRAY ARGUMENTS
      real(kind=wp) :: x(n),ym(iym,m),ymmiss(m)
      integer isym(lisym)
!
!  SCALARS IN COMMON
      integer ierr
!
!  LOCAL SCALARS
     real(kind=wp) ::&
    &   delx,dely,tn,tx,xdmn,xdmx,xwidth,xx,ydmn,ydmx,yl,ylower,&
     &   yupper,ywidth,yy
     integer&
    &   i,ic,icol,ik,ilogx,ilogy,iout,iprt,irow,it,itest,j,jcol,k,&
     &   l,nlablx,nlably,nlu,nn,numcol,numcp2,numrow
     character&
    &   alphai*1,alphax*1,axisch*1,blank*1,hyphen*1,fmt*4,&
     &   xlfmt*205,xlfmt2*205
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   temp(50,2),xlabel(20),ylabel(20)
     integer&
     &   aline(105),ilogxy(2),isizxy(2),ispace(20),kss(101)
     character&
     &   cline(105)*1,itemp(50)*1,sym(30)*1,sym1(9)*1
!
!  EXTERNAL FUNCTIONS
!      LOGICAL
!     +   MVCHK
!      EXTERNAL MVCHK
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL IPRINT,LOGLMT,PRTCNT
!
!  INTRINSIC FUNCTIONS
      intrinsic abs,log10,max,min
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     INTEGER ALINE(105)
!     CHARACTER*1 ALPHAI, ALPHAX
!     CHARACTER*1 AXISCH
!     CHARACTER*1 BLANK
!     CHARACTER*1 CLINE(105)
!     REAL(KIND=WP) :: DELX, DELY
!     CHARACTER FMT*4
!        THE FORMAT FOR THE X-AXIS LABELS
!     CHARACTER*1 HYPHEN
!     INTEGER I, IC, ICOL, IERR, IK
!     INTEGER ILOG
!        THE TWO DIGIT INTEGER, PQ, USED TO SELECT AXIS SCALE, WHERE
!        P DESIGNATES THE X-AXIS AND Q DESIGNATES THE Y-AXIS.
!        IF P.EQ.0 (Q.EQ.0), THEN THE X-AXIS (Y-AXIS) IS LINEAR.
!        IF P.NE.0 (Q.NE.0), THEN THE X-AXIS (Y-AXIS) IS LOG.
!     INTEGER ILOGX
!        THE VALUES OF P AS SPECIFIED BY ILOG.
!     INTEGER ILOGXY(2)
!        THE VALUES OF P AND Q AS SPECIFIED BY ILOG.
!     INTEGER ILOGY
!        THE VALUES OF Q AS SPECIFIED BY ILOG.
!     INTEGER IOUT
!     INTEGER IPRT, IROW
!     INTEGER ISCHCK
!        THE INTEGER VALUE INDICATING HOW THE PLOTTING SYMBOLS
!           WILL BE DESIGNATED, WHERE
!           0 INDICATES THE PLOTTING SYMBOLS HAVE NOT BEEN DESIGNATED IN
!             THE N VECTOR ISYM AND ONLY THE SYMBOL + IS TO BE USED
!           1 INDICATES THE PLOTTING SYMBOLS HAVE BEEN DESIGNATED IN THE
!             N VECTOR ISYM
!           2 INDICATES THAT M SERIES ARE BEING PLOTTED.
!             SYMBOL I+4 WILL BE USED FOR COLUMN I OF YM.
!     INTEGER ISIZE
!        THE TWO DIGIT INTEGER, PQ, USED TO SELECT AXIS SIZE, WHERE
!        P DESIGNATES THE X-AXIS AND Q DESIGNATES THE Y-AXIS.
!        IF P.EQ.0 (Q.EQ.0), THEN THE X-AXIS (Y-AXIS) IS THE MAXIMUM.
!        IF P.NE.0 (Q.NE.0), THEN THE X-AXIS (Y-AXIS) IS HALF THE MAXIMU
!     INTEGER ISIZXY(2)
!     INTEGER ISPACE(20)
!        THE SPACING FOR THE X-AXIS LABELS
!     INTEGER ISYM(LISYM)
!     INTEGER IT
!     CHARACTER*1 ITEMP(50)
!     INTEGER ITEST
!     INTEGER IYM
!     INTEGER J, JCOL
!     INTEGER K
!     INTEGER KSS(101)
!     INTEGER L
!     INTEGER LISYM
!     INTEGER M
!     LOGICAL MISS
!     INTEGER N
!     INTEGER NLABLX, NLABLY, NLU
!     INTEGER NN, NOUT, NUMCOL, NUMCP2, NUMROW
!     CHARACTER*1 SYM(30), SYM1(9)
!     REAL(KIND=WP) :: TEMP(50, 2)
!     REAL(KIND=WP) :: TN, TX
!     REAL(KIND=WP) :: X(N)
!     REAL(KIND=WP) :: XDMN, XDMX
!        THE X-AXIS DATA LIMITS ACTUALLY USED.
!     REAL(KIND=WP) :: XLABEL(20)
!        THE X-AXIS LABLES.
!     CHARACTER XLFMT*205, XLFMT2*205
!        THE FORMATS USED TO PRINT THE X-AXIS
!     REAL(KIND=WP) :: XMISS, XMN, XMX, XWIDTH, XX
!     REAL(KIND=WP) :: YDMN, YDMX
!        THE Y-AXIS DATA LIMITS ACTUALLY USED.
!     REAL(KIND=WP) :: YL
!     REAL(KIND=WP) :: YLABEL(20)
!        THE Y-AXIS LABLES.
!     REAL(KIND=WP) :: YLOWER
!     REAL(KIND=WP) :: YM(IYM, M)
!     REAL(KIND=WP) :: YMMISS(M)
!     REAL(KIND=WP) :: YMN, YMX, YUPPER, YWIDTH, YY
!
      data blank/' '/,hyphen/'-'/,alphai/'I'/,alphax/'X'/
     data sym( 1)/'+'/,sym( 2)/'.'/,sym( 3)/'*'/,sym( 4)/'-'/,&
    &     sym( 5)/'A'/,sym( 6)/'B'/,sym( 7)/'C'/,sym( 8)/'D'/,&
    &     sym( 9)/'E'/,sym(10)/'F'/,sym(11)/'G'/,sym(12)/'H'/,&
    &     sym(13)/'I'/,sym(14)/'J'/,sym(15)/'K'/,sym(16)/'L'/,&
    &     sym(17)/'M'/,sym(18)/'N'/,sym(19)/'O'/,sym(20)/'P'/,&
    &     sym(21)/'Q'/,sym(22)/'R'/,sym(23)/'S'/,sym(24)/'T'/,&
    &     sym(25)/'U'/,sym(26)/'V'/,sym(27)/'W'/,sym(28)/'Y'/,&
     &     sym(29)/'Z'/,sym(30)/'Z'/
     data sym1(1)/'1'/,sym1(2)/'2'/,sym1(3)/'3'/,sym1(4)/'4'/,&
    &     sym1(5)/'5'/,sym1(6)/'6'/,sym1(7)/'7'/,sym1(8)/'8'/,&
     &     sym1(9)/'9'/
!
      call iprint(iprt)
!
!     DEFINE THE NUMBER OF ROWS AND COLUMNS WITHIN THE PLOT
!
      call prtcnt(max(0,isize),2,isizxy)
      if (isizxy(1).eq.0) then
        numcol=101
      else
        numcol = 51
      end if
      if (isizxy(2).eq.0) then
        numrow = 51
      else
        numrow = 26
      end if
!
      numcp2 = numcol + 2
      nn=(numrow-1)/5
!
!     ADJUST FOR LOG PLOTS IF NECESSARY AND FIND AXIS LABELS
!
      call prtcnt (max(0,ilog),2,ilogxy)
      ilogx = ilogxy(1)
      ilogy = ilogxy(2)
     call loglmt (ilogy, ymn, ymx, ylabel, numrow, 5, dely, ywidth,&
     &  nlably, ydmn, ydmx)
     call loglmt (ilogx, xmn, xmx, xlabel, numcol, 10, delx, xwidth,&
     &  nlablx, xdmn, xdmx)
!
!     TEST FOR FORMAT FOR Y AXIS LABELS
!
      itest=0
      tx=ymx
      tn=ymn
      if (ilogy.eq.0) go to 190
      tx=10.0_wp**tx
      tn=10.0_wp**tn
 190 if ((tn .ge. 1.0e6_wp .or. tn .le. (-1.0e5_wp)) .or.&
     &   (abs(tn).gt.0.0_wp.and.abs(tn).lt.0.001_wp)) itest=1
     if ((tx .ge. 1.0e6_wp .or. tx .le. (-1.0e5_wp)) .or.&
     &   (abs(tx).gt.0.0_wp.and.abs(tx).lt.0.001_wp)) itest=1
!
!     BLANK OUT THE PLOT PRINT LINE CLINE
!
      do 200 icol=1,105
         cline(icol)=blank
  200 continue
!
!     WRITE OUT THE TOP HORIZONTAL AXIS OF THE PLOT
!
      do 210 icol=1,numcol
         cline(icol)=hyphen
  210 continue
      cline(1)=alphai
      if (ilogx.eq.0) then
        do 215 icol=11,numcol,10
           cline(icol)=alphai
  215   continue
      else
        do 216 ik = nlablx, 1, -1
          icol = ((log10(xlabel(ik))-xmn)/xwidth)+1.5_wp
          cline(icol) = alphai
  216   continue
      end if
      cline(numcol+1)=hyphen
      cline(numcol+2)=blank
      write (iprt, 1004) hyphen,(cline(i),i=1,numcol),hyphen
      do 217 icol=1,105
         cline(icol)=blank
  217 continue
!
!     DETERMINE AND WRITE OUT THE PLOT POSITIONS ONE LINE AT A TIME.
!
      l=-1
      ik=1
      do 320 irow=1,numrow
         l=l+1
         if (l.gt.nn) l=1
         do 235 icol=1,numcol
            aline(icol)=0
            kss(icol)=0
  235    continue
         yupper=ymx+(1.5_wp-irow)*ywidth
         ylower=ymx+(0.5_wp-irow)*ywidth
      do 255 i = 1, n
!
         if (miss .and. mvchk(x(i), xmiss)) go to 255
!
         if (ilogx.eq.0) then
           xx=x(i)
         else
           xx=log10(x(i))
         end if
         do 250 j=1,m
!
            if (miss .and. mvchk(ym(i,j), ymmiss(j))) go to 250
               if (ilogy.eq.0) then
                 yy=ym(i,j)
               else
                 yy=log10(ym(i,j))
               end if
              if (((ylower.le.yy).and.(yy.lt.yupper)) .and.&
     &             ((yy.ge.ydmn).and.(yy.le.ydmx))) then
                  if ((xx.ge.xdmn) .and. (xx.le.xdmx)) then
                     icol=((xx-xmn)/xwidth)+1.5_wp
                     aline(icol) = aline(icol) + 1
!     SIMPLE PLOTTING (PLT)
                     kss(icol)=1
!     SYMBOL PLOTS (SPLT)
                     if (ischck .eq. 1) kss(icol) = isym(i)
!     MULTIPLE PLOTS (MPLT)
                     if (ischck .eq. 2) kss(icol) = j + 4
                     if (kss(icol).gt.30) kss(icol)=30
                     if (kss(icol).lt.1) kss(icol)=1
                  end if
               end if
  250       continue
  255    continue
         do 290 icol=1,numcol
            if (aline(icol).eq.0) then
              cline(icol)=blank
            else
              if (aline(icol).eq.1) then
                k=kss(icol)
                cline(icol)=sym(k)
              else
                if (aline(icol).le.9) then
                  cline(icol)=sym1(aline(icol))
                else
                  cline(icol)=alphax
                end if
              end if
            end if
  290    continue
         cline(numcol+2)=hyphen
         axisch=hyphen
         if (ilogy.eq.0) then
           yl = ylabel(ik)
         else
           yl = log10(ylabel(ik))
         end if
         if ((ylower.gt.yl) .or. (yl.ge.yupper)) then
!
!          PRINT LINE WITHOUT LABEL
!
           cline(numcp2)=alphai
           write(iprt, 1008) alphai, (cline(icol), icol=1,numcp2)
         else
!
!          PRINT LINE WITH LABEL
!
           if (itest.eq.0) then
            write(iprt,1006) ylabel(ik),axisch,&
     &         (cline(icol),icol=1,numcp2)
           else
            write(iprt,1007) ylabel(ik),axisch,&
     &         (cline(icol),icol=1,numcp2)
           end if
           ik=ik+1
         end if
  320 continue
!
!     WRITE OUT THE BOTTOM HORIZONTAL AXIS AND THE X AXIS LABELS.
!
      do 330 icol=1,numcol
         cline(icol)=hyphen
  330 continue
      cline(1)=alphai
      if (ilogx.eq.0) then
        nlu = nlablx+1
        do 340 icol=numcol,1,-10
           cline(icol)=alphai
           nlu = nlu - 1
           ispace(nlu) = 1
  340   continue
      else
        jcol = 1
        cline(jcol) = alphai
        nlu = nlablx
        do 345 ik = nlablx, 1, -1
          icol = ((log10(xlabel(ik))-xmn)/xwidth)+1.5
          cline(icol) = alphai
          if (icol-jcol.ge.10) then
            ispace(nlu) = icol-jcol-9
            nlu = nlu - 1
            xlabel(nlu) = xlabel(ik)
            jcol = icol
          end if
  345   continue
      end if
      cline(numcol+1)=hyphen
      cline(numcol+2)=blank
!
      write(iprt, 1004) hyphen, (cline(icol), icol = 1, numcp2)
!
!     CHECK X-AXIS LABELS FOR FORMAT
!
      fmt = 'F9.4'
      do 350 i=1,nlablx
       if (((abs(xlabel(i)).gt.0.0_wp) .and.&
    &     (abs(xlabel(i)).lt.0.01_wp))&
    &     .or.&
    &     ((xlabel(i).ge.1.0e4_wp) .or. (xlabel(i).le.(-1.0e3_wp))))&
     &     then
          fmt = 'E9.4'
           go to 355
         end if
  350 continue
  355 continue
      write(xlfmt2,1000) nlablx-nlu
      write(xlfmt,xlfmt2) (fmt, ispace(i), i=nlablx,nlu+1,-1), fmt
      write(iprt, xlfmt) (xlabel(i),i=nlablx,nlu,-1)
!
!     DETERMINE VALUES TO BE LISTED IF OUTSIDE OF AXIS LIMITS.
!
      ic = 0
      iout = min(nout,50)
      if (iout.ge.0) then
        do 180 i = 1, n
!
          if (miss .and. mvchk(x(i), xmiss)) go to 180
!
          if (ilogx.eq.0) then
            xx = x(i)
          else
            xx = log10(x(i))
          end if
           do 175 j=1,m
!
              if (miss .and. mvchk(ym(i,j), ymmiss(j))) go to 175
!
              if (ilogy.eq.0) then
                yy = ym(i,j)
              else
                yy = log10(ym(i,j))
              end if
!
             if (((ydmn .le. yy) .and. (yy .le. ydmx)) .and.&
     &            ((xdmn .le. xx) .and. (xx .le. xdmx))) go to 175
!
              ic=ic+1
              if (ic.gt.iout) go to 175
              temp(ic,1)=x(i)
              temp(ic,2)=ym(i,j)
              it=1
              if (ischck.eq.1) it=isym(i)
              if (ischck.eq.2) it=j+4
              if (it.lt.1) it=1
              if (it.gt.30) it=30
              itemp(ic) = sym(it)
  175      continue
  180   continue
      end if
!
!     CHECK FOR POINTS OUTSIDE OF GRAPH LIMITS AND LIST IF REQUESTED
!     THE TOTAL NUMBER OF POINTS TO BE PLOTTED IS N*M
!
      if (ic.eq.0) return
      if (iout .lt. 0) return
      write (iprt, 1010) ic
      if (iout.le.0) return
      write (iprt, 1016)
      if (ic.le.iout) go to 360
      ic=iout
      write(iprt, 1011) iout
      go to 370
  360 write(iprt, 1012)
  370 write(iprt, 1013) (temp(i,1), temp(i,2), itemp(i), i = 1, ic)
      return
!
!     FORMAT STATEMENTS
!
1000 format ('(''(14X'',', i2, '('', '', A4, '','', I2, ''X''),',&
     &  ''', '', A4, '')'')')
 1004 format (' ',16x, a1, 105a1)
 1006 format(4x,f11.4,1x,a1,1x,105a1)
 1007 format (' ', e14.7, 1x, a1, 1x, 105a1)
 1008 format (' ', 15x, a1, 1x, 105a1)
1010 format(16x,6h**note,i4,43h values fell outside the specified limit&
     &s**)
1011 format ('1', 15x, 10hthe first , i3,&
    &   35h values outside the plot limits are/ 22x,&
     & 33h x               y            sym)
1012 format ('1', 15x, 38hthe values outside the plot limits are/ 22x,&
     & 33h x               y            sym)
 1013 format (15x,2e15.8,9x,a1)
 1016 format (16x, 22hsee next page for list)
!
      end
