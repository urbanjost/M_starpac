!BFSER
     subroutine bfser(nmsub, n, lagmax, iccov, jccov, inlppc, jnlppc,&
    &   m, index1, index2, icspc2, iphas, nf, nw, lags,&
     &   ldstak, ldsmin, lyfft, nfft, option)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE ERROR CHECKING ROUTINE FOR THE TIME SERIES
!     FOURIER UNIVARIATE SPECTRUM ANALYSIS ROUTINES.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 2, 1985
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
    &   iccov,icspc2,index1,index2,inlppc,iphas,jccov,jnlppc,&
     &   lagmax,ldsmin,ldstak,lyfft,m,n,nf,nfft,nw
!
!  ARRAY ARGUMENTS
     integer&
     &   lags(*)
     logical&
     &   option(4)
     character&
     &   nmsub(6)*1
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     integer&
     &   i,nv
     logical&
     &   head
!
!  LOCAL ARRAYS
     logical&
     &   error(30)
     character&
    &   l1(8)*1,liccov(8)*1,licspc(8)*1,lindx1(8)*1,lindx2(8)*1,&
    &   linlpp(8)*1,liphas(8)*1,ljccov(8)*1,ljnlpp(8)*1,&
    &   llagmx(8)*1,llags(8)*1,llds(8)*1,llgmx1(8)*1,&
     &   llyfft(8)*1,lm(8)*1,ln(8)*1,lnf(8)*1,lnm1(8)*1,lnw(8)*1
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL EISGE,EISII,EISLE,EIVII
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     LOGICAL ERROR(30)
!        VALUE(S) INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     LOGICAL HEAD
!        A FLAG INDICATING WHETHER THE HEADING SHOULD BE PRINTED
!        (TRUE) OR NOT (FALSE).  IF A HEADING IS PRINTED, THE VALUE
!        OF HEAD WILL BE CHANGED TO FALSE.
!     INTEGER I
!        AN INDEX VALUE.
!     INTEGER ICCOV
!        THE FIRST DIMENSION OF THE ARRAY CCOV.
!     INTEGER ICSPC2
!        THE FIRST DIMENSION OF THE ARRAY CSPC2.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF ERR01, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER INDEX1, INDEX2
!        THE INDICES OF THE COVARIANCES OF THE TWO SERIES.
!     INTEGER INLPPC
!        THE FIRST DIMENSION OF THE ARRAY NLPPC.
!     INTEGER IPHAS
!        THE FIRST DIMENSION OF THE ARRAY PHAS.
!     INTEGER JCCOV
!        THE FIRST DIMENSION OF THE ARRAY CCOV.
!     INTEGER JNLPPC
!        THE FIRST DIMENSION OF THE ARRAY NLPPC.
!     INTEGER LAGMAX
!        THE MAXIMUM LAG VALUE TO BE USED.
!     INTEGER LAGS(NW)
!        THE ARRAY USED TO SPECIFY THE LAG WINDOW TRUNCATION
!        POINTS USED FOR EACH SET OF SPECTRUM VALUES.
!     INTEGER LDSTAK
!        THE LENGTH OF THE VECTOR DSTAK IN COMMON CSTAK.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR DSTAK.
!     CHARACTER*1 LICCOV(8), LICSPC(8), LINDX1(8),
!    *   LINDX2(8), LINLPP(8), LIPHAS(8), LJCCOV(8), LJNLPP(8),
!    *   LLAGMX(8), LLAGS(8), LLDS(8), LLGMX1(8), LLYFFT(8), LM(8),
!    *   LN(8), LNF(8), LNM1(8), LNW(8), L1(8)
!        THE ARRAY(S) CONTAINING THE NAME(S) OF THE ARGUMENT(S)
!        CHECKED FOR ERRORS.
!     INTEGER LYFFT
!        THE LENGTH OF VECTOR YFFT.
!     INTEGER M
!        THE NUMBER OF SERIES FOR WHICH THE COVARIANCES WERE
!        COMPUTED
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS IN THE SERIES.
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES AT WHICH THE SPECTRUM IS
!        TO BE COMPUTED.
!     INTEGER NFFT
!        THE NUMBER OF OBSERVATIONS IN THE EXTENDED SERIES.
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THE USER CALLED SUBROUTINE.
!     INTEGER NV
!        THE NUMBER OF VIOLATIONS FOUND WHEN CHECKING VECTOR LAGS.
!     INTEGER NW
!        THE ARGUMENT USED TO DETERMINE THE NUMBER OF DIFFERENT
!        BANDWIDTHS TO BE USED.
!     LOGICAL OPTION(4)
!        AN INDICATOR ARRAY USED TO DESIGNATE WHETHER ANY OF THE
!        FOUR POSSIBLE OPTIONS (F, M, V, OR S) HAVE BEEN USED (TRUE)
!        OR NOT (FALSE).
!
!     SET UP NAME ARRAYS
!
     data liccov(1), liccov(2), liccov(3), liccov(4), liccov(5),&
    &   liccov(6), liccov(7), liccov(8) /'I','C','C','O','V',' ',' ',&
     &   ' '/
     data licspc(1), licspc(2), licspc(3), licspc(4), licspc(5),&
    &   licspc(6), licspc(7), licspc(8) /'I','C','S','P','C','2',' ',&
     &   ' '/
     data lindx1(1), lindx1(2), lindx1(3), lindx1(4), lindx1(5),&
    &   lindx1(6), lindx1(7), lindx1(8) /'I','N','D','E','X','1',' ',&
     &   ' '/
     data lindx2(1), lindx2(2), lindx2(3), lindx2(4), lindx2(5),&
    &   lindx2(6), lindx2(7), lindx2(8) /'I','N','D','E','X','2',' ',&
     &   ' '/
     data liphas(1), liphas(2), liphas(3), liphas(4), liphas(5),&
    &   liphas(6), liphas(7), liphas(8) /'I','P','H','A','S',' ',' ',&
     &   ' '/
     data linlpp(1), linlpp(2), linlpp(3), linlpp(4), linlpp(5),&
    &   linlpp(6), linlpp(7), linlpp(8) /'I','N','L','P','P','C',' ',&
     &   ' '/
     data ljccov(1), ljccov(2), ljccov(3), ljccov(4), ljccov(5),&
    &   ljccov(6), ljccov(7), ljccov(8) /'J','C','C','O','V',' ',' ',&
     &   ' '/
     data ljnlpp(1), ljnlpp(2), ljnlpp(3), ljnlpp(4), ljnlpp(5),&
    &   ljnlpp(6), ljnlpp(7), ljnlpp(8) /'J','N','L','P','P','C',' ',&
     &   ' '/
     data llagmx(1), llagmx(2), llagmx(3), llagmx(4), llagmx(5),&
    &   llagmx(6), llagmx(7), llagmx(8) /'L','A','G','M','A','X',' ',&
     &   ' '/
     data llags(1), llags(2), llags(3), llags(4), llags(5), llags(6),&
     &   llags(7), llags(8) /'L','A','G','S',' ',' ',' ',' '/
     data llgmx1(1), llgmx1(2), llgmx1(3), llgmx1(4), llgmx1(5),&
    &   llgmx1(6), llgmx1(7), llgmx1(8) /'L','A','G','M','A','X','+',&
     &   '1'/
     data llds(1), llds(2), llds(3), llds(4), llds(5), llds(6),&
     &   llds(7), llds(8) /'L','D','S','T','A','K',' ',' '/
     data ln(1), ln(2), ln(3), ln(4), ln(5), ln(6), ln(7), ln(8) /'N',&
     &   ' ',' ',' ',' ',' ',' ',' '/
     data lm(1), lm(2), lm(3), lm(4), lm(5), lm(6), lm(7), lm(8) /'M',&
     &   ' ',' ',' ',' ',' ',' ',' '/
     data lnf(1), lnf(2), lnf(3), lnf(4), lnf(5), lnf(6), lnf(7),&
     &   lnf(8) /'N','F',' ',' ',' ',' ',' ',' '/
     data lnm1(1), lnm1(2), lnm1(3), lnm1(4), lnm1(5), lnm1(6),&
     &   lnm1(7), lnm1(8) /'N','-','1',' ',' ',' ',' ',' '/
     data lnw(1), lnw(2), lnw(3), lnw(4), lnw(5), lnw(6), lnw(7),&
     &   lnw(8) /'N','W',' ',' ',' ',' ',' ',' '/
     data llyfft(1), llyfft(2), llyfft(3), llyfft(4), llyfft(5),&
    &   llyfft(6), llyfft(7), llyfft(8) /'L','Y','F','F','T',' ',' ',&
     &   ' '/
     data l1(1), l1(2), l1(3), l1(4), l1(5), l1(6), l1(7), l1(8) /'1',&
     &   ' ',' ',' ',' ',' ',' ',' '/
!
!     SET UP FOR ERROR CHECKING
!
      ierr = 0
      head = .true.
!
      do 10 i=1,30
         error(i) = .false.
   10 continue
!
!     CALL ERROR CHECKING ROUTINES
!
      call eisge(nmsub, ln, n, 17, 1, head, error(1), ln)
!
      if ((.not.option(3))) go to 20
!
     call eisii(nmsub, llagmx, lagmax, 1, n-1, 1, head, error(2), l1,&
     &   lnm1)
!
      call eisge(nmsub, lm, m, 2, 1, head, error(3), lm)
!
     call eisge(nmsub, liccov, iccov, lagmax+1, 3, head, error(4),&
     &   llgmx1)
!
      call eisge(nmsub, ljccov, jccov, m, 4, head, error(5), lm)
!
      if (option(2)) then
       call eisge(nmsub, linlpp, inlppc, lagmax+1, 3, head, error(6),&
     &     llgmx1)
!
        call eisge(nmsub, ljnlpp, jnlppc, m, 4, head, error(7), lm)
      end if
!
      call eisle(nmsub, lindx1, index1, m, 2, head, error(8), lm)
!
      call eisle(nmsub, lindx2, index2, m, 2, head, error(9), lm)
!
   20 call eisge(nmsub, llyfft, lyfft, nfft, 9, head, error(10), llyfft)
!
     if (option(1) .and. (.not.option(4))) call eisge(nmsub, llds,&
     &   ldstak, ldsmin, 9, head, error(15), llds)
!
      if (option(4)) go to 40
!
      do 30 i=1,15
         if (error(i)) go to 70
   30 continue
!
      return
!
   40 continue
!
      call eisge(nmsub, lnf, nf, 1, 1, head, error(16), lnf)
!
      call eisge(nmsub, lnw, nw, 1, 1, head, error(18), lnw)
!
      if (error(18)) go to 50
      if (option(3)) then
        call eivii(nmsub, llags, lags, nw, 1, lagmax, 0,&
     &      head, 4, nv, error(19), l1, llagmx)
      else
        call eivii(nmsub, llags, lags, nw, 1, n-1, 0,&
     &      head, 4, nv, error(19), l1, lnm1)
      end if
!
   50 continue
!
      call eisge(nmsub, licspc, icspc2, nf, 3, head, error(24), lnf)
!
      call eisge(nmsub, liphas, iphas, nf, 3, head, error(25), lnf)
!
     if (error(2) .or. error(16) .or. error(18) .or. error(19)) go to&
     &   70
!
      call eisge(nmsub, llds, ldstak, ldsmin, 9, head, error(30), llds)
!
      do 60 i=1,30
         if (error(i)) go to 70
   60 continue
!
      return
!
   70 continue
      ierr = 1
      return
!
      end
