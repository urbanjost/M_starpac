!FACTOR
      SUBROUTINE FACTOR(N, NPF, IPF, IPFEXP)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE FACTORS AN INPUT INTEGER   N   AND RETURNS
!     THE NUMBER OF PRIME FACTORS IN   NPF   , THE VALUE OF THE
!     PRIME FACTORS IN THE VECTOR   IPF   , AND THE EXPONENT
!     OF EACH OF THE PRIME FACTORS IN THE VECTOR   IPFEXP   .
!     THE ELEMENTS OF    IPF   ARE STORED IN INCREASING ORDER.
!     THE LENGTH OF THE VECTORS IS SUFFICIENT TO ACCOMODATE
!     THE PRIME FACTORS OF AN INTEGER UP TO 2 ** 128 (APPROXIMATELY
!     10 ** 40).
!
!     THIS ROUTINE IS ADAPTED FROM THE FACTORING ROUTINE GIVEN
!     IN ACM ALGORITHM 467 (CACM, 1973, VOL. 16, NO. 11, PAGE 692-694).
!
!     ADAPTED BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  OCTOBER 23, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      INTEGER
     +   N,NPF
!
!  ARRAY ARGUMENTS
      INTEGER
     +   IPF(50),IPFEXP(50)
!
!  LOCAL SCALARS
      INTEGER
     +   IDIV,IFCUR,IQUOT,NPART
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     INTEGER IDIV, IFCUR
!        VARIOUS VARIABLES USED TO FACTOR    N   .
!     INTEGER IPF(50), IPFEXP(50)
!        THE VECTORS OF PRIME FACTORS OF   N   , AND THEIR EXPONENTS,
!        RESPECTIVELY.
!     INTEGER IQUOT
!        A VARIABLE USED TO FACTOR   N   .
!     INTEGER N
!        THE VALUE TO BE FACTORED.
!     INTEGER NPART
!        A VARIABLE USED TO FACTOR   N   .
!     INTEGER NPF
!        THE NUMBER OF FACTORS FOUND IN    N   .
!
!  DETERMINE THE FACTORS OF N
!
      NPF = 0
      IFCUR = 0
      NPART = N
      IDIV = 2
   10 IQUOT = NPART/IDIV
      IF (NPART.NE.IDIV*IQUOT) GO TO 40
      IF (IDIV.LE.IFCUR) GO TO 20
      NPF = NPF + 1
      IPF(NPF) = IDIV
      IFCUR = IDIV
      IPFEXP(NPF) = 1
      GO TO 30
   20 IPFEXP(NPF) = IPFEXP(NPF) + 1
   30 NPART = IQUOT
      GO TO 10
   40 IF (IQUOT.LE.IDIV) GO TO 60
      IF (IDIV.GE.3) GO TO 50
      IDIV = 3
      GO TO 10
   50 IDIV = IDIV + 2
      GO TO 10
   60 IF (NPART.LE.1) RETURN
      IF (NPART.LE.IFCUR) GO TO 70
      NPF = NPF + 1
      IPF(NPF) = NPART
      IPFEXP(NPF) = 1
      RETURN
   70 IPFEXP(NPF) = IPFEXP(NPF) + 1
!
      RETURN
      END
