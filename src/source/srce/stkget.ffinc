!STKGET
      integer function stkget(nitems, itype)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!  ALLOCATES SPACE OUT OF THE INTEGER ARRAY ISTAK (IN COMMON
!  BLOCK CSTAK) FOR AN ARRAY OF LENGTH NITEMS AND OF TYPE
!  DETERMINED BY ITYPE AS FOLLOWS
!
!    1 - LOGICAL
!    2 - INTEGER
!    3 - REAL
!    4 - DOUBLE PRECISION
!    5 - COMPLEX
!
!  ON RETURN, THE ARRAY WILL OCCUPY
!
!    STAK(STKGET), STAK(STKGET+1), ..., STAK(STKGET-NITEMS+1)
!
!  WHERE STAK IS AN ARRAY OF TYPE ITYPE EQUIVALENCED TO ISTAK.
!
!  (FOR THOSE WANTING TO MAKE MACHINE DEPENDENT MODIFICATIONS
!  TO SUPPORT OTHER TYPES, CODES 6, 7, 8, 9, 10, 11 AND 12 HAVE
!  BEEN RESERVED FOR 1/4 LOGICAL, 1/2 LOGICAL, 1/4 INTEGER,
!  1/2 INTEGER, QUAD PRECISION, DOUBLE COMPLEX AND QUAD
!  COMPLEX, RESPECTIVELY.)
!
!  THE USE OF THE FIRST FIVE WORDS IS DESCRIBED BELOW.
!
!    ISTAK( 1) - LOUT,  THE NUMBER OF CURRENT ALLOCATIONS.
!    ISTAK( 2) - LNOW,  THE CURRENT ACTIVE LENGTH OF THE STACK.
!    ISTAK( 3) - LUSED, THE MAXIMUM VALUE OF ISTAK(2) ACHIEVED.
!    ISTAK( 4) - LMAX,  THE MAXIMUM LENGTH THE STACK.
!    ISTAK( 5) - LBOOK, THE NUMBER OF WORDS USED FOR BOOKEEPING.
!
!  THE NEXT FIVE WORDS CONTAIN INTEGERS DESCRIBING THE AMOUNT
!  OF STORAGE ALLOCATED BY THE FORTRAN SYSTEM TO THE VARIOUS
!  DATA TYPES.  THE UNIT OF MEASUREMENT IS ARBITRARY AND MAY
!  BE WORDS, BYTES OR BITS OR WHATEVER IS CONVENIENT.  THE
!  VALUES CURRENTLY ASSUMED CORRESPOND TO AN ANS FORTRAN
!  ENVIRONMENT.  FOR SOME MINI-COMPUTER SYSTEMS THE VALUES MAY
!  HAVE TO BE CHANGED (SEE I0TK00).
!
!    ISTAK( 6) - THE NUMBER OF UNITS ALLOCATED TO LOGICAL
!    ISTAK( 7) - THE NUMBER OF UNITS ALLOCATED TO INTEGER
!    ISTAK( 8) - THE NUMBER OF UNITS ALLOCATED TO REAL
!    ISTAK( 9) - THE NUMBER OF UNITS ALLOCATED TO DOUBLE PRECISION
!    ISTAK(10) - THE NUMBER OF UNITS ALLOCATED TO COMPLEX
!
!     THIS FUNCTION WAS ADAPTED FROM THE FRAMEWORK FUNCTION ISTKGT
!
!     ADAPTED BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 26, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   itype,nitems
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      double precision dstak(12)
!
!  LOCAL SCALARS
     integer&
     &   i,iprt,lbook,lmax,lnow,lout,lused
!
!  LOCAL ARRAYS
     integer&
     &   isize(5),istak(12)
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL IPRINT
!
!  INTRINSIC FUNCTIONS
      intrinsic max
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!  EQUIVALENCES
      equivalence (dstak(1),istak(1))
      equivalence (istak(1),lout)
      equivalence (istak(2),lnow)
      equivalence (istak(3),lused)
      equivalence (istak(4),lmax)
      equivalence (istak(5),lbook)
      equivalence (istak(6),isize(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER I
!        THE LOCATION OF A POINTER TO THE END OF THE PREVIOUS ALLOCATION
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER IPRT
!        THE UNIT NUMBER FOR PRINTED OUTPUT.
!     INTEGER ISIZE(5)
!        THE NUMBER OF WORDS IN EACH OF THE VARIOUS DATA TYPES.
!     INTEGER ISTAK(12)
!        THE INTEGER VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER ITYPE
!        THE TYPE OF ARRAY OF LENGTH NITEMS TO BE ALLOCATED.
!     INTEGER LBOOK
!        THE NUMBER OF WORDS USED FOR BOOKEEPING.
!     INTEGER LMAX
!        THE MAXIMUM LENGTH OF THE STACK.
!     INTEGER LNOW
!        THE CURRENT ACTIVE LENGTH OF THE STACK.
!     INTEGER LOUT
!        THE NUMBER OF CURRENT ALLOCATIONS.
!     INTEGER LUSED
!        THE MAXIMUM VALUE OF ISTAK(2) ACHIEVED.
!     INTEGER NITEMS
!        THE LENGTH OF THE ARRAY OF ITYPE TO BE ALLOCATED.
!
!
      stkget = (lnow*isize(2)-1)/isize(itype) + 2
      i = ( (stkget-1+nitems)*isize(itype) - 1 )/isize(2) + 3
!
!  STACK OVERFLOW IS AN UNRECOVERABLE ERROR.
!
      if (i .le. lmax) go to 10
!
      ierr = 1
      call iprint(iprt)
      write(iprt, 1000)
      return
!
   10 continue
!
!  ISTAK(I-1) CONTAINS THE TYPE FOR THIS ALLOCATION.
!  ISTAK(I  ) CONTAINS A POINTER TO THE END OF THE PREVIOUS
!             ALLOCATION.
!
      istak(i-1) = itype
      istak(i  ) = lnow
      lout = lout+1
      lnow = i
      lused = max(lused, lnow)
!
      return
!
!     FORMAT STATEMENTS
!
 1000 format(20h dstak is too short.)
!
      end
