!LLCNT
      SUBROUTINE LLCNT(Y, WT, LWT, XM, N, M, IXM, NPAR, RES, LDSTAK,
     &   NPRT, PAR, LPAR, RSD, PV, LPV, SDPV, LSDPV, SDRES, LSDRES, VCV,
     &   IVCV, LLHDR, IFIT, NMSUB, WEIGHT, SAVE)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE CONTROLLING SUBROUTINE FOR LINEAR LEAST
!     SQUARES.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 29, 1982
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) ::
     &   RSD
      INTEGER
     &   IFIT,IVCV,IXM,LDSTAK,LPAR,LPV,LSDPV,LSDRES,LWT,M,N,NPAR,
     &   NPRT
      LOGICAL
     &   SAVE,WEIGHT
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     &   PAR(*),PV(*),RES(*),SDPV(*),SDRES(*),VCV(*),WT(*),XM(*),Y(*)
      CHARACTER
     &   NMSUB(6)*1
!
!  SUBROUTINE ARGUMENTS
       EXTERNAL LLHDR
!
!  SCALARS IN COMMON
      INTEGER
     &   IERR
!
!  ARRAYS IN COMMON
      REAL(KIND=WP) :: DSTAK(12)
!
!  LOCAL SCALARS
      INTEGER
     &   ACC,C,FC,IFP,NALL0,NDIGIT,NNZW,PAR1,PARI,PVI,RED,RESI,
     &   RSDI,SDPVI,SDRESI,T,VCVI,WTI,WY,XMW
      LOGICAL
     &   PAGE,WIDE
!
!  LOCAL ARRAYS
      REAL(KIND=WP) ::
     &   RSTAK(12)
      INTEGER
     &   IPTOUT(4),ISTAK(12)
!
!  EXTERNAL FUNCTIONS
      INTEGER
     &   STKST
!       EXTERNAL STKST
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL CPYMSS,LLER,LLSMN,PRTCNT,DCOPY,SETRV,STKCLR,STKSET
!
!  COMMON BLOCKS
      COMMON /CSTAK/DSTAK
      COMMON /ERRCHK/IERR
!
!  EQUIVALENCES
      EQUIVALENCE (DSTAK(1),RSTAK(1))
      EQUIVALENCE (DSTAK(1),ISTAK(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     INTEGER ACC
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE NUMBER OF ACCURATE DIGITS.
!     INTEGER C
!        *
!     REAL(KIND=WP) :: DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER FC
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE ORTHONORMALIZATION MATRIX.
!     INTEGER IERR
!        THE INTEGER VALUE DESIGNATING WHETHER ANY ERRORS WERE
!        DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .EQ. 1, ERRORS WERE DETECTED.
!     INTEGER IFIT
!        THE INDICATOR VALUE DESIGNATING WHETHER THE FIT IS OF A
!        GENERAL MODEL (IFIT=3) OR A POLYNOMIAL MODEL (IFIT=1).
!     INTEGER IFP
!        AN INDICATOR FOR STACK ALLOCATION TYPE, WHERE IFP=3 INDICATES
!        SINGLE PRECISION AND IFP=4 INDICATES DOUBLE PRECISION.
!     INTEGER IPTOUT(4)
!        THE VARIABLE USED TO CONTROL PRINTED OUTPUT FOR EACH SECTION.
!     INTEGER ISTAK(12)
!        THE INTEGER VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER IVCV
!        THE FIRST DIMENSION OF THE MATRIX VCV.
!     INTEGER IXM
!        THE FIRST DIMENSION OF THE MATRIX XM.
!     INTEGER LDSTAK
!        THE LENGTH OF THE VECTOR DSTAK IN COMMON CSTAK.
!     EXTERNAL LLHDR
!        THE NAME OF THE ROUTINE THAT PRODUCED THE HEADING.
!     INTEGER LPAR
!        THE ACTUAL LENGTH OF THE VECTOR P.
!     INTEGER LPV
!        THE ACTUAL LENGTH OF THE VECTOR PV.
!     INTEGER LSDPV
!        THE ACTUAL LENGTH OF THE VECTOR SDPV.
!     INTEGER LSDRES
!        THE ACTUAL LENGTH OF THE VECTOR SDRES.
!     INTEGER LWT
!        THE ACTUAL LENGTH OF THE VECTOR WT.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NALL0
!        NUMBER OF ALLOCATIONS ON ENTRY.
!     INTEGER NDIGIT
!        THE NUMBER OF DIGITS IN THE PRINT CONTROL VALUE.
!     CHARACTER*1 NMSUB(6)
!        THE NAME OF THE SUBROUTINE CALLING THE ERROR CHECKING
!        SUBROUTINES.
!     INTEGER NNZW
!        THE NUMBER OF NON ZERO WEIGHTS.
!     INTEGER NPAR
!        THE NUMBER OF PARAMETERS.
!     INTEGER NPRT
!        THE INDICATOR VARIABLE USED TO DESIGNATE THE AMOUNT OF
!        PRINTED OUTPUT.
!     LOGICAL PAGE
!        THE VARIABLE USED TO INDICATE WHETHER A GIVEN SECTION OF
!        THE OUTPUT IS TO BEGIN ON A NEW PAGE (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: PAR(LPAR)
!        THE PARAMETERS TO BE ESTIMATED.
!     INTEGER PARI
!        THE STARTING LOCATION IN THE WORK AREA OF
!        THE PARAMETERS TO BE ESTIMATED.
!     INTEGER PAR1
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE PARAMETERS TO BE ESTIMATED OMMITTING THE LAST
!        INDEPENDENT VARIABLE.
!     REAL(KIND=WP) :: PV(LPV)
!        THE PREDICTED VALUES.
!     INTEGER PVI
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE PREDICTED VALUES.
!     INTEGER RED
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE REDUCTION TO THE SUM OF SQUARES DUE TO EACH PARAMETER.
!     REAL(KIND=WP) :: RES(N)
!        THE RESIDUALS.
!     INTEGER RESI
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE RESIDUALS.
!     REAL(KIND=WP) :: RSD
!        THE RESIDUAL STANDARD DEVIATION.
!     INTEGER RSDI
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE RESIDUAL STANDARD DEVIATION.
!     REAL(KIND=WP) :: RSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     LOGICAL SAVE
!        THE VARIABLE USED TO INDICATE WHETHER ANY RESULTS OTHER THAN
!        THE RESIDUALS ARE TO VE SAVED (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: SDPV(LSDPV)
!        THE STANDARD DEVIATIONS OF THE PREDICTED VALUES.
!     INTEGER SDPVI
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE STANDARD DEVIATIONS OF THE PREDICTED VALUES.
!     REAL(KIND=WP) :: SDRES(LSDRES)
!        THE STANDARDIZED RESIDUALS.
!     INTEGER SDRESI
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE STANDARDIZED RESIDUALS.
!     INTEGER T
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE TRIANGULAR MATRIX FROM THE DECOMPOSITION.
!     REAL(KIND=WP) :: VCV(IVCV,NPAR)
!        THE VARIANCE COVARIANCE MATRIX.
!     INTEGER VCVI
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE VARIANCE COVARIANCE MATRIX.
!     LOGICAL WEIGHT
!        THE VARIABLE USED TO INDICATE WHETHER WEIGHTED ANALYSIS IS TO
!        BE PERFORMED (TRUE) OR NOT (FALSE).
!     LOGICAL WIDE
!        THE VARIABLE USED TO INDICATE WHETHER THE HEADING SHOULD
!        BE FULL WIDTH (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: WT(LWT)
!        THE WEIGHTS.
!     INTEGER WTI
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE WEIGHTS.
!     INTEGER WY
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE VECTOR CONTAINING SQRT(WT)*Y.
!     REAL(KIND=WP) :: XM(IXM,M)
!        THE INDEPENDENT VARIABLE.
!     INTEGER XMW
!        THE STARTING LOCATION IN THE WORK AREA FOR
!        THE MATRIX CONTAINING XM * SQRT(WT).
!     REAL(KIND=WP) :: Y(N)
!        THE DEPENDENT VARIABLE.
!
!
      WIDE = .TRUE.
      PAGE = .FALSE.
      NDIGIT = 4
!
      IFP = 4
!
!     SET PRINT CONTROL VALUES
!
      CALL PRTCNT(NPRT, NDIGIT, IPTOUT)
!
!     CHECK FOR ERRORS
!
      CALL LLER(NMSUB, IXM, IVCV, N, NPAR, LPAR, LDSTAK, WT, LWT,
     &   WEIGHT, NNZW, IFIT, SAVE)
      IF (IERR.NE.0) RETURN
!
      CALL STKSET(LDSTAK, 4)
      NALL0 = STKST(1)
!
!     SET UP SUBDIVISION OF WORK AREAS
!
      WTI = STKGET(N,IFP)
      RESI = STKGET(N,IFP)
      RSDI = STKGET(1,IFP)
      PARI = STKGET(NPAR,IFP)
      PVI = STKGET(N,IFP)
      SDPVI = STKGET(N,IFP)
      SDRESI = STKGET(N,IFP)
      VCVI = STKGET(NPAR*NPAR,IFP)
!
      WY = STKGET(N,IFP)
      XMW = STKGET(N*NPAR,IFP)
      RED = STKGET(NPAR,IFP)
      T = STKGET(NPAR*NPAR,IFP)
      PAR1 = STKGET(NPAR,IFP)
      ACC = STKGET(NPAR,IFP)
      C = STKGET(NPAR,IFP)
!
!     EQUIVALENCED LOCATIONS WITHIN SCRAT
!
      FC = XMW
!
!     SET UP WEIGHTS VECTOR
!
      IF (WEIGHT) THEN
         CALL DCOPY(N, WT, 1, RSTAK(WTI), 1)
      ELSE
         CALL SETRV(RSTAK(WTI), N, 1.0_WP)
      END IF
!
      CALL LLSMN(Y, XM, RSTAK(WTI), N, M, NPAR, IXM, RSTAK(RESI),
     &   RSTAK(PARI), NNZW, RSTAK(RSDI), RSTAK(PVI), RSTAK(SDPVI),
     &   RSTAK(SDRESI), IPTOUT, RSTAK(WY), RSTAK(XMW), RSTAK(VCVI),
     &   RSTAK(FC), RSTAK(RED), RSTAK(T), RSTAK(PAR1), RSTAK(ACC), IFIT,
     &   WEIGHT, RSTAK(C), LLHDR, PAGE, WIDE)
!
      CALL DCOPY(N, RSTAK(RESI), 1, RES, 1)
!
      IF (SAVE) THEN
         RSD = RSTAK(RSDI)
         CALL DCOPY(NPAR, RSTAK(PARI), 1, PAR, 1)
         CALL DCOPY(N, RSTAK(PVI), 1, PV, 1)
         CALL DCOPY(N, RSTAK(SDPVI), 1, SDPV, 1)
         CALL DCOPY(N, RSTAK(SDRESI), 1, SDRES, 1)
         CALL CPYMSS(NPAR, NPAR, RSTAK(VCVI), NPAR, VCV, IVCV)
      END IF
      CALL STKCLR(NALL0)
!
      IF (IERR.EQ.3) IERR = 2
      IF (IERR.EQ.4) IERR = 3
!
      RETURN
!
      END
