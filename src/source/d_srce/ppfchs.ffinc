!PPFCHS
      FUNCTION PPFCHS(P, NU)
      REAL(KIND=WP) :: PPFCHS
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS FUNCTION IS A VERSION OF DATAPAC SUBROUTINE CHSPPF, WITH
!     MODIFICATIONS TO FACILITATE CONVERSION TO DOUBLE PRECISION
!     AUTOMATICALLY USING THE NAG, INC., CODE APT, AND TO CORRESPOND
!     TO STARPAC CONVENTIONS.
!
!     PURPOSE--THIS SUBROUTINE COMPUTES THE PERCENT POINT
!              FUNCTION VALUE FOR THE CHI-SQUARED DISTRIBUTION
!              WITH INTEGER DEGREES OF FREEDOM PARAMETER = NU.
!              THE CHI-SQUARED DISTRIBUTION USED
!              HEREIN IS DEFINED FOR ALL NON-NEGATIVE X,
!              AND ITS PROBABILITY DENSITY FUNCTION IS GIVEN
!              IN REFERENCES 2, 3, AND 4 BELOW.
!              NOTE THAT THE PERCENT POINT FUNCTION OF A DISTRIBUTION
!              IS IDENTICALLY THE SAME AS THE INVERSE CUMULATIVE
!              DISTRIBUTION FUNCTION OF THE DISTRIBUTION.
!     INPUT  ARGUMENTS--P      = THE SINGLE PRECISION VALUE
!                                (BETWEEN 0.0_WP (INCLUSIVELY)
!                                AND 1.0_WP (EXCLUSIVELY))
!                                AT WHICH THE PERCENT POINT
!                                FUNCTION IS TO BE EVALUATED.
!                     --NU     = THE INTEGER NUMBER OF DEGREES
!                                OF FREEDOM.
!                                NU SHOULD BE POSITIVE.
!     OUTPUT ARGUMENTS--PPFCHS = THE SINGLE PRECISION PERCENT
!                                POINT FUNCTION VALUE.
!     OUTPUT--THE SINGLE PRECISION PERCENT POINT FUNCTION .
!             VALUE PPFCHS FOR THE CHI-SQUARED DISTRIBUTION
!             WITH DEGREES OF FREEDOM PARAMETER = NU.
!     PRINTING--DECEMBER 2, 1985  (JRD) UNLESS AN INPUT ARGUMENT ERROR C
!     RESTRICTIONS--NU SHOULD BE A POSITIVE INTEGER VARIABLE.
!                 --P SHOULD BE BETWEEN 0.0_WP (INCLUSIVELY)
!                   AND 1.0_WP (EXCLUSIVELY).
!     OTHER DATAPAC   SUBROUTINES NEEDED--NONE
!     FORTRAN LIBRARY SUBROUTINES NEEDED--EXP, LOG.
!     MODE OF INTERNAL OPERATIONS--DOUBLE PRECISION.
!     LANGUAGE--ANSI FORTRAN.
!     ACCURACY--(ON THE UNIVAC 1108, EXEC 8 SYSTEM AT NBS)
!               COMPARED TO THE KNOWN NU = 2 (EXPONENTIAL)
!               RESULTS, AGREEMENT WAS HAD OUT TO 6 SIGNIFICANT
!               DIGITS FOR ALL TESTED P IN THE RANGE P = .001 TO
!               P = .999.  FOR P = .95 AND SMALLER, THE AGREEMENT
!               WAS EVEN BETTER--7 SIGNIFICANT DIGITS.
!               (NOTE THAT THE TABULATED VALUES GIVEN IN THE WILK,
!               GNANADESIKAN, AND HUYETT REFERENCE BELOW, PAGE 20,
!               ARE IN ERROR FOR AT LEAST THE GAMMA = 1 CASE--
!               THE WORST DETECTED ERROR WAS AGREEMENT TO ONLY 3
!               SIGNIFICANT DIGITS (IN THEIR 8 SIGNIFICANT DIGIT TABLE)
!               FOR P = .999.)
!     REFERENCES--WILK, GNANADESIKAN, AND HUYETT, "PROBABILITY
!                 PLOTS FOR THE GAMMA DISTRIBUTION",
!                 TECHNOMETRICS, 1962, PAGES 1-15,
!                 ESPECIALLY PAGES 3-5.
!               --NATIONAL BUREAU OF STANDARDS APPLIED MATHEMATICS
!                 SERIES 55, 1964, PAGE 257, FORMULA 6.1.41,
!                 AND PAGES 940-943.
!               --JOHNSON AND KOTZ, CONTINUOUS UNIVARIATE
!                 DISTRIBUTIONS--1, 1970, PAGES 166-206.
!               --HASTINGS AND PEACOCK, STATISTICAL
!                 DISTRIBUTIONS--A HANDBOOK FOR
!                 STUDENTS AND PRACTITIONERS, 1975,
!                 PAGES 46-51.
!     WRITTEN BY--JAMES J. FILLIBEN
!                 STATISTICAL ENGINEERING LABORATORY (205.03)
!                 NATIONAL BUREAU OF STANDARDS
!                 WASHINGTON, D. C. 20234
!                 PHONE  301-921-2315
!     ORIGINAL VERSION--SEPTEMBER 1975.
!     UPDATED         --NOVEMBER  1975.
!
!---------------------------------------------------------------------
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) ::
     &   P
      INTEGER
     &   NU
!
!  LOCAL SCALARS
      REAL(KIND=WP) ::
     &   A,AJ,B,C,CUT1,CUT2,CUTOFF,DEN,DX,FP,GAMMA,
     &   PCALC,SUM,TERM,XDEL,XLOWER,XMAX,XMID,XMIN,XMIN0,XUPPER,
     &   Z,Z2,Z3,Z4,Z5
      INTEGER
     &   ICOUNT,ILOOP,IPRT,J,MAXIT
!
!  LOCAL ARRAYS
      REAL(KIND=WP) ::
     &   D(10)
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL IPRINT
!
!  INTRINSIC FUNCTIONS
      INTRINSIC EXP,LOG
!
!
      DATA C/0.918938533204672741_WP/
      DATA D(3),D(4),D(5)
     &  /+0.793650793650793651E-3_WP,
     &   -0.595238095238095238E-3_WP,
     &   +0.8417508417508417151E-3_WP/
      DATA D(6),D(7),D(8),D(9),D(10)
     &  /-0.191752691752691753E-2_WP,
     &   +0.641025641025641025E-2_WP,
     &   -0.2955065359147712418E-1_WP,
     &   +0.179644372368830573_WP,
     &   -0.139243221690590111E1_WP/
!
      D(1) = 1.0_WP/12.0_WP
      D(2) = 1.0_WP/360.0_WP
!
      CALL IPRINT (IPRT)
!
!     CHECK THE INPUT ARGUMENTS FOR ERRORS
!
      IF (P.LT.0.0_WP .OR. P.GE.1.0_WP) THEN
         WRITE(IPRT,1010)
         WRITE(IPRT,1030) P
         PPFCHS = 0.0_WP
         RETURN
      END IF
      IF(NU.LT.1) THEN
         WRITE(IPRT,1020)
         WRITE(IPRT,1040) NU
         PPFCHS = 0.0_WP
         RETURN
      END IF
!
!-----START POINT-----------------------------------------------------
!
!     EXPRESS THE CHI-SQUARED DISTRIBUTION PERCENT POINT
!     FUNCTION IN TERMS OF THE EQUIVALENT GAMMA
!     DISTRIBUTION PERCENT POINT FUNCTION,
!     AND THEN EVALUATE THE LATTER.
!
      FP = P
      GAMMA = NU/2.0_WP
      MAXIT = 10000
!
!     COMPUTE THE GAMMA FUNCTION USING THE ALGORITHM IN THE
!     NBS APPLIED MATHEMATICS SERIES REFERENCE.
!     THIS GAMMA FUNCTION NEED BE CALCULATED ONLY ONCE.
!     IT IS USED IN THE CALCULATION OF THE CDF BASED ON
!     THE TENTATIVE VALUE OF THE PPFCHS IN THE ITERATION.
!
      Z = GAMMA
      DEN = 1.0_WP
  150 IF(Z.LT.10.0_WP) THEN
         DEN = DEN*Z
         Z = Z+1.0_WP
         GO TO 150
      END IF
      Z2 = Z*Z
      Z3 = Z*Z2
      Z4 = Z2*Z2
      Z5 = Z2*Z3
      A = (Z-0.5_WP)*LOG(Z)-Z+C
      B = D(1)/Z + D(2)/Z3 + D(3)/Z5 + D(4)/(Z2*Z5) + D(5)/(Z4*Z5) +
     &    D(6)/(Z*Z5*Z5) + D(7)/(Z3*Z5*Z5) + D(8)/(Z5*Z5*Z5) +
     &    D(9)/(Z2*Z5*Z5*Z5)
!     G = EXP(A+B)/DEN
!
!     DETERMINE LOWER AND UPPER LIMITS ON THE DESIRED 100P
!     PERCENT POINT.
!
      ILOOP = 1
!     XMIN0 = (FP*GAMMA*G)**(1.0_WP/GAMMA)
      XMIN0 = EXP((1.0_WP/GAMMA)*(LOG(FP)+LOG(GAMMA)+(A+B)-LOG(DEN)))
      XMIN = XMIN0
      XLOWER = XMIN
      XMID = XMIN
      XUPPER = XMIN
      ICOUNT = 1
  350 CONTINUE
      XMAX = ICOUNT*XMIN0
      DX = XMAX
      GO TO 600
  360 IF(PCALC.LT.FP) THEN
         XMIN = XMAX
         ICOUNT = ICOUNT+1
         IF(ICOUNT.LE.30000) GO TO 350
      END IF
      XMID = (XMIN+XMAX)/2.0_WP
!
!     NOW ITERATE BY BISECTION UNTIL THE DESIRED ACCURACY IS ACHIEVED.
!
      ILOOP = 2
      XLOWER = XMIN
      XUPPER = XMAX
      ICOUNT = 0
  550 DX = XMID
      GO TO 600
  560 IF(PCALC.NE.FP) THEN
         IF(PCALC.GT.FP) THEN
            XUPPER = XMID
            XMID = (XMID+XLOWER)/2.0_WP
         ELSE
            XLOWER = XMID
            XMID = (XMID+XUPPER)/2.0_WP
         END IF
         XDEL = XMID-XLOWER
         IF(XDEL.LT.0.0_WP)XDEL = -XDEL
         ICOUNT = ICOUNT+1
         IF((XDEL.GE.0.0000000001_WP) .AND. (ICOUNT.LE.100)) GO TO 550
      END IF
      PPFCHS = 2.0_WP*XMID
      RETURN
!
!********************************************************************
!     THIS SECTION BELOW IS LOGICALLY SEPARATE FROM THE ABOVE.
!     THIS SECTION COMPUTES A CDF VALUE FOR ANY GIVEN TENTATIVE
!     PERCENT POINT X VALUE AS DEFINED IN EITHER OF THE 2
!     ITERATION LOOPS IN THE ABOVE CODE.
!
!     COMPUTE T-SUB-Q AS DEFINED ON PAGE 4 OF THE WILK, GNANADESIKAN,
!     AND HUYETT REFERENCE
!
  600 SUM = 1.0_WP/GAMMA
      TERM = 1.0_WP/GAMMA
      CUT1 = DX-GAMMA
      CUT2 = DX*10000000000.0_WP
      DO 700 J=1,MAXIT
         AJ = J
         TERM = DX*TERM/(GAMMA+AJ)
         SUM = SUM+TERM
         CUTOFF = CUT1+(CUT2*TERM/SUM)
         IF (AJ.GT.CUTOFF) GO TO 750
  700 CONTINUE
      WRITE(IPRT,1050)MAXIT
      WRITE(IPRT,1060)P
      WRITE(IPRT,1070)NU
      WRITE(IPRT,1080)
      PPFCHS = 0.0_WP
      RETURN
!
  750 CONTINUE
!     PCALC = (DX**GAMMA)*(EXP(-DX))*SUM/G
      PCALC = EXP(GAMMA*LOG(DX) + LOG(SUM) + LOG(DEN) - DX - A - B)
      IF (ILOOP.EQ.1) GO TO 360
      GO TO 560
!
 1010 FORMAT(' ',115H***** FATAL ERROR--THE FIRST  INPUT ARGUMENT TO THE
     & PPFCHS FUNCTION IS OUTSIDE THE ALLOWABLE (0,1  ) INTERVAL *****)
 1020 FORMAT(' ', 91H***** FATAL ERROR--THE SECOND INPUT ARGUMENT TO THE
     & PPFCHS FUNCTION IS NON-POSITIVE *****  )
 1030 FORMAT(' ', 35H***** THE VALUE OF THE ARGUMENT IS ,E15.8,6H *****)
 1040 FORMAT(' ', 35H***** THE VALUE OF THE ARGUMENT IS ,I8   ,6H *****)
 1050 FORMAT(' ',48H*****ERROR IN INTERNAL OPERATIONS IN THE PPFCHS ,
     & 43HFUNCTION--THE NUMBER OF ITERATIONS EXCEEDS ,I7)
 1060 FORMAT(' ',33H     THE INPUT VALUE OF P     IS ,E15.8)
 1070 FORMAT(' ',33H     THE INPUT VALUE OF NU    IS ,I8)
 1080 FORMAT(52H      THE OUTPUT VALUE OF PPFCHS HAS BEEN SET TO 0.0)
!
      END
