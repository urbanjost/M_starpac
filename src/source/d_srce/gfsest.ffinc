!GFSEST
      SUBROUTINE GFSEST (H, K, NF, FREQ, GAIN, DELTA)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE COMPUTES THE GAIN FUNCTION OF AN INPUT SYMMETRIC
!     LINEAR FILTER AT THE FREQUENCIES SPECIFIED IN FREQ USING THE
!     TRANSFORM ALGORITHM SHOWN ON PAGE 311 OF JENKINS AND WATTS.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 26, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) ::
     &   DELTA
      INTEGER
     &   K,NF
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     &   FREQ(NF),GAIN(NF),H(K)
!
!  LOCAL SCALARS
      REAL(KIND=WP) ::
     &   C,PI,V0,V1,V2
      INTEGER
     &   I,J,KHALF,KMID
!
!  EXTERNAL SUBROUTINES
      EXTERNAL GETPI
!
!  INTRINSIC FUNCTIONS
      INTRINSIC ABS,COS
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: C
!        A VALUE USED TO COMPUTE THE GAIN FUNCTION.
!     REAL(KIND=WP) :: DELTA
!        THE SAMPLING INTERVAL OF THE ORIGINAL SERIES.
!     REAL(KIND=WP) :: FREQ(NF)
!        THE VECTOR OF FREQUENCIES AT WHICH THE GAIN FUNCTION IS TO BE
!        ESTIMATED.
!     REAL(KIND=WP) :: GAIN(NF)
!        THE ARRAY IN WHICH THE GAIN FUNCTION ESTIMATES ARE RETURNED.
!     REAL(KIND=WP) :: H(K)
!        THE SYMMETRIC LINEAR FILTER WEIGHTS.
!     INTEGER I, J
!        INDEX VARIABLES.
!     INTEGER K
!        THE NUMBER OF TERMS IN THE SYMMETRIC LINEAR FILTER.
!     INTEGER KHALF, KMID
!        HALF THE FILTER LENGTH, AND THE MIDPOINT OF THE FILTER,
!        RESPECTIVELY.
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES FOR WHICH THE GAIN FUNCTION ESTIMATES
!        ARE TO BE ESTIMATED.
!     REAL(KIND=WP) :: PI
!        THE VALUE OF PI.
!     REAL(KIND=WP) :: V0, V1, V2
!        CONSTANTS USED FOR COMPUTING THE GAIN FUNCTION ESTIMATES.
!
      CALL GETPI(PI)
!
!        COMPUTE GAIN FUNCTION ESTIMATES AND THEIR CONFIDENCE LIMITS.
!
      KMID = (K+1) / 2
      KHALF = KMID - 1
!
      DO 30 I = 1, NF
         C = COS(2.0_WP * PI * FREQ(I))
         V0 = 0.0_WP
         V1 = 0.0_WP
         DO 20 J = 1, KHALF
            V2 = 2.0_WP * C * V1 - V0 + H(J)
            V0 = V1
            V1 = V2
   20    CONTINUE
         GAIN(I) = ABS(DELTA * (H(KMID) + 2.0_WP * (V1 * C - V0)))
   30 CONTINUE
      RETURN
      END
