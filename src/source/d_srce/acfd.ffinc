!ACFD
subroutine acfd (y, n, lagmax, nfac, nd, iod, ldstak)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE USER CALLABLE ROUTINE FOR COMPUTING THE
!     AUTOCORRELATIONS AND PARTIAL AUTOCORRELATIONS OF A TIME SERIES
!     WITH DIFFERENCING.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 21, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   lagmax,ldstak,n,nfac
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   y(*)
     integer&
     &   iod(*),nd(*)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      real(kind=wp) :: dstak(12)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   chia,chiap,ospvar,ymean,ysd
     integer&
    &   acov,aic,ftest,i,iar,ifp,iprt,lacov,ldsmin,lyfft,nall0,&
     &   nfft,ntimes,nyd,nyf,phi,prho,sdrho,work,yf
     logical&
     &   differ,isfft,newpg
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   rstak(12)
     integer&
     &   ndum(1)
     character&
     &   nmsub(6)*1
!
!  EXTERNAL FUNCTIONS
!      INTEGER
!     +   STKST
!      EXTERNAL STKST
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL ACFER,ACFMN,ACFOUT,DIFSER,IPRINT,LDSCMP,DCOPY,STKCLR,
!     +   STKSET
!
!  INTRINSIC FUNCTIONS
      intrinsic min,sqrt
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!  EQUIVALENCES
      equivalence (dstak(1),rstak(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     INTEGER ACOV
!        THE STARTING LOCATION IN DSTAK FOR
!        THE AUTOCOVARIANCE VECTOR.
!     INTEGER AIC
!        THE STARTING LOCATION IN DSTAK FOR
!        THE ARRAY CONTAINING THE AKAIKES CRITERION FOR EACH ORDER.
!     REAL(KIND=WP) :: CHIA, CHIAP
!        THE VARIABLES IN WHICH THE CHI SQUARE STATISTIC AND
!        CHI SQUARED STATISTIC PROBABILITY FOR THE AUTOCORRELATIONS
!        ARE STORED.
!     LOGICAL DIFFER
!        THE VARIABLE USED TO DESIGNATE WHETHER OR NOT THE SERIES
!        BEING ANALYZED WAS DIFFERENCED OR NOT.
!     REAL(KIND=WP) :: DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER FTEST
!        THE STARTING LOCATION IN DSTAK FOR
!        THE ARRAY CONTAINING THE PARTIAL F RATIO AND PROBABILITIES
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IAR
!        THE ORDER OF THE AUTOREGRESSIVE PROCESS CHOSEN.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!     INTEGER IFP
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER THE FLOATING
!        POINT VARIABLES ARE SINGLE (IFP=3) OR DOUBLE (IFP=4) PRECISION.
!     INTEGER IOD(NFAC)
!        THE ORDER OF EACH OF THE DIFFERENCE FACTORS.
!     INTEGER IPRT
!        THE UNIT NUMBER USED FOR OUTPUT.
!     LOGICAL ISFFT
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER THE CALLING
!        ROUTINE HAS SUFFIX F (ISFFT = TRUE) OR NOT (ISFFT = FALSE)
!     INTEGER LACOV
!        THE LENGTH OF THE VECTOR ACOV.
!     INTEGER LAGMAX
!        THE MAXIMUM LAG VALUE REQUESTED.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     INTEGER LYFFT
!        A DUMMY VARIABLE
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS IN EACH SERIES
!     INTEGER NALL0
!        THE NUMBER OF OUTSTANDING STACK ALLOCATIONS
!     INTEGER ND(NFAC)
!        THE ARRAY CONTAINING THE NUMBER OF TIMES THE DIFFERENCE
!        FACTORS ARE TO BE APPLIED.
!     INTEGER NDUM(1)
!        A DUMMY DIMENSIONED VARIABLE.
!     LOGICAL NEWPG
!        THE VARIABLE USED TO DESIGNATE WHETHER OR NOT THE OUTPUT
!        IS TO BEGIN ON A NEW PAGE.
!     INTEGER NFAC
!        THE NUMBER OF DIFFERENCE FACTORS.
!     INTEGER NFFT
!        THE NUMBER OF OBSERVATIONS IN THE EXTENDED SERIES.
!     CHARACTER*1 NMSUB(6)
!        THE NAME OF THE SUBROUTINE CALLING THE ERROR CHECKING
!        SUBROUTINE.
!     INTEGER NTIMES
!        THE NUMBER OF TIMES THE FIRST DIFFERENCE FACTOR HAS BEEN
!        APPLIED.
!     INTEGER NYD, NYF
!        THE NUMBER OF OBSERVATIONS AFTER THE DIFFERENCE FILTER IS
!        APPLIED.
!     REAL(KIND=WP) :: OSPVAR
!        THE ONE STEP PREDICTION VARIANCE FOR THE ORDER SELECTED (IAR).
!     INTEGER PHI
!        THE STARTING LOCATION IN DSTAK FOR
!        THE ARRAY OF AUTOREGRESSIVE COEFFICIENTS FOR THE SELECTED
!        ORDER.
!     INTEGER PRHO
!        THE STARTING LOCATION IN THE WORK AREA FOR PRHO.
!     REAL(KIND=WP) :: RSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER SDRHO
!        THE STARTING LOCATION IN THE WORK AREA FOR SDRHO.
!     INTEGER WORK
!        THE STARTING LOCATION IN THE WORK AREA FOR WORK.
!     REAL(KIND=WP) :: Y(N)
!        THE VECTOR CONTAINING THE OBSERVED TIME SERIES
!     INTEGER YF
!        THE STARTING LOCATION IN DSTAK FOR
!        THE VECTOR CONTAINING THE DIFFERENCE FILTERED SERIES.
!     REAL(KIND=WP) :: YMEAN
!        THE MEAN OF THE OBSERVED TIME SERIES
!     REAL(KIND=WP) :: YSD
!        THE STANDARD DEVIATION OF THE OBSERVED TIME SERIES
!
!
!     SET UP NAME ARRAYS
!
     data&
    &  nmsub(1),  nmsub(2),  nmsub(3),  nmsub(4),  nmsub(5),  nmsub(6)&
     & /     'A',       'C',       'F',       'D',       ' ',       ' '/
!
!
!     SET UP FOR ERROR CHECKING
!
      ierr = 0
      lacov = lagmax+1
      differ = .true.
      isfft = .false.
      lyfft = 0
      nfft = 0
!
      call ldscmp(7, 0, 0, 0, 0, 0, 'D', 7*lagmax+2+n, ldsmin)
!
!     CALL ERROR CHECKING ROUTINES
!
     call acfer(nmsub, n, lagmax, lacov, ldstak, ldsmin,&
     &  differ, nfac, nd, iod, isfft, lyfft, nfft)
!
!     CHECK WHETHER AN ERROR HAS BEEN DETECTED
!
      if (ierr.eq.0) then
!
!       SET UP THE WORK AREA.
!
        call stkset(ldstak, 4)
        nall0 = stkst(1)
!
        ifp = 4
!
        acov = stkget(lagmax+1, ifp)
        prho = stkget(lagmax, ifp)
        aic = stkget(lagmax+1, ifp)
        ftest = stkget(2*lagmax, ifp)
        phi = stkget(lagmax, ifp)
        work = stkget(lagmax, ifp)
        yf = stkget(n, ifp)
        sdrho = work
!
        if (ierr.eq.0) then
!
          newpg = .false.
          ntimes = 0
!
!         CHECK WHETHER THERE IS MORE THAN ONE DIFFERENCE FACTOR.
!
          if (nfac.le.1) then
            call dcopy(n, y, 1, rstak(yf), 1)
          else
!
!           CREATE NEW DATA BY APPLYING DIFFERENCE FACTORS BEYOND THE
!           FIRST.
!
            call difser(y, n, nfac-1, nd(2), iod(2), rstak(yf), nyf)
          end if
          nyd = n
!
!         CALL ROUTINE FOR MAIN AUTOCORRELATION COMPUTATIONS.
!
         call acfmn (rstak(yf), nyd, min(lagmax, nyd-1),&
    &       rstak(acov+1), rstak(sdrho), ymean, rstak(prho),&
    &       rstak(aic), rstak(ftest), rstak(phi), iar, ospvar,&
    &       rstak(acov), lagmax+1, lagmax+1, chia, chiap, rstak(work),&
     &       1)
!
          ysd = sqrt(rstak(acov) * n / (n-1))
!
!         CALL ROUTINE TO PRINT OUT AUTOCORRELATIONS
!
         call acfout (ymean, ysd, nyf, nyf, min(lagmax, nyd-1),&
    &       rstak(acov+1), rstak(sdrho), rstak(prho), ndum, rstak(aic),&
    &       lagmax+1, rstak(ftest), iar, rstak(phi), ospvar, chia,&
    &       chiap, lagmax, .false., 0.0_wp, differ, newpg, nfac, nd,&
     &       iod, ntimes)
!
          newpg = .true.
!
!         COMPUTE CORRELATION ANALYSIS FOR FIRST DIFFERENCE FACTOR
!         APPLIED 1 TO ND(1) TIMES
!
          if ((nfac.ge.1) .and. (nd(1).ge.1)) then
            do 50 i = 1, nd(1)
!
              call difser(rstak(yf), nyd, nfac-1, nd(2), iod(2),&
     &           rstak(yf), nyf)
!
!              CALL ROUTINE FOR MAIN AUTOCORRELATION COMPUTATIONS.
!
            call acfmn (rstak(yf), nyd, min(lagmax, nyd-1),&
    &          rstak(acov+1), rstak(sdrho), ymean, rstak(prho),&
    &          rstak(aic), rstak(ftest), rstak(phi), iar, ospvar,&
    &          rstak(acov), lagmax+1, lagmax+1, chia, chiap,&
     &          rstak(work), 1)
!
               ysd = sqrt(rstak(acov) * n / (n-1))
!
!           CALL ROUTINE TO PRINT OUT AUTOCORRELATIONS
!
            call acfout (ymean, ysd, nyf, nyf, min(lagmax, nyd-1),&
    &          rstak(acov+1), rstak(sdrho), rstak(prho), ndum,&
    &          rstak(aic), lagmax+1, rstak(ftest), iar, rstak(phi),&
    &          ospvar, chia, chiap, lagmax, .false., 0.0_wp, differ,&
     &          newpg, nfac, nd, iod, i)
!
   50       continue
          end if
        end if
!
        call stkclr(nall0)
      end if
!
      if (ierr.ne.0) then
!
!     PRINT PROPER CALL SEQUENCE AND RETURN
!
        ierr = 1
        call iprint (iprt)
        write (iprt, 1000)
      end if
!
      return
!
!     FORMAT STATEMENTS
!
1000 format(/42h the correct form of the call statement is//&
     &  '       CALL ACFD (Y, N, LAGMAX, NFAC, ND, IOD, LDSTAK)')
end subroutine acfd
