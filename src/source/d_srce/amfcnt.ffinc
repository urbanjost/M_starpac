!AMFCNT
     subroutine amfcnt(y, n, mspec, nfac, par, npar, ldstak,&
     &   nfcst, nfcsto, ifcsto, nprt, fcst, ifcst, fcstsd, nmsub, save)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE CONTROLLING SUBROUTINE FOR FORECASTING USING
!     ARIMA MODELS.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 2, 1985
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   ifcst,ldstak,n,nfac,nfcst,nfcsto,npar,nprt
     logical&
     &   save
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   fcst(*),fcstsd(*),par(*),y(*)
     integer&
     &   ifcsto(*),mspec(4,*)
     character&
     &   nmsub(6)*1
!
!  SCALARS IN COMMON
     integer&
    &   ierr,iflag,mbo,mbol,mspect,nfact,nparar,npardf,nparma,&
     &   nrests,parar,pardf,parma,t,temp
!
!  ARRAYS IN COMMON
      real(kind=wp) :: dstak(12)
!
!  LOCAL SCALARS
     integer&
     &   f,fsd,ifp,is,ldsmin,nall0,pv
     logical&
     &   page,wide
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   rstak(12)
     integer&
     &   istak(12)
!
!  EXTERNAL FUNCTIONS
     integer&
     &   stkst
!       EXTERNAL STKST
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL AMFER,AMFMN,BACKOP,CPYVII,LDSCMP,STKCLR,STKSET
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
     common /mdltsc/mspect,nfact,pardf,npardf,parar,nparar,parma,&
     &   nparma,mbo,mbol,t,temp,nrests,iflag
!
!  EQUIVALENCES
      equivalence (dstak(1),istak(1))
      equivalence (dstak(1),rstak(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER F
!        THE STARTING LOCATION IN THE WORK VECTOR FOR
!        THE FORECASTS.
!     REAL(KIND=WP) :: FCST(IFCST,NFCSTO)
!        THE STORAGE ARRAY FOR THE FORECASTS.
!     REAL(KIND=WP) :: FCSTSD(NFCST)
!        THE STORAGE ARRAY FOR THE STANDARD DEVIATIONS OF THE FORECASTS.
!     INTEGER FSD
!        THE STARTING LOCATION IN THE WORK VECTOR FOR
!        THE STANDARD DEVIATIONS OF THE FORECASTS.
!     INTEGER IERR
!        THE VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .GE. 1, ERRORS WERE DETECTED.
!     INTEGER IFCST
!        THE FIRST DIMENSION OF THE ARRAY FCST.
!     INTEGER IFCSTO(NFCSTO)
!        THE INDICES OF THE ORIGINS FOR THE FORECASTS.
!     INTEGER IFP
!        AN INDICATOR FOR THE PRECISION OF THE STACK ALLOCATION TYPE,
!        WHERE IFP=3 INDICATES SINGLE AND IFP=4 INDICATES DOUBLE.
!     INTEGER IS
!        A VALUE USED TO DETERMINE THE AMOUNT OF WORK SPACE NEEDED
!        BASED ON WHETHER STEP SIZES ARE INPUT OR ARE TO BE CALCULATED.
!     INTEGER ISTAK(12)
!        THE INTEGER VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     INTEGER MBO
!        THE MAXIMUM BACK ORDER OPERATOR.
!     INTEGER MBOL
!        THE MAXIMUM BACK ORDER ON THE LEFT
!     INTEGER MSPEC(4,NFAC)
!        THE ARRAY CONTAINING THE VALUES OF P, D, Q, AND S FOR EACH FACT
!     INTEGER MSPECT
!        THE STARTING LOCATION IN THE WORK SPACE FOR
!        THE ARRAY CONTAINING THE VALUES OF P, D, Q, AND S FOR EACH FACT
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NALL0
!        NUMBER OF STACK ALLOCATIONS OUTSTANDING.
!     INTEGER NFAC
!        THE NUMBER OF FACTORS IN THE MODEL
!     INTEGER NFACT
!        THE NUMBER OF FACTORS IN THE MODEL
!     INTEGER NFCST
!        THE NUMBER OF FORECASTS.
!     INTEGER NFCSTO
!        THE NUMBER OF THE ORIGINS.
!     CHARACTER*1 NMSUB(6)
!        THE NAME OF THE ROUTINE CALLING THE ERROR CHECKING ROUTINE
!     INTEGER NPAR
!        THE NUMBER OF PARAMETERS IN THE MODEL.
!     INTEGER NPARAR
!        THE NUMBER OF AUTOREGRESSIVE PARAMETERS
!     INTEGER NPARDF
!        THE ORDER OF THE EXPANDED DIFFERENCE FILTER.
!     INTEGER NPARMA
!        THE LENGTH OF THE VECTOR PARMA
!     INTEGER NPRT
!        THE PARAMETER USED TO INDICATE HOW MUCH PRINTED OUTPUT IS
!        TO BE PROVIDED.
!     LOGICAL PAGE
!        THE VARIABLE USED TO INDICATE WHETHER A GIVEN SECTION OF
!        THE OUTPUT IS TO BEGIN ON A NEW PAGE (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: PAR(NPAR)
!        THE CURRENT ESTIMATES OF THE PARAMETERS.
!     INTEGER PARAR
!        THE STARTING LOCATION IN THE WORK ARRAY FOR
!        THE AUTOREGRESSIVE PARAMETERS
!     INTEGER PARDF
!        THE STARTING LOCATION IN THE WORK SPACE FOR
!        THE VECTOR CONTAINING THE DIFFERENCE FILTER PARAMETERS
!     INTEGER PARMA
!        THE STARTING LOCATION IN THE WORK ARRAY FOR
!        THE MOVING AVERAGE PARAMETERS
!     INTEGER PV
!        THE STARTING LOCATION IN THE WORK ARRAY FOR
!        THE PREDICTED VALUES
!     INTEGER NRESTS
!        THE MAXIMUM NUMBER OF RESIDUALS TO BE COMPUTED.
!     REAL(KIND=WP) :: RSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     LOGICAL SAVE
!        THE VARIABLE USED TO INDICATE WHETHER ANY RESULTS OTHER THAN
!        THE RESIDUALS AND PARAMETERS ARE TO BE SAVED (TRUE) OR NOT
!        (FALSE).
!     INTEGER T
!        THE STARTING LOCATION IN THE WORK ARRAY FOR
!        A TEMPORARY WORK VECTOR.
!     INTEGER TEMP
!        THE STARTING LOCATION IN THE WORK ARRAY FOR
!        A TEMPORARY WORK VECTOR
!     LOGICAL WIDE
!        THE VARIABLE USED TO INDICATE WHETHER THE HEADING SHOULD
!        BE FULL WIDTH (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: Y(N)
!        THE DEPENDENT VARIABLE.
!
!     SET VARIOUS PROGRAM VALUES
!
      wide = .true.
      page = .false.
!
!     COMPUTE BACK OPERATORS
!
      call backop(mspec, nfac, npardf, mbol, mbo, nparma, nparar)
!
!     SET UP FOR ERROR CHECKING
!
      ierr = 0
      is = 0
!
     call ldscmp(8, 0, 4*nfac,&
     &   0, 0, 0, 'D', 5*mbo + 2*nfcst + n + mbo + 101, ldsmin)
!
     call amfer(nmsub, n, npar, ldstak, ldsmin, save, mspec, nfac,&
     &   ifcst, nfcst)
!
      if (ierr.eq.0) then
!
        call stkset(ldstak, 4)
!
!       SUBDIVIDE WORKSPACE FOR STEP SIZES
!
        nall0 = stkst(1)
!
        ifp = 4
!
        pardf = stkget(mbo, ifp)
        parar = stkget(mbo, ifp)
        parma = stkget(mbo, ifp)
        t = stkget(2*mbo, ifp)
!
        temp = t + mbo
!
        nfact = nfac
        mspect = stkget(4*nfac, 2)
        f = stkget(nfcst, ifp)
        fsd = stkget(nfcst, ifp)
!
!       SET UP FOR MODEL
!
        nrests = mbo + 101 + n
        pv = stkget(nrests, ifp)
!
        call cpyvii(nfac, mspec(1,1), 4, istak(mspect), 1)
        call cpyvii(nfac, mspec(2,1), 4, istak(mspect+nfac), 1)
        call cpyvii(nfac, mspec(3,1), 4, istak(mspect+2*nfac), 1)
        call cpyvii(nfac, mspec(4,1), 4, istak(mspect+3*nfac), 1)
!
!       CALL MAIN ROUTINE FOR COMPUTING AND PRINTING FORECASTS
!
       call amfmn (par, rstak(pv), y, npar, n, nfac, istak(mspect),&
    &    rstak(pardf), npardf, rstak(t), rstak(temp), rstak(parar),&
    &    rstak(parma), mbo, mbol, n-nrests+1, n, nprt, save,&
    &    nfcst, nfcsto, ifcsto, fcst, ifcst, fcstsd, rstak(f),&
     &    rstak(fsd), nparar, nparma)
      end if
!
      call stkclr(nall0)
!
      return
!
      end
