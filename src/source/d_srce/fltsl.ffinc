!FLTSL
      subroutine fltsl (y, n, k, h, yf, nyf)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE FILTERS THE INPUT SERIES Y USING THE K TERMS
!     OF H, COPYING THE FILTERED SERIES INTO YF.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DEVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 26, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   k,n,nyf
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   h(k),y(n),yf(n)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   temp
     integer&
     &   i,i1,ihm,ihp,ikmid,im,ip,j,khalf,kmid
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: H(K)
!        THE ARRAY IN WHICH THE FILTER COEFFICIENTS ARE STORED.
!     INTEGER I, IHM, IHP, IKMID, IM, IP
!        INDEXING VARIABLES.
!     INTEGER J
!        AN INDEXING VARIABLE.
!     INTEGER K
!        THE NUMBER OF FILTER TERMS.
!     INTEGER KHALF, KMID
!        THE HALF LENGTH OF THE FILTER AND THE MIDPOINT OF THE FILTER.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS IN THE SERIES Y.
!     INTEGER NYF
!        THE NUMBER OF OBSERVATIONS IN THE FILTERED SERIES YF.
!     REAL(KIND=WP) :: TEMP
!        A TEMPORY STORAGE LOCATION.
!     REAL(KIND=WP) :: Y(N)
!        THE VECTOR CONTAINING THE OBSERVED TIME SERIES.
!     REAL(KIND=WP) :: YF(N)
!        THE VECTOR IN WHICH THE FILTERED SERIES IS RETURNED.
!
      do 10 i = 1, n
         yf(i) = y(i)
   10 continue
!
      nyf = n - (k - 1)
!
      khalf = (k - 1) / 2
!
      kmid = khalf + 1
!
      do 30 i = 1, nyf
         ikmid = i + khalf
         temp = h(kmid) * yf(ikmid)
         do 20 j = 1, khalf
            ip = ikmid + j
            ihp = kmid + j
            im = ikmid - j
            ihm = kmid - j
            temp = temp + h(ihp)*yf(ip) + h(ihm)*yf(im)
   20    continue
         yf(i) = temp
   30 continue
!
      i1 = nyf + 1
!
      do 40 i = i1, n
         yf(i) = 0.0_wp
   40 continue
      return
      end
