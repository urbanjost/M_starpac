!AOV1S
      SUBROUTINE AOV1S(Y, TAG, N, LDSTAK, NPRT, GSTAT, IGSTAT, NG)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE -
!     1. CALLS OTHER ROUTINES TO CHECK THE INPUT PARAMETERS
!     2. SETS UP NEEDED STORAGE LOCATIONS AND
!     3. CALLS AOV1MN TO COMPUTE A COMPREHENSIVE SET OF RESULTS FOR A
!         ONEWAY ANALYSIS OF VARIANCE WITH OPTIONAL OUTPUT.
!
!     WRITTEN BY -
!       LINDA MITCHELL
!       STATISTICAL ENGINEERING DIVISION
!       NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  MAY 17, 1982
!                       BASED ON EARLIER VERSION BY J. R. DONALDSON
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      INTEGER
     +   IGSTAT,LDSTAK,N,NG,NPRT
!
!  ARRAY ARGUMENTS
      DOUBLE PRECISION
     +   GSTAT(*),TAG(*),Y(*)
!
!  SCALARS IN COMMON
      INTEGER
     +   IERR
!
!  ARRAYS IN COMMON
      DOUBLE PRECISION DSTAK(12)
!
!  LOCAL SCALARS
      INTEGER
     +   B10,GPMAX,GPMIN,IFP,INDEX,INT,IPRT,ITEMP,NALL0,NZTAGS,
     +   RANKS,SRANK
!
!  LOCAL ARRAYS
      DOUBLE PRECISION
     +   RSTAK(12)
      INTEGER
     +   ISTAK(12)
      CHARACTER
     +   NMSUB(6)*1
!
!  EXTERNAL FUNCTIONS
      INTEGER
     +   STKGET
      EXTERNAL STKGET
!
!  EXTERNAL SUBROUTINES
      EXTERNAL AOV1ER,AOV1HD,AOV1MN,IPRINT,STKCLR
!
!  COMMON BLOCKS
      COMMON /CSTAK/DSTAK
      COMMON /ERRCHK/IERR
!
!  EQUIVALENCES
      EQUIVALENCE (DSTAK(1),RSTAK(1))
      EQUIVALENCE (DSTAK(1),ISTAK(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     INTEGER B10
!        STARTING LOCATION IN THE STACK AREA FOR B10
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER GPMAX
!        THE STARTING LOCATION IN THE STACK AREA OF MAXIMUM
!        OBSERVATION
!     INTEGER GPMIN
!        THE STARTING LOCATION IN THE STACK AREA OF THE MINUMUM
!        OBSERVATION
!     DOUBLE PRECISION GSTAT(IGSTAT,4)
!        THE GROUP STATISTICS.  COLUMNS CORRESPOND TO THE TAG
!        VALUE, SAMPLE SIZE, GROUP MEAN, AND GROUP STANDARD DEVIATION.
!     INTEGER IERR
!        A COMMON VARIABLE USED AS A FLAG INDICATING WHETHER THERE
!        ARE ANY ERRORS, IF = 0 THEN NO ERRORS
!     INTEGER IFP
!        AN INDICATOR FOR STACK ALLOCATION TYPE, WHERE IFP=3 INDICATES
!        SINGLE PRECISION AND IFP=4 INDICATES DOUBLE PRECISION.
!     INTEGER IGSTAT
!        THE FIRST DIMENSION OF GSTAT.
!     INTEGER INDEX
!        THE STARTING LOCATION IN THE STACK ARRAY OF THE INDEX FOR
!        THE SORTED TAGS
!     INTEGER INT
!        FRAMEWORK CODE VALUE FOR INTEGER NUMBERS
!     INTEGER IPRT
!        THE OUTPUT LOGICAL UNIT NUMBER
!     INTEGER ISTAK(12)
!        THE INTEGER VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER ITEMP
!        STARTING LOCATION IN THE STACK FOR THE
!        TEMPORARY STORAGE ARRAY
!     INTEGER LDSTAK
!         SIZE OF THE STACK AREA ALLOCATED IN THE USERS MAIN PROGRAM
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS TO BE ANALYZED
!     INTEGER NALL0
!        THE NUMBER OF ALLOCATIONS OUTSTANDING AT THE TIME THAT THIS
!        ROUTINE WAS CALLED.
!     INTEGER NG
!        THE COMPUTED NUMBER OF GROUPS WITH
!        DIFFERENT POSITIVE TAG VALUES
!     CHARACTER*1 NMSUB(6)
!        SUBROUTINE NAME
!     INTEGER NPRT
!        THE VARIABLE CONTROLLING AUTOMATIC PRINTOUT
!        IF =0, PRINTOUT IS SUPRESSED
!        OTHERWISE PRINTOUT IS PROVIDED
!     INTEGER NZTAGS
!        THE NUMBER OF OBSERVATIONS WITH POSITIVE NON-ZERO WIEGHTS
!     INTEGER RANKS
!        THE STARTING LOCATION IN STACK AREA FOR THE RANKS OF Y
!     DOUBLE PRECISION RSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER SRANK
!        THE STARTING LOCATION IN STACK FOR THE SUM OF RANKS
!     DOUBLE PRECISION TAG(N)
!        THE VECTOR OF TAG VALUES
!     DOUBLE PRECISION Y(N)
!        THE VECTOR OF OBSERVATIONS
!
      DATA   NMSUB(1), NMSUB(2), NMSUB(3), NMSUB(4), NMSUB(5), NMSUB(6)
     +     /      'A',      'O',      'V',      '1',      'S',      ' '/
!
!     SET UP FRAMEWORK VARIABLES FOR NUMBER TYPES
!
      INT = 2
      IFP = 4
!
      CALL IPRINT(IPRT)
!
!     CHECK FOR ERRORS IN PARAMETERS, INITIALIZE STACK, AND SET
!     NALL0.
!
      CALL AOV1ER(Y, TAG, N, IGSTAT, NZTAGS, NG, LDSTAK, NMSUB, INDEX,
     +   0, NALL0)
!
      IF (IERR.EQ.0) GO TO 20
!
!     PRINT CORRECT FORM OF CALL STATEMENT AND RETURN TO CALLER
!
      IERR = 1
      WRITE (IPRT,1000)
      RETURN
!
!     PRINT HEADING IF DESIRED
!
   20 IF (NPRT.EQ.0) GO TO 30
      CALL AOV1HD(IPRT)
!
!     SET UP ADDITIONAL WORK VECTORS FOR AOV1MN AS CALLED FROM AOV1S
!
   30 SRANK = STKGET(NG,IFP)
      GPMIN = STKGET(NG,IFP)
      GPMAX = STKGET(NG,IFP)
      B10 = STKGET(NG,IFP)
      RANKS = STKGET(NZTAGS,IFP)
      ITEMP = STKGET(NZTAGS,INT)
!
      CALL AOV1MN(Y, TAG, N,
     +            GSTAT(1), GSTAT(IGSTAT+1),
     +            GSTAT(2*IGSTAT+1), GSTAT(3*IGSTAT+1),
     +            NPRT, ISTAK(INDEX), RSTAK(SRANK), RSTAK(GPMIN),
     +            RSTAK(GPMAX), RSTAK(B10), RSTAK(RANKS),
     +            ISTAK(ITEMP), NG, NZTAGS)
!
!     RELEASE THE STACK AREA
!
      CALL STKCLR(NALL0)
!
      RETURN
!
!     FORMAT STATEMENTS
!
 1000 FORMAT(/42H THE CORRECT FORM OF THE CALL STATEMENT IS//
     + '       CALL AOV1S (Y, TAG, N, LDSTAK, NPRT, GSTAT, IGSTAT, NG)')
      END
