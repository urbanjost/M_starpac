!DCKZRO
     subroutine dckzro(j, par, npar, mdl, xm, n, nrow, m, ixm, pv,&
     &   pvtemp, msg, lmsg, fd, parmx, pvpstp, stp)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE RECHECKS THE DERIVATIES IN THE CASE WHERE THE FINITE
!     DIFFERENCE DERIVATIVE DISAGREES WITH THE ANALYTIC DERIVATIVE AND T
!     ANALYTIC DERIVATIVE IS ZERO.
!
!     WRITTEN BY  -  ROBERT B. SCHNABEL (CODED BY JANET R. DONALDSON)
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  APRIL 2, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   fd,parmx,pv,pvpstp,stp
     integer&
     &   ixm,j,lmsg,m,n,npar,nrow
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   par(npar),pvtemp(n),xm(ixm,m)
     integer&
     &   msg(lmsg)
!
!  SUBROUTINE ARGUMENTS
       external mdl
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   cd,fplrs,pvmstp,temp,third
!
!  EXTERNAL FUNCTIONS
     real(kind=wp) ::&
     &   d1mach
!       EXTERNAL D1MACH
!
!  INTRINSIC FUNCTIONS
      intrinsic abs,min
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: CD
!        THE CENTRAL DIFFERENCE QUOTIENT DERIVATIVE WITH
!        RESPECT TO THE JTH PARAMETER.
!     REAL(KIND=WP) :: FD
!        THE FORWARD DIFFERENCE QUOTIENT DERIVATIVE WITH RESPECT TO THE
!        JTH PARAMETER.
!     REAL(KIND=WP) :: FPLRS
!        THE FLOATING POINT LARGEST RELATIVE SPACING.
!     INTEGER IXM
!        THE FIRST DIMENSION OF THE INDEPENDENT VARIABLE ARRAY.
!     INTEGER J
!        THE INDEX OF THE PARTIAL DERIVATIVE BEING EXAMINED.
!     INTEGER LMSG
!        THE LENGTH OF THE VECTOR MSG.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     EXTERNAL MDL
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        PREDICTED VALUES BASED ON THE CURRENT PARAMETER ESTIMATES.
!     INTEGER MSG(LMSG)
!        AN ARRAY USED TO STORE MESSAGE PARAMETERS.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NPAR
!        THE NUMBER OF UNKNOWN PARAMETERS IN THE MODEL.
!     INTEGER NROW
!        THE NUMBER OF THE ROW OF THE INDEPENDENT VARIABLE ARRAY AT
!        WHICH THE DERIVATIVE IS TO BE CHECKED.
!     REAL(KIND=WP) :: PAR(NPAR)
!        THE ARRAY IN WHICH THE CURRENT ESTIMATES OF THE UNKNOWN
!        PARAMETERS ARE STORED.
!     REAL(KIND=WP) :: PARMX
!        THE MAXIMUM OF THE CURRENT PARAMETER ESTIMATE AND THE TYPICAL
!        VALUE OF THAT PARAMETER.
!     REAL(KIND=WP) :: PV
!        THE SCALAR IN WHICH THE PREDICTED VALUE FROM THE MODEL FOR
!        ROW   NROW   IS STORED.
!     REAL(KIND=WP) :: PVMSTP
!        THE PREDICTED VALUE FOR ROW    NROW   OF THE MODEL
!        BASED ON THE CURRENT PARAMETER ESTIMATES
!        FOR ALL BUT THE JTH PARAMETER VALUE, WHICH IS PAR(J) - STP.
!     REAL(KIND=WP) :: PVPSTP
!        THE PREDICTED VALUE FOR ROW    NROW   OF THE MODEL
!        BASED ON THE CURRENT PARAMETER ESTIMATES
!        FOR ALL BUT THE JTH PARAMETER VALUE, WHICH IS PAR(J) + STP.
!     REAL(KIND=WP) :: PVTEMP(N)
!        THE VECTOR OF PREDICTED VALUES FROM THE MODEL.
!     REAL(KIND=WP) :: STP
!        THE STEP SIZE CURRENTLY BEING EXAMINED FOR THE FINITE DIFFERENC
!        DERIVATIVE
!     REAL(KIND=WP) :: TEMP
!        A TEMPORARY LOCATION IN WHICH THE CURRENT ESTIMATE OF THE JTH
!        PARAMETER IS STORED.
!     REAL(KIND=WP) :: THIRD
!        THE VALUE 1/3.
!     REAL(KIND=WP) :: XM(IXM,M)
!        THE ARRAY IN WHICH ONE ROW OF THE INDEPENDENT VARIABLE ARRAY
!        IS STORED.
!
      fplrs = d1mach(4)
!
!     RECALCULATE NUMERICAL DERIVATIVE USING CENTRAL DIFFERENCE AND STEP
!     SIZE OF 2*STP
!
      temp = par(j)
      par(j) = par(j) - stp
      call mdl(par, npar, xm, n, m, ixm, pvtemp)
      par(j) = temp
!
      pvmstp = pvtemp(nrow)
!
      cd = (pvpstp-pvmstp)/(2.0_wp*stp)
!
!     CHECK FOR DISAGREEMENT
!
      if (cd.ne.0.0_wp) go to 10
!
!     NUMERICAL AND ANALYTIC DERIVATIVES NOW AGREE, BUT BOTH EQUAL ZERO,
!     INDICATING THAT DERIVATIVES SHOULD BE RECHECKED AT ANOTHER POINT.
!
      if (msg(1).eq.0) msg(1) = 1
      msg(j+1) = 3
      return
!
   10 continue
!
!     NUMERICAL AND ANALYTIC DERIVATIVE STILL DO NOT AGREE.
!
!     CHECK IF NUMERICAL DERIVATIVE IS CLOSE TO ZERO.
!
      third = 1.0_wp/3.0_wp
     if (min(abs(cd), abs(fd))*parmx .gt. abs(pv*fplrs**third))&
     &   go to 20
!
!     NUMERICAL DERIVATIVE IS CLOSE TO ZERO
!
      if (msg(1).eq.0) msg(1) = 1
      msg(j+1) = 4
      return
!
   20 continue
!
!     NUMERICAL DERIVATIVE NOT CLOSE TO ZERO
!
      msg(1) = 2
      msg(j+1) = 5
      return
!
      end
