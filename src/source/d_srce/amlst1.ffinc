!AMLST1
     subroutine amlst1 (iamhd, par, npar, mspect, nfac, vcvl, lvcvl,&
     &  scale, lscale, stpt, lstpt, iparmn, iparmx, lbltyp, t975, ifixd)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE PRINTS THE PARAMETERS FOR THE ARIMA ROUTINES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 2, 1985
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   t975
     integer&
     &   iamhd,iparmn,iparmx,lbltyp,lscale,lstpt,lvcvl,nfac,npar
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   par(*),scale(*),stpt(*),vcvl(*)
     integer&
     &   ifixd(*),mspect(nfac,4)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   fplm,pll,pul,ratio,sdpar
     integer&
     &   iprt,j,k,l,ll,lpar,order
!
!  LOCAL ARRAYS
     character&
     &   fixed(3)*1
!
!  EXTERNAL FUNCTIONS
!      REAL(KIND=WP) ::
!     +   D1MACH
!      EXTERNAL D1MACH
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL FIXPRT,IPRINT
!
!  INTRINSIC FUNCTIONS
      intrinsic sqrt
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     CHARACTER*1 FIXED(3)
!        THE CHARACTERS USED TO LABEL THE PARAMETERS FIXED OR NOT.
!     REAL(KIND=WP) :: FPLM
!        THE FLOATING POINT LARGEST MAGNITUDE.
!     INTEGER IAMHD
!        THE INDICATOR VALUE USED TO DESIGNATE THE TYPE OF LIST
!        TO BE GENERATED
!        IF IAMHD=1, THE LIST IS FOR THE INITIAL SUMMARY OF THE
!                    ESTIMATION ROUTINES.
!        IF IAMHD=2, THE LIST IS FOR THE INITIAL REPORT OF THE
!                    FORECASTING ROUTINES.
!        IF IAMHD=3, THE LIST IS FOR THE FINAL REPORT OF THE
!                    ESTIMATION ROUTINES.
!     INTEGER IFIXD(NPAR)
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.
!        IF IFIXED(I).NE.0, THEN PAR(I) WILL BE HELD FIXED.
!        IF IFIXED(I).EQ.0, THEN PAR(I) WILL BE OPTIMIZED.
!     INTEGER IPARMN
!        THE SMALLEST PARAMETER INDEX INCLUDED IN THIS TERM.
!     INTEGER IPARMX
!        THE LARGEST PARAMETER INDEX INCLUDED IN THIS TERM.
!     INTEGER IPRT
!        THE UNIT NUMBER FOR PRINTED OUTPUT.
!     INTEGER LVCVL
!        THE DIMENSION OF VECTOR VCVL.
!     INTEGER J
!        AN INDEX VARIABLE.
!     INTEGER L
!        AN INDEX VARIABLE.
!     INTEGER LBLTYP
!        THE TYPE OF LABLE TO BE PRINTED, WHERE
!        1 INDICATES THE TERM IS AUTOREGRESSIVE AND
!        2 INDICATES THE TERM IS MOVING AVERAGE
!     INTEGER LL
!        AN INDEX VARIABLE.
!     INTEGER LPAR
!        AN INDEX VARIABLE.
!     INTEGER LSCALE
!        THE DIMENSION OF VECTOR SCALE.
!     INTEGER LSTPT
!        THE DIMENSION OF VECTOR STPT.
!     INTEGER MSPECT(NFAC,4)
!        THE ARRAY CONTAINING THE VALUES OF P, D, Q, AND S FOR EACH FACT
!     INTEGER NFAC
!        THE NUMBER OF FACTORS IN THE MODEL
!     INTEGER NPAR
!        THE NUMBER OF PARAMETERS IN THE MODEL.
!     INTEGER ORDER
!        THE ORDER OF B FOR THE PARAMETER BEING PRINTED
!     REAL(KIND=WP) :: PAR(NPAR)
!        THE CURRENT ESTIMATES OF THE PARAMETERS.
!     REAL(KIND=WP) :: PLL
!        THE LOWER CONFIDENCE LIMIT FOR A GIVEN PARAMETER.
!     REAL(KIND=WP) :: PUL
!        THE UPPER CONFIDENCE LIMIT FOR A GIVEN PARAMETER.
!     REAL(KIND=WP) :: RATIO
!        THE RATIO OF A GIVEN PARAMETER VALUE TO ITS STANDARD ERROR.
!     REAL(KIND=WP) :: SCALE(LSCALE)
!        THE TYPICAL SIZE OF THE PARAMETERS.
!     REAL(KIND=WP) :: SDPAR
!        THE STANDARD DEVIATION OF A GIVEN PARAMETER VALUE.
!     REAL(KIND=WP) :: STPT(LSTPT)
!        THE STEP SIZE ARRAY.
!     REAL(KIND=WP) :: T975
!        THE VALUE OF THE 97.5 PERCENT POINT FUNCTION FOR THE
!        T DISTRIBUTION.
!     REAL(KIND=WP) :: VCVL(LVCVL)
!        THE LOWER HALF OF THE VARIANCE-COVARIANCE MATRIX, STORED
!        ROW WISE.
!
!
      fplm = d1mach(2)
!
      call iprint(iprt)
!
!     PRINT NEXT SET OF TERMS
!
      lpar = 0
      do 1 j=1,iparmx
         if (ifixd(j).eq.0) lpar = lpar + 1
    1 continue

      do 40 j=1,nfac
        if ((mspect(j,lbltyp).eq.0) .and. (lbltyp.ne.2)) go to 40
        if (lbltyp.ne.2) iparmx = iparmx + mspect(j,lbltyp)
        if (lbltyp.eq.2) iparmx = iparmx + 1
        order = 0
        do 30 l = iparmn, iparmx
          order = order + mspect(j,4)
          if (iamhd.eq.2) go to 25
          call fixprt(ifixd(l), fixed)
         if (lbltyp.eq.1) write(iprt, 1000) l, j, order,&
     &      (fixed(k),k=1,3), par(l)
         if (lbltyp.eq.2) write(iprt, 1004) l,&
     &      (fixed(k),k=1,3), par(l)
         if (lbltyp.eq.3) write(iprt, 1005) l, j, order,&
     &      (fixed(k),k=1,3), par(l)
            if (iamhd.eq.3) go to 10
!
            if (ifixd(l).eq.0) go to 5
            write (iprt, 1007)
            go to 10
!
    5       continue
            if (scale(1).le.0.0_wp) write (iprt, 1001) stpt(l)
            if (scale(1).gt.0.0_wp) write (iprt, 1002) scale(l), stpt(l)
   10     continue
          if (iamhd .eq. 1) go to 30
!
          if (ifixd(l).eq.0) go to 20
          write(iprt, 1006)
          go to 30
!
   20     continue
          lpar = lpar + 1
          ratio = fplm
          ll = lpar*(lpar-1)/2 + lpar
          if (vcvl(ll).gt.0.0_wp) ratio = par(l)/sqrt(vcvl(ll))
          sdpar = sqrt(vcvl(ll))
          pll = par(l) - t975*sdpar
          pul = par(l) + t975*sdpar
          write(iprt, 1003) sdpar, ratio, pll, pul
          go to 30
   25     continue
          if (lbltyp.eq.1) write(iprt, 1010) l, j, order, par(l)
          if (lbltyp.eq.2) write(iprt, 1014) l, par(l)
          if (lbltyp.eq.3) write(iprt, 1015) l, j, order, par(l)
   30   continue
        iparmn = iparmx + 1
   40 continue
!
      return
!
!     FORMAT STATEMENTS
!
 1000 format(1x, i5, 2x, 'AR (FACTOR', i2, ')',4x,i5,6x,3a1,e17.8)
 1001 format ('+', 65x, 7hdefault, e17.8)
 1002 format ('+', 55x, 2e17.8)
 1003 format ('+', 55x, 4(2x, e15.8))
 1004 format(1x, i5, 13x, 'MU', 4x, '  ---' ,6x,3a1,e17.8)
 1005 format(1x, i5, 2x, 'MA (FACTOR', i2, ')',4x,i5,6x,3a1,e17.8)
 1006 format('+', 55x, 4(14x, '---'))
 1007 format('+', 69x, '---', 14x, '---')
 1010 format(1x, i5, 2x, 'AR (FACTOR', i2, ')',4x,i5,e17.8)
 1014 format(1x, i5, 13x, 'MU', 4x, '  ---' ,e17.8)
 1015 format(1x, i5, 2x, 'MA (FACTOR', i2, ')',4x,i5,e17.8)
      end
