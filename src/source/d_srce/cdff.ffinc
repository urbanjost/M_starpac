!CDFF
      function cdff(f, df1, df2)
      real(kind=wp) :: cdff
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE COMPUTES THE CUMULATIVE DISTRIBUTION FUNCTION FOR
!     THE F DISTRIBUTION.  THE APPROXIMATION USED DEPENDS ON THE
!     DEGREES OF FREEDOM IN THE NUMERATOR AND DENOMINATOR.
!     1.  IF BOTH DEGREES OF FREEDOM ARE SMALL (LESS THAN 4000),
!         THE CDF IS COMPUTED FROM THE INCOMPLETE BETA FUNCTION
!         USING EQUATION 5.45 OF STATISTICAL COMPUTING, BY KENNEDY AND
!         GENTLE.
!     2.  IF ONE OF THE DEGREES OF FREEDOM IS LARGE (GREATER THAN OR
!         EQUAL TO 4000) AND THE OTHER IS MODERATELY LARGE (GREATER THAN
!         OR EQUAL TO 100), THE CDF IS APPROXIMATED BY A NORMAL
!         DISTRIBBUTION AS SHOWN IN EQUATION 20 ON PAGE 83 OF
!         DISTRIBUTIONS IN
!         STATISTICS - CONTINUOUS UNIVARIATE DISTRIBUTIONS - 2, BY
!         JOHNSON AND KOTZ.
!     3.  IF ONE OF THE DEGREES OF FREEDOM IS SMALL (LESS THAN 100) AND
!         THE OTHER IS LARGE (EXCEEDING 4000), THE CDF IS APPROXIMATED
!         BY A CHI SQUARED DISTRIBUTION AS SHOWN IN THE THIRD EQUATION
!         ON PAGE 84 OF DISTRIBUTIONS IN STATISTICS - CONTINUOUS
!         UNIVARIATE DISTRIBUTIONS - 2, BY JOHNSON AND KOTZ.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE - DECEMBER 7, 1981
!                  THIS ROUTINE IS MODELED AFTER DATAPAC ROUTINE FCDF.
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   df1,df2,f
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   ftrans
!
!  EXTERNAL FUNCTIONS
     real(kind=wp) ::&
     &   dbetai,cdfchi,cdfnml
!       EXTERNAL DBETAI,CDFCHI,CDFNML
!
!  INTRINSIC FUNCTIONS
      intrinsic sqrt
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: DF1
!        THE DEGREES OF FREEDOM IN THE NUMERATOR.
!     REAL(KIND=WP) :: DF2
!        THE DEGREES OF FREEDOM IN THE DENOMINATOR.
!     REAL(KIND=WP) :: F
!        THE PERCENTAGE POINT FROM THE F DISTRIBUTION.
!     REAL(KIND=WP) :: FTRANS
!        TRANSFORMS OF THE F PERCENTAGE POINT, USED FOR THE VARIOUS
!        APPROXIMATING DISTRIBUTIONS.
!
!     COMMENCE BODY OF ROUTINE
!
      if (f.gt.0.0_wp) go to 5
      cdff = 0.0_wp
      return
!
    5 continue
!
      if ((df1.gt.4000.0_wp) .or. (df2.gt.4000.0_wp)) go to 10
!
!     BOTH DEGREES OF FREEDOM ARE LESS THAN OR EQUAL TO 4000.  USE
!     THE INCOMPLETE BETA FUNCTION TO COMPUTE THE F CDF.
!
      ftrans = df2 / (df2 + df1 * f)
!
      cdff = 1.0_wp - dbetai(ftrans, 0.5_wp*df2, 0.5_wp*df1)
      return
!
   10 if ((df1.le.100.0_wp) .or. (df2.le.100.0_wp)) go to 20
!
!     BOTH DEGREES OF FREEDOM EXCEED 4000.  USE THE NORMAL APPROXIMATION
!     TO COMPUTE THE F CDF.
!
     ftrans =&
    &   (((1.0_wp-(2.0_wp/(9.0_wp*df2)))*&
    &     (f**(1.0_wp/3.0_wp)))-(1.0_wp-(2.0_wp/(9.0_wp*df1)))) /&
     &   sqrt(((f**(2.0_wp/3.0_wp))/(4.5_wp*df2))+(2.0_wp/(9.0_wp*df1)))
!
      cdff = cdfnml(ftrans)
      return
!
   20 if (df1.gt.100.0_wp) go to 30
!
!     THE DEGREES OF FREEDOM IN THE DENOMINATOR EXCEEDS 4000 AND THE
!     DEGREES OF FREEDOM IN NUMERATOR IS LESS THAN OR EQUAL TO 100.
!     USE THE CHI SQUARE APPROXIMATION TO COMPUTE THE F CDF.
!
     ftrans =&
    &   (df1 + (df1/df2)*(0.5_wp*df1-1.0_wp))/&
     &   ((1.0_wp/f)+(df1/df2)*0.5_wp)
!
      cdff = cdfchi(ftrans, df1)
!
      return
!
   30 continue
!
!     THE DEGREES OF FREEDOM IN THE NUMERATOR EXCEEDS 4000 AND THE
!     DEGREES OF FREEDOM IN DENOMINATOR IS LESS THAN OR EQUAL TO 100.
!     USE THE CHI SQUARE APPROXIMATION TO COMPUTE THE F CDF.
!
     ftrans =&
     &   (df2+(df2/df1)*(0.5_wp*df2-1.0_wp))/(f+(df2/df1)*0.5_wp)
!
      cdff = 1.0_wp - cdfchi(ftrans, df2)
!
      return
!
      end
