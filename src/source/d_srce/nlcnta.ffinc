!NLCNTA
     subroutine nlcnta(y, wt, lwt, xm, n, m, ixm, mdl, drv, par, npar,&
    &   res, ldstak, ifixed, lifixd, idrvck, mit, stopss, stopp,&
    &   scale, lscale, delta, ivcvop, nprt, rsd, pv, lpv, sdpv, lsdpv,&
     &   sdres, lsdres, vcv, ivcv, nmsub, weight, save, nnzw, npare)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE CONTROLLING SUBROUTINE FOR NONLINEAR LEAST
!     SQUARES REGRESSION USING ANALYTIC (USER-SUPPLIED) DERIVATIVES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  OCTOBER 3, 1983
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   delta,rsd,stopp,stopss
     integer&
    &   idrvck,ivcv,ivcvop,ixm,ldstak,lifixd,lpv,lscale,lsdpv,&
     &   lsdres,lwt,m,mit,n,nnzw,npar,npare,nprt
     logical&
     &   save,weight
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
    &   par(*),pv(*),res(*),scale(*),sdpv(*),sdres(*),vcv(*),wt(*),&
     &   xm(*),y(*)
     integer&
     &   ifixed(*)
     character&
     &   nmsub(6)*1
!
!  SUBROUTINE ARGUMENTS
       external drv,mdl
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      real(kind=wp) :: dstak(12)
!
!  LOCAL SCALARS
     integer&
     &   isubhd,ldsmin,lstp,ndigit,neta,nrow,ntau
     logical&
     &   aprxdv,hlfrpt,page,prtfxd,wide
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   stp(1)
     integer&
     &   iptout(5)
!
!  EXTERNAL FUNCTIONS
     integer&
     &   icnti
!       EXTERNAL ICNTI
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL DCKCNT,LDSCMP,NLCNT,NLDRVA,NLER,NLHDRA,PRTCNT,STKSET
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     LOGICAL APRXDV
!        THE VARIABLE USED TO INDICATE WHETHER NUMERICAL
!        APPROXIMATIONS TO THE DERIVATIVE WERE USED (TRUE) OR NOT
!        (FALSE).
!     REAL(KIND=WP) :: DELTA
!        THE MAXIMUM CHANGE ALLOWED IN THE MODEL PARAMETERS AT THE
!        FIRST ITERATION.
!     EXTERNAL DRV
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        DERIVATIVE (JACOBIAN) MATRIX OF THE MODEL.
!     REAL(KIND=WP) :: DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     LOGICAL HLFRPT
!        THE VARIABLE WHICH INDICATES WHETHER THE DERIVATIVE
!        CHECKING ROUTINE HAS ALREADY PRINTED PART OF THE
!        INITIAL SUMMARY (TRUE) OR NOT (FALSE).
!     INTEGER IDRVCK
!        THE VARIABLE USED TO INDICATE WHETHER THE DERIVATIVES ARE
!        TO BE CHECKED (IDRVCK = 1) OR NOT (IDRVCK = 0).
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .GE. 1, ERRORS WERE DETECTED.
!     INTEGER IFIXED(LIFIXD)
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.  IF
!        IFIXED(I).NE.0, THEN PAR(I) WILL BE OPTIMIZED.  IF
!        IFIXED(I).EQ.0, THEN PAR(I) WILL BE HELD FIXED.
!        IFIXED(1).LT.0, THEN ALL PAR(I),I=1,NPAR, WILL BE OPTIMIZED..
!     INTEGER IPTOUT(5)
!        THE VARIABLE USED TO CONTROL PRINTED OUTPUT FOR EACH SECTION.
!     INTEGER ISUBHD
!        AN INDICATOR VALUE SPECIFYING SUBHEADINGS TO BE PRINTED.
!     INTEGER IVCV
!        THE FIRST DIMENSION OF THE VARIANCE COVARIANCE MATRIX VCV.
!     INTEGER IVCVOP
!        AN INDICATOR VALUE USED TO DESIGNATE WHICH OPTION IS TO BE USED
!        TO COMPUTE THE VARIANCE COVARIANCE MATRIX (VCV), WHERE
!        IVCVOP LE 0 INDICATES THE THE DEFAULT OPTION WILL BE USED
!        IVCVOP EQ 1 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                          *INVERSE(HESSIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVCVOP EQ 2 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVCVOP EQ 3 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVCVOP EQ 4 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                          *INVERSE(HESSIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVCVOP EQ 5 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVCVOP EQ 6 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVCVOP GE 7 INDICATES THE DEFAULT OPTION WILL BE USED
!     INTEGER IXM
!        THE FIRST DIMENSION OF THE INDEPENDENT VARIABLE ARRAY.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     INTEGER LIFIXD
!        THE ACTUAL LENGTH OF THE VECTOR IFIXED.
!     INTEGER LPV
!        THE ACTUAL LENGTH OF THE VECTOR PV.
!     INTEGER LSCALE
!        THE ACTUAL LENGTH OF THE VECTOR SCALE.
!     INTEGER LSDPV
!        THE ACTUAL LENGTH OF THE VECTOR SDPV.
!     INTEGER LSDRES
!        THE ACTUAL LENGTH OF THE VECTOR SDRES.
!     INTEGER LSTP
!        THE ACTUAL LENGTH OF THE VECTOR STP.
!     INTEGER LWT
!        THE ACTUAL LENGTH OF THE VECTOR WT.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     INTEGER MIT
!        THE MAXIMUM NUMBER OF ITERATIONS ALLOWED.
!     EXTERNAL MDL
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        PREDICTED VALUES BASED ON THE CURRENT PARAMETER ESTIMATE.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NDIGIT
!        THE NUMBER OF DIGITS IN THE PRINT CONTROL VALUE.
!     INTEGER NETA
!        THE NUMBER OF ACCURATE DIGITS IN THE MODEL RESULTS.
!     EXTERNAL NLDRVA
!        THE NAME OF THE ROUTINE WHICH CALCULATES THE DERIVATIVES.
!     EXTERNAL NLHDRA
!        THE NAME OF THE ROUTINE WHICH PRODUCES THE HEADING.
!     CHARACTER*1 NMSUB(6)
!        THE NAME OF THE SUBROUTINE CALLING THE ERROR CHECKING
!        SUBROUTINES.
!     INTEGER NNZW
!        THE NUMBER OF NON ZERO WEIGHTS.
!     INTEGER NPAR
!        THE NUMBER OF PARAMETERS IN THE MODEL.
!     INTEGER NPARE
!        THE NUMBER OF PARAMETERS TO BE ESTIMATED.
!     INTEGER NPRT
!        THE PARAMETER USED TO INDICATE HOW MUCH PRINTED OUTPUT IS
!        TO BE PROVIDED.
!     INTEGER NROW
!        THE NUMBER OF THE ROW OF THE INDEPENDENT VARIABLE ARRAY AT
!        WHICH THE DERIVATIVE IS TO BE CHECKED.
!     INTEGER NTAU
!        THE NUMBER OF DIGITS OF AGREEMENT REQUIRED BETWEEN THE
!        NUMERICALLY APPROXIMATED DERIVATIVES AND THE USER SUPPLIED
!        DRVITIVES.
!     LOGICAL PAGE
!        THE VARIABLE USED TO INDICATE WHETHER A GIVEN SECTION OF
!        THE OUTPUT IS TO BEGIN ON A NEW PAGE (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: PAR(NPAR)
!        THE CURRENT ESTIMATES OF THE PARAMETERS.
!     LOGICAL PRTFXD
!        THE INDICATOR VALUE USED TO DESIGNATE WHETHER THE
!        OUTPUT IS TO INCLUDE INFORMATION ON WHETHER THE
!        PARAMETER IS FIXED (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: PV(LPV)
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!     REAL(KIND=WP) :: RES(N)
!        THE RESIDUALS FROM THE FIT.
!     REAL(KIND=WP) :: RSD
!        THE VALUE OF THE RESIDUAL STANDARD DEVIATION AT THE SOLUTION.
!     LOGICAL SAVE
!        THE VARIABLE USED TO INDICATE WHETHER ANY RESULTS OTHER THAN
!        THE RESIDUALS AND PARAMETERS ARE TO BE SAVED (TRUE) OR NOT
!        (FALSE).
!     REAL(KIND=WP) :: SCALE(LSCALE)
!        A VALUE TO INDICATE USE OF THE DEFAULT VALUES OF
!        THE TYPICAL SIZE OF THE PARAMETERS.
!     REAL(KIND=WP) :: SDPV(LSDPV)
!        THE STANDARD DEVIATIONS OF THE PREDICTED VALUES.
!     REAL(KIND=WP) :: SDRES(LSDRES)
!        THE STANDARDIZED RESIDUALS.
!     REAL(KIND=WP) :: STOPP
!        THE STOPPING CRITERION FOR THE TEST BASED ON THE MAXIMUM SCALED
!        RELATIVE CHANGE IN THE ELEMENTS OF THE MODEL PARAMETER VECTOR
!     REAL(KIND=WP) :: STOPSS
!        THE STOPPING CRITERION FOR THE TEST BASED ON THE RATIO OF THE
!        PREDICTED DECREASE IN THE RESIDUAL SUM OF SQUARES (COMPUTED
!        BY STARPAC) TO THE CURRENT RESIDUAL SUM OF SQUARES ESTIMATE.
!     REAL(KIND=WP) :: STP(1)
!        THE DUMMY STEP SIZE ARRAY.
!     REAL(KIND=WP) :: VCV(IVCV,NPAR)
!        THE VARIANCE-COVARIANCE MATRIX.
!     LOGICAL WEIGHT
!        THE VARIABLE USED TO INDICATE WHETHER WEIGHTED ANALYSIS IS TO
!        BE PERFORMED (TRUE) OR NOT (FALSE).
!     LOGICAL WIDE
!        THE VARIABLE USED TO INDICATE WHETHER THE HEADING SHOULD
!        BE FULL WIDTH (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: WT(LWT)
!        THE WEIGHTS.
!     REAL(KIND=WP) :: XM(IXM,M)
!        THE ARRAY IN WHICH ONE ROW OF THE INDEPENDENT VARIABLE ARRAY
!        IS STORED.
!     REAL(KIND=WP) :: Y(N)
!        THE ARRAY OF THE DEPENDENT VARIABLE.
!
!     SET VARIOUS PROGRAM VALUES
!
      hlfrpt = .false.
      aprxdv = .false.
      prtfxd = .true.
      stp(1) = 0.0_wp
      lstp = 1
      neta = 0
      ntau = 0
      nrow = 0
!
      wide = .true.
      page = .false.
!
      ndigit = 5
!
!     SET UP FOR ERROR CHECKING
!
      ierr = 0
      if ((ifixed(1).ge.0) .and. (npar.ge.1)) then
         npare = icnti(ifixed,npar,0)
      else
         npare = npar
      end if
!
     call ldscmp(6, 0, 60+2*npar, 0, 0, 0, 'D',&
     &            94+n*(3+npar)+npare*(3*npare+35)/2, ldsmin)
!
     call nler (nmsub, weight, wt, lwt, n, m, ixm,&
    &   ifixed, lifixd, npar, npare,&
     &   ldstak, ldsmin, stp, lstp, scale, lscale, ivcv, save, nnzw)
!
      if (ierr.ne.0) return
!
      call stkset(ldstak, 4)
!
!     SET PRINT CONTROL VALUES
!
      call prtcnt(nprt, ndigit, iptout)
!
      if (idrvck.eq.0) go to 10
!
!     CHECK DERIVATIVES, IF DESIRED
!
      isubhd = 1
     call dckcnt(xm, n, m, ixm, mdl, drv, par, npar, neta, ntau,&
    &   scale, lscale, nrow, iptout(1), nlhdra, page, wide, isubhd,&
     &   hlfrpt, prtfxd, ifixed, lifixd)
!
!     CHECK FOR DEFINITE ERROR IN DERIVATIVES
!
      if (ierr.le.2) go to 10
      ierr = 1
      return
!
   10 continue
!
      ierr = 0
!
     call nlcnt(y, wt, lwt, xm, n, m, ixm, mdl, nldrva, aprxdv, drv,&
    &   par, npar, res, ifixed, lifixd, stp, lstp, mit, stopss, stopp,&
    &   scale, lscale, delta, ivcvop, rsd, pv, lpv, sdpv, lsdpv,&
    &   sdres, lsdres, vcv, ivcv, weight, save, nnzw, npare, nlhdra,&
     &   page, wide, iptout, ndigit, hlfrpt)
!
      return
!
      end
