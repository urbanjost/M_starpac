!FLTMD
      SUBROUTINE FLTMD (X, Y, N, KMD, SYM)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE APPLIES ONE MODIFIED DANIEL FILTERS TO A SYMMETRIC
!     SERIES.  THIS ROUTINE IS ADAPTED FROM BLOOMFIELDS ROUTINE MODDAN.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 7, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) ::
     &   SYM
      INTEGER
     &   KMD,N
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     &   X(N),Y(N)
!
!  LOCAL SCALARS
      REAL(KIND=WP) ::
     &   CON
      INTEGER
     &   I,J,KUSED,LIM
!
!  EXTERNAL FUNCTIONS
      REAL(KIND=WP) ::
     &   EXTEND
!       EXTERNAL EXTEND
!
!  INTRINSIC FUNCTIONS
      INTRINSIC MOD
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: CON
!        A FACTOR USED IN THE COMPUTATIONS.
!     INTEGER I
!        AN INDEXING VARIABLE.
!     INTEGER J
!        AN INDEXING VARIABLE.
!     INTEGER KMD
!        THE INPUT FILTER LENGTH.
!     INTEGER KUSED
!        THE FILTER LENGTH ACTUALLY USED.
!     INTEGER LIM
!        A LOOP LIMIT.
!     INTEGER N
!        THE NUMBER OF POINTS IN THE SERIES TO BE FILTERED.
!     REAL(KIND=WP) :: SYM
!        AN INDICATOR VARIABLE USED TO DESIGNATE WHETHER THE SERIES
!        IS SYMMETRIC (SYM = 1.0_WP) OR NOT (SYM = -1.0_WP).
!     REAL(KIND=WP) :: X(N)
!        ON INPUT, THE SERIES TO BE FILTERED.  ON OUTPUT, THE
!        SMOOTHED SERIES.
!     REAL(KIND=WP) :: Y(N)
!        ON INPUT, A WORK VECTOR.  ON OUTPUT, THE INPUT SERIES X.
!
!
      DO 10 I = 1, N
         Y(I) = X(I)
   10 CONTINUE
!
      IF (KMD .LE. 0) RETURN
!
      KUSED = KMD + MOD(KMD,2)
      IF (KUSED .GT. N) KUSED = KUSED - 2
!
      LIM = KUSED-1
      CON = 1.0_WP / (2*KUSED)
      DO 40 I = 1, N
         X(I) = Y(I)
         IF (LIM .EQ. 0) GO TO 30
         DO 20 J = 1, LIM
            X(I) = X(I) + EXTEND(Y, I-J, N, SYM)
     &         + EXTEND(Y, I+J, N, SYM)
   20    CONTINUE
   30    X(I) = (X(I) + (EXTEND(Y, I-KUSED, N, SYM)
     &      + EXTEND(Y, I+KUSED, N, SYM)) * 0.5_WP) * CON
   40 CONTINUE
!
      RETURN
!
      END
