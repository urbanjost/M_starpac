!PGMS
     subroutine pgms (yfft, n, nfft, lyfft, iextnd, nf, per, lper,&
     &   freq, lfreq, nprt)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE USER CALLABLE ROUTINE FOR COMPUTING
!     THE (RAW) PERIODOGRAM OF A SERIES (LONG CALL).
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 7, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   iextnd,lfreq,lper,lyfft,n,nf,nfft,nprt
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   freq(*),per(*),yfft(*)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     integer&
     &   iprt,nfft2
     logical&
     &   err01,err02,err03,err04,err05,head
!
!  LOCAL ARRAYS
     character&
     &   llfreq(8)*1,llper(8)*1,llyfft(8)*1,ln(8)*1,nmsub(6)*1
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL EISGE,ENFFT,IPRINT,PGMMN
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     LOGICAL ERR01, ERR02, ERR03, ERR04, ERR05
!        VALUE(S) INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     REAL(KIND=WP) :: FREQ(LFREQ)
!        THE ARRAY IN WHICH THE FREQUENCIES CORRESPONDING TO THE
!        INTEGRATED SPECTRUM VALUES ARE STORED.
!     LOGICAL HEAD
!        A VARIABLE USED TO INDICATE WHETHER A HEADING IS NEEDED FOR
!        ERROR MESSAGES (TRUE) OR NOT (FALSE).
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER IEXTND
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER ZERO
!        (IEXTND .EQ. 0) OR THE SERIES MEAN (IEXTND .NE. 0) IS TO BE
!        USED TO EXTEND THE SERIES.
!     INTEGER IPRT
!        THE LOGICAL UNIT USED FOR PRINTED OUTPUT.
!     INTEGER LFREQ
!        THE LENGTH OF THE ARRAY FREQ.
!     CHARACTER*1 LLFREQ(8), LLPER(8), LLYFFT(8), LN(8)
!        THE ARRAY(S) CONTAINING THE NAME(S) OF THE PARAMETER(S) CHECKED
!        FOR ERRORS.
!     INTEGER LPER
!        THE LENGTH OF THE ARRAY PER.
!     INTEGER LYFFT
!        THE LENGTH OF THE VECTOR YFFT.
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS.
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES AT WHICH THE PERIODOGRAM IS
!        TO BE COMPUTED.
!     INTEGER NFFT
!        THE EFFECTIVE LENGTH OF THE SERIES TO BE TRANSFORMED.
!     INTEGER NFFT2
!        THE EFFECTIVE SERIES LENGTH ACTUALLY USED.
!     INTEGER NPRT
!        THE VARIABLE CONTROLING PRINTED OUTPUT, WHERE
!        IF NPRT .LE. -2, THE OUTPUT CONSISTS OF A PAGE PLOT OF THE
!                         PERIODOGRAM ON A LOG-LINEAR SCALE,
!        IF NPRT .EQ. -1, THE OUTPUT CONSISTS OF A PAGE PLOT OF THE
!                         PERIODOGRAM IN DECIBELS ON A LINEAR SCALE,
!        IF NPRT .EQ.  0, THE OUTPUT IS SUPPRESSED,
!        IF NPRT .EQ.  1, THE OUTPUT CONSISTS OF A VERTICAL PLOT OF THE
!                         PERIODOGRAM IN DECIBELS ON A LINEAR SCALE.
!        IF NPRT .GE.  2, THE OUTPUT CONSISTS OF A VERTICAL PLOT OF THE
!                         PERIODOGRAM ON A LOG-LINEAR SCALE,
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THIS SUBROUTINE.
!     REAL(KIND=WP) :: PER(LPER)
!        THE ARRAY IN WHICH THE PERIODOGRAM IS STORED.
!     REAL(KIND=WP) :: YFFT(LYFFT)
!        THE ARRAY CONTAINING THE OBSERVED TIME SERIES.
!
!     SET UP NAME ARRAYS
!
     data&
    &  nmsub(1),  nmsub(2),  nmsub(3),  nmsub(4),  nmsub(5),  nmsub(6)&
     & /     'P',       'G',       'M',       'S',       ' ',       ' '/
     data&
    & llfreq(1), llfreq(2), llfreq(3), llfreq(4), llfreq(5),&
    &  llfreq(6), llfreq(7), llfreq(8)&
     &  /'L','F','R','E','Q',' ',' ',' '/
     data&
    & llper(1), llper(2), llper(3), llper(4), llper(5),&
     &  llper(6), llper(7), llper(8) /'L','P','E','R',' ',' ',' ',' '/
     data&
    & llyfft(1), llyfft(2), llyfft(3), llyfft(4), llyfft(5),&
    &  llyfft(6), llyfft(7), llyfft(8)&
     &  /'L','Y','F','F','T',' ',' ',' '/
     data&
    & ln(1), ln(2), ln(3), ln(4), ln(5), ln(6), ln(7), ln(8)&
     & /'N',' ',' ',' ',' ',' ',' ',' '/
!
!     SET UP FOR ERROR CHECKING
!
      ierr = 0
      head = .true.
!
!     CALL ERROR CHECKING ROUTINES
!
      call eisge(nmsub, ln, n, 17, 1, head, err01, ln)
      if (err01) go to 5
!
      call enfft(nmsub, nfft, 2, n, lyfft, nfft2, head, err02)
      nf = nfft2/2
!
      call eisge(nmsub, llyfft, lyfft, nfft2, 9, head, err03, llyfft)
!
      call eisge(nmsub, llper, lper, nf, 9, head, err04, llper)
!
      call eisge(nmsub, llfreq, lfreq, nf, 9, head, err05, llfreq)
!
      if (err02 .or. err03 .or. err04 .or. err05) go to 5
      go to 10
!
    5 continue
      ierr = 1
      call iprint (iprt)
      write (iprt, 1000)
      return
!
   10 continue
!
     call pgmmn (yfft, n, nfft2, iextnd, nf, per, lper, yfft, freq,&
     &   lfreq, nprt, nmsub)
!
      return
!
!     FORMAT STATEMENTS
!
1000 format (/42h the correct form of the call statement is//&
    &  '       CALL PGMS (YFFT, N, NFFT, LYFFT,'/&
     &  '      +           IEXTND, NF, PER, LPER, FREQ, LFREQ, NPRT)')
      end
