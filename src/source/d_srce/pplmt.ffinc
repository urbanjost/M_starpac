!PPLMT
      SUBROUTINE PPLMT (YM, YMMISS, X, XMISS, N, M, IYM, YLB, YUB, YMN,
     +  YMX, XLB, XUB, XMN, XMX, ERROR, NMSUB, MISS)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE SETS THE PLOT LIMITS FOR PAGE PLOTS
!     WITH MISSING VALUES.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  JANUARY 21, 1982
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) ::
     +   XLB,XMISS,XMN,XMX,XUB,YLB,YMN,YMX,YUB
      INTEGER
     +   IYM,M,N
      LOGICAL
     +   ERROR,MISS
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     +   X(N),YM(IYM,M),YMMISS(M)
      CHARACTER
     +   NMSUB(6)*1
!
!  LOCAL SCALARS
      INTEGER
     +   I,II,IPRT,J
      LOGICAL
     +   HEAD,SETLMT,SKPROW
!
!  EXTERNAL FUNCTIONS
      LOGICAL
     +   MVCHK
      EXTERNAL MVCHK
!
!  EXTERNAL SUBROUTINES
      EXTERNAL ADJLMT,EHDR,IPRINT
!
!  INTRINSIC FUNCTIONS
      INTRINSIC MAX,MIN
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     LOGICAL ERROR
!        A VALUE INDICATING WHETHER AN ERROR WAS DETECTED (TRUE)
!        OR NOT (FALSE).
!     LOGICAL HEAD
!        PRINT HEADING (HEAD=TRUE) OR NOT (HEAD=FALSE).
!     INTEGER I, II
!        INDEXING VARIABLES.
!     INTEGER IPRT
!        ...
!     INTEGER IYM
!        ACTUAL ROW DIMENSION OF YM DECLARED IN THE USERS MAIN PROGRAM
!     INTEGER J
!        AN INDEX VARIABLE.
!     INTEGER M
!        THE NUMBER OF VECTORS IN YM
!     LOGICAL MISS
!        INDICATOR VARIABLE USED TO DESIGNATE WHETHER MISSING VALUES
!        MAY BE PRESENT (MISS = .TRUE.) OR NOT (MISS = .FALSE.)
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS .
!     CHARACTER*1 NMSUB(6)
!        THE CHARACTERS OF THE CALLING ROUTINES NAME.
!     LOGICAL SETLMT
!        AN INDICATOR VARIABLE USED TO DETERMINE IF STARTING VALUES
!        FOR XMN, XMX, YMN, YMX HAVE BEEN FOUND.
!     LOGICAL SKPROW
!        AN INDICATOR VARIABLE USED TO DESIGNATE WHETHER ALL
!        OBSERVATIONS IN A GIVEN ROW OF YM ARE UNUSED (TRUE)
!        OR NOT (FALSE).
!     REAL(KIND=WP) :: X(N)
!        THE ARRAY CONTAINING THE INDEPENDENT VARIABLE.
!     REAL(KIND=WP) :: XLB
!        THE USER SUPPLIED X-AXIS LOWER BOUND.
!     REAL(KIND=WP) :: XMISS
!        THE USER SUPPLIED CODE WHICH IS USED TO DETERMINE WHETHER OR
!        NOT AN OBSERVATION IS MISSING.
!        IF X(I) = XMISS, THE VALUE IS ASSUMED MISSING, OTHERWISE
!        IT IS NOT.
!     REAL(KIND=WP) :: XMN, XMX
!        THE X-AXIS LOWER AND UPPER LIMITS ACTUALLY USED.
!     REAL(KIND=WP) :: XUB
!        THE USER SUPPLIED X-AXIS UPPER BOUNDS.
!     REAL(KIND=WP) :: YLB
!        THE USER SUPPLIED Y-AXIS LOWER BOUND.
!     REAL(KIND=WP) :: YM(IYM,M)
!        THE ARRAY CONTAINING THE DEPENDENT VARIABLE(S).
!     REAL(KIND=WP) :: YMMISS(M)
!        THE USER SUPPLIED CODE WHICH IS USED TO DETERMINE WHETHER OR
!        NOT AN OBSERVATION IS MISSING.
!        IF YM(I,J) = YMMISS(J), THE VALUE IS ASSUMED MISSING, OTHERWISE
!        IT IS NOT.
!     REAL(KIND=WP) :: YMN, YMX
!        THE Y-AXIS LOWER AND UPPER LIMITS ACTUALLY USED.
!     REAL(KIND=WP) :: YUB
!        THE USER SUPPLIED Y-AXIS UPPER BOUNDS.
!
      ERROR = .FALSE.
!
      IF ((XLB .LT. XUB) .AND. (YLB .LT. YUB)) THEN
!
!       SET LIMITS TO USER SPECIFIED VALUES
!
        XMN = XLB
        XMX = XUB
        YMN = YLB
        YMX = YUB
!
      ELSE
!
!       SET LIMITS TO RANGE OF VALUES WITHIN ANY USER SPECIFIED VALUES
!
        SETLMT = .FALSE.
        II = 1
!
!       FIND FIRST VALUE TO BE PLOTTED
!
        DO 20 I=1,N
           IF (MISS .AND. MVCHK(X(I),XMISS)) GO TO 20
           IF ((XLB.LT.XUB) .AND. ((X(I).LT.XLB) .OR.
     +        (XUB.LT.X(I)))) GO TO 20
           XMN = X(I)
           XMX = X(I)
           DO 10 J=1,M
              IF (MISS .AND. MVCHK(YM(I,J),YMMISS(J))) GO TO 10
              IF ((YLB.LT.YUB) .AND. ((YM(I,J).LT.YLB) .OR.
     +           (YUB.LT.YM(I,J)))) GO TO 10
              IF (SETLMT) GO TO 5
              YMN = YM(I,J)
              YMX = YM(I,J)
              SETLMT = .TRUE.
              II = I + 1
              GO TO 10
    5         YMN = MIN(YMN, YM(I,J))
              YMX = MAX(YMX, YM(I,J))
   10      CONTINUE
           IF (SETLMT) GO TO 30
   20   CONTINUE
!
   30   IF (II.LE.1) THEN
!
!         NO VALUES TO BE PLOTTED.  PRINT ERROR MESSAGE
!
          ERROR = .TRUE.
          CALL IPRINT(IPRT)
          HEAD = .TRUE.
          CALL EHDR(NMSUB,HEAD)
          IF ((YLB.GE.YUB) .AND. (XLB.GE.XUB)) THEN
            WRITE (IPRT, 1010)
          ELSE
            WRITE (IPRT, 1020)
          END IF
          WRITE (IPRT, 1030)
!
        ELSE
!
!         FIND LIMITS FROM REMAINING VALUES
!
          IF (II.LE.N) THEN
            DO 50 I=II,N
               IF (MISS .AND. MVCHK(X(I),XMISS)) GO TO 50
               IF ((XLB.LT.XUB) .AND. ((X(I).LT.XLB) .OR.
     +            (XUB.LT.X(I)))) GO TO 50
               SKPROW = .TRUE.
               DO 40 J=1,M
                  IF (MISS .AND. MVCHK(YM(I,J),YMMISS(J))) GO TO 40
                  IF ((YLB.LT.YUB) .AND. ((YM(I,J).LT.YLB) .OR.
     +               (YUB.LT.YM(I,J)))) GO TO 40
                  SKPROW = .FALSE.
                  YMN = MIN(YMN, YM(I,J))
                  YMX = MAX(YMX, YM(I,J))
   40          CONTINUE
               IF (SKPROW) GO TO 50
               XMN = MIN(XMN, X(I))
               XMX = MAX(XMX, X(I))
   50       CONTINUE
          END IF
        END IF
!
        IF (YLB.LT.YUB) THEN
!
!       SET Y AXIS LIMITS TO USER SUPPLIED VALUES
!
          YMN = YLB
          YMX = YUB
        ELSE
!
!       ADJUST Y AXIS LIMITS IF EQUAL
!
          IF (YMN .GE. YMX) CALL ADJLMT(YMN, YMX)
        END IF
!
        IF (XLB.LT.XUB) THEN
!
!       SET X AXIS LIMITS TO USER SUPPLIED VALUES
!
          XMN = XLB
          XMX = XUB
        ELSE
!
!         ADJUST X AXIS LIMITS IF EQUAL
!
          IF (XMN .GE. XMX) CALL ADJLMT(XMN, XMX)
!
        END IF
!
      END IF
!
      RETURN
!
!     FORMAT STATEMENTS
!
 1010 FORMAT (/
     +   44H NO NON-MISSING PLOT COORDINATES WERE FOUND.)
 1020 FORMAT (/
     +   40H NO NON-MISSING VALUES WERE FOUND WITHIN,
     +   26H THE USER SUPPLIED LIMITS.)
 1030 FORMAT (/
     +   30H THE PLOT HAS BEEN SUPPRESSED.)
      END
