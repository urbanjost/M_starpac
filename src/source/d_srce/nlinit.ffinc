!NLINIT
      SUBROUTINE NLINIT (N, IFIXD, PAR, NPAR, PARE, NPARE, MIT,
     &   STOPSS, STOPP, SCALE, LSCALE, DELTA, IVAPRX, APRXDV, IVCVPT,
     &   IWORK, IIWORK, RWORK, IRWORK, SCL)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE PERFORMS INITIALIZATION FOR THE NONLINEAR
!     LEAST SQUARES ROUTINES.
!
!     REFERENCES
!
!     DENNIS, J.E., GAY, D.M., AND WELSCH, R.E. (1979), AN ADAPTIVE
!             NONLINEAR LEAST-SQUARES ALGORITHM, (BEING REVISED).
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  OCTOBER 3, 1983
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) ::
     &   DELTA,STOPP,STOPSS
      INTEGER
     &   IIWORK,IRWORK,IVAPRX,IVCVPT,LSCALE,MIT,N,NPAR,NPARE,SCL
      LOGICAL
     &   APRXDV
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     &   PAR(NPAR),PARE(NPAR),RWORK(IRWORK),SCALE(LSCALE)
      INTEGER
     &   IFIXD(NPAR),IWORK(IIWORK)
!
!  SCALARS IN COMMON
      INTEGER
     &   IERR
!
!  LOCAL SCALARS
      INTEGER
     &   AFCTOL,CNVCOD,COVPRT,COVREQ,DINIT,DTYPE,ISCL,J,LMAX0,
     &   MXFCAL,MXITER,NITER,OUTLEV,PRUNIT,RFCTOL,SCLJ,SOLPRT,
     &   STATPR,X0PRT,XCTOL
!
!  EXTERNAL FUNCTIONS
!     REAL(KIND=WP) :: RMDCON
!
!  EXTERNAL SUBROUTINES
      EXTERNAL DFAULT,NLSPK
!
!  INTRINSIC FUNCTIONS
      INTRINSIC ABS,IABS,MAX
!
!  COMMON BLOCKS
      COMMON /ERRCHK/IERR
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     INTEGER AFCTOL
!        THE LOCATION IN RWORK OF THE ABSOLUTE CONVERGENCE TOLERANCE.
!     LOGICAL APRXDV
!        THE VARIABLE USED TO INDICATE WHETHER NUMERICAL
!        APPROXIMATIONS TO THE DERIVATIVE WERE USED (TRUE) OR NOT
!        (FALSE).
!     INTEGER CNVCOD
!        A VALUE USED TO CONTROL THE PRINTING OF ITERATION REPORTS.
!     INTEGER COVPRT
!        THE LOCATION IN IWORK OF THE VARIABLE USED TO INDICATE WHETHER
!        THE COVARIANCE MATRIX IS TO BE PRINTED BY THE NL2 CODE, WHERE
!        IWORK(COVPRT) = 0 INDICATES IT IS NOT.
!     INTEGER COVREQ
!        THE LOCATION IN IWORK OF THE VARIABLE USED TO INDICATE HOW
!        THE COVARIANCE MATRIX IS TO BE COMPUTED BY THE NL2 CODE, WHERE
!        IWORK(COVREQ) = 3 INDICATES THE COVARIANCE MATRIX IS TO BE COMP
!        AS THE RESIDUAL VARIANCE TIMES THE INVERSE OF THE JACOBIAN MATR
!        TRANSPOSED TIMES THE JACOBIAN MATRIX .
!     REAL(KIND=WP) :: DELTA
!        THE MAXIMUM CHANGE ALLOWED IN THE MODEL PARAMETERS AT THE
!        FIRST ITERATION.
!     INTEGER DINIT
!        THE LOCATION IN IWORK OF THE VALUE USED TO INDICATE
!        WHETHER OR NOT USER SUPPLIED SCALE VALUES ARE TO BE
!        USED, WHERE THE (NL2) DEFAULT VALUE OF RWORK(DINIT) = 0.0_WP
!        INIDCATES NO, AND THE VALUE RWORK(DINIT) = -1.0_WP INDICATES
!        YES.
!     INTEGER DTYPE
!        THE LOCATION IN IWORK OF THE VALUE INDICATING WHETHER THE
!        SCALE VALUES HAVE BEEN SUPPLIED BY THE USER (IWORK(DTYPE) .LE.
!        OR THE DEFAULT VALUES ARE TO BE USED (IWORK(DTYPE) .GT. 0).
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .GE. 1, ERRORS WERE DETECTED.
!     INTEGER IFIXD(NPAR)
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.
!        IF IFIXED(I).NE.0, THEN PAR(I) WILL BE HELD FIXED.
!        IF IFIXED(I).EQ.0, THEN PAR(I) WILL BE OPTIMIZED.
!     INTEGER IIWORK
!        THE DIMENSION OF THE INTEGER WORK VECTOR IWORK.
!     INTEGER IRWORK
!        THE DIMENSION OF THE DOUBLE PRECISION WORK VECTOR RWORK.
!     INTEGER ISCL
!        THE LOCATION IN IWORK INDICATING THE STARTING LOCATION IN
!         RWORK OF THE SCALE VECTOR.
!     INTEGER IVAPRX
!        AN INDICATOR VALUE USED TO DESIGNATE WHICH OPTION IS TO BE USED
!        TO COMPUTE THE VARIANCE COVARIANCE MATRIX (VCV), WHERE
!        IVAPRX LE 0 INDICATES THE THE DEFAULT OPTION WILL BE USED
!        IVAPRX EQ 1 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 2 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 3 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                          *INVERSE(HESSIAN)
!                    USING BOTH THE MODEL SUBROUTINE THE USER SUPPLIED
!                    DERIVATIVE SUBROUTINE WHEN IT IS AVAILABLE
!        IVAPRX EQ 4 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVAPRX EQ 5 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVAPRX EQ 6 INDICATES THE VCV IS TO BE COMPUTED BY
!                       INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                          *INVERSE(HESSIAN)
!                    USING ONLY THE MODEL SUBROUTINE
!        IVAPRX GE 7 INDICATES THE DEFAULT OPTION WILL BE USED
!     INTEGER IVCVPT
!        AN INDICATOR VALUE USED TO DESIGNATE WHICH FORM OF THE
!        VARIANCE COVARIANCE MATRIX (VCV) IS BEING PRINTED, WHERE
!        IVCVPT = 1 INDICATES THE VCV WAS COMPUTED AS
!                   INVERSE(TRANSPOSE(JACOBIAN)*JACOBIAN)
!        IVCVPT = 2 INDICATES THE VCV WAS COMPUTED AS
!                   INVERSE(HESSIAN)
!        IVCVPT = 3 INDICATES THE VCV WAS COMPUTED AS
!                   INVERSE(HESSIAN)*TRANSPOSE(JACOBIAN)*JACOBIAN
!                       *INVERSE(HESSIAN)
!     INTEGER IWORK(IIWORK)
!        THE INTEGER WORK SPACE VECTOR USED BY THE NL2 SUBROUTINES.
!     INTEGER J
!        THE INDEX OF THE PARAMETER BEING EXAMINED.
!     INTEGER LMAX0
!        THE LOCATION IN RWORK OF THE VALUE INDICATING THE
!        MAXIMUM CHANGE ALLOWED IN THE MODEL PARAMETERS AT THE
!        FIRST ITERATION.
!     INTEGER MIT
!        THE MAXIMUM NUMBER OF ITERATIONS ALLOWED.
!     INTEGER MXFCAL
!        THE LOCATION IN IWORK OF THE VARIABLE DESIGNATING THE
!        MAXIMUM NUMBER OF FUNCTION CALLS ALLOWED, EXCLUDING
!        CALLS NECESSARY TO COMPUTE THE DERIVATIVES AND VARIANCE
!        COVARIANCE MATRIX.
!     INTEGER MXITER
!        THE LOCATION IN IWORK OF THE VARIABLE DESIGNATING THE
!        MAXIMUM NUMBER OF ITERATIONS ALLOWED.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NITER
!        THE LOCATION IN IWORK OF THE NUMBER OF THE CURRENT ITERATION.
!     INTEGER NPAR
!        THE NUMBER OF UNKNOWN PARAMETERS IN THE MODEL.
!     INTEGER NPARE
!        THE NUMBER OF UNKNOWN PARAMETERS TO BE OPTIMIZED.
!     INTEGER OUTLEV
!        THE LOCATION IN IWORK OF THE PARAMETER USED TO CONTROL THE
!        PRINTING OF THE ITERATION REPORTS BY NL2.
!     REAL(KIND=WP) :: PAR(NPAR)
!        THE ARRAY IN WHICH THE CURRENT ESTIMATES OF THE UNKNOWN
!        PARAMETERS ARE STORED.
!     REAL(KIND=WP) :: PARE(NPAR)
!        THE CURRENT ESTIMATES OF THE UNKNOWN PARAMETERS, BUT ONLY
!        THOSE TO BE OPTIMIZED (NOT THOSE WHOSE VALUES ARE FIXED).
!     INTEGER PRUNIT
!        THE LOCATION IN IWORK OF THE PARAMETER USED TO CONTROL
!        THE PRINT UNIT USED BY NL2.  IWORK(PRUNIT) = 0 MEANS
!        DONT PRINT ANYTHING.
!     INTEGER RFCTOL
!        THE LOCATION IN RWORK OF THE RELATIVE FUNCTION CONVERGENCE
!        TOLERANCE.
!     REAL(KIND=WP) :: RWORK(IRWORK)
!        THE DOUBLE PRECISION WORK VECTOR USED BY THE NL2 SUBROUTINES.
!     REAL(KIND=WP) :: SCALE(LSCALE)
!        THE TYPICAL SIZE OF THE UNKNOWN PARAMETERS.
!     INTEGER SCL
!        THE INDEX IN RWORK OF THE 1ST VALUE OF THE USER SUPPLIED SCALE
!        VALUE.
!     INTEGER SCLJ
!        THE INDEX IN RWORK OF THE JTH VALUE OF THE USER SUPPLIED SCALE
!        VALUE.
!     INTEGER SOLPRT
!        THE LOCATION IN IWORK OF THE PARAMETER USED TO CONTROL PRINTING
!        BY NL2 OF THE FINAL SOLUTION.
!     INTEGER STATPR
!        THE LOCATION IN IWORK OF THE PARAMETER USED TO CONTROL PRINTING
!        BY NL2 OF SUMMARY STATISTICS.
!     REAL(KIND=WP) :: STOPP
!        THE STOPPING CRITERION FOR THE TEST BASED ON THE MAXIMUM SCALED
!        RELATIVE CHANGE IN THE ELEMENTS OF THE MODEL PARAMETER VECTOR
!     REAL(KIND=WP) :: STOPSS
!        THE STOPPING CRITERION FOR THE TEST BASED ON THE RATIO OF THE
!        PREDICTED DECREASE IN THE RESIDUAL SUM OF SQUARES (COMPUTED
!        BY STARPAC) TO THE CURRENT RESIDUAL SUM OF SQUARES ESTIMATE.
!     INTEGER XCTOL
!        THE LOCATION IN RSTAK/DSTAK OF THE P CONVERGENCE TOLERANCE.
!     INTEGER X0PRT
!         THE LOCATION IN IWORK OF THE PARAMETER USED TO CONTROL PRINTIN
!        BY NL2 OF THE INITIAL PARAMETER AND SCALE VALUES.
!
!     IWORK SUBSCRIPT VALUES
!
      DATA CNVCOD /34/, COVPRT /14/, COVREQ /15/, DINIT /38/, DTYPE
     &   /16/, ISCL /27/, MXFCAL /17/, MXITER /18/,
     &   NITER /31/, OUTLEV /19/, PRUNIT /21/, SOLPRT /22/, STATPR
     &   /23/, X0PRT /24/
!
!     RWORK SUBSCRIPT VALUES
!
      DATA AFCTOL /31/, LMAX0 /35/, RFCTOL /32/, XCTOL /33/
!
!+++++++++++++++++++++++++++++++  BODY  ++++++++++++++++++++++++++++++++
!
!     PACK PARAMETERS INTO PARE
!
      CALL NLSPK(PAR, IFIXD, NPAR, PARE, NPAR)
!
!     SET NL2SOL DEFAULT VALUES
!
      CALL DFAULT(IWORK, RWORK)
!
!     SET NON NL2 DEFAULT VALUES
!
      IWORK(MXITER) = MIT
      IF (MIT.LE.0) IWORK(MXITER) = 21
!
      IWORK(MXFCAL) = 2*IWORK(MXITER)
!
!     SET STOPPING CRITERION
!
      RWORK(AFCTOL) = RMDCON(1,typ=0.0_wp)
      IF ((STOPSS.GE.RMDCON(3,typ=0.0_wp)) .AND. (STOPSS.LE.0.1)) 
     & RWORK(RFCTOL) = STOPSS
!
      IF ((STOPP.GE.0.0_WP) .AND. (STOPP.LE.1.0_WP))
     &   RWORK(XCTOL) = STOPP
!
!     SET SCALE VALUES
!
      SCL = 94 + 2*N + NPARE*(3*NPARE+31)/2
      IWORK(ISCL) = SCL
      IF (SCALE(1).GT.0.0_WP) GO TO 40
!
      IWORK(DTYPE) = 1
!
!     INITIALIZE SCALE VALUES FOR FIRST ITERATION
!
      SCLJ = SCL - 1
      DO 30 J=1,NPAR
         IF (IFIXD(J).NE.0) GO TO 30
         SCLJ = SCLJ + 1
         IF (PAR(J).EQ.0.0_WP) RWORK(SCLJ) = 1.0_WP
         IF (PAR(J).NE.0.0_WP) RWORK(SCLJ) = 1.0_WP/ABS(PAR(J))
   30 CONTINUE
!
      GO TO 60
!
   40 IWORK(DTYPE) = 0
      RWORK(DINIT) = -1.0_WP
      SCLJ = SCL - 1
      DO 50 J=1,NPAR
         IF (IFIXD(J).NE.0) GO TO 50
         SCLJ = SCLJ + 1
         RWORK(SCLJ) = 1.0_WP/MAX(ABS(SCALE(J)),ABS(PAR(J)))
   50 CONTINUE
!
   60 IF (DELTA.LE.0.0_WP) RWORK(LMAX0) = 100.0_WP
      IF (DELTA.GT.0.0_WP) RWORK(LMAX0) = DELTA
!
!     SET NL2 COVARIANCE COMPUTATION CONTROL PARAMETER
!
      IF ((IVAPRX.LE.1) .OR. (IVAPRX.EQ.4) .OR. (IVAPRX.GE.7))
     &   IWORK(COVREQ) = 3
      IF ((IVAPRX.EQ.2) .OR. (IVAPRX.EQ.5)) IWORK(COVREQ) = 2
      IF ((IVAPRX.EQ.3) .OR. (IVAPRX.EQ.6)) IWORK(COVREQ) = 1
      IF ((IVAPRX.GE.4) .AND. (IVAPRX.LE.6))
     &   IWORK(COVREQ) = -IWORK(COVREQ)
      IF (APRXDV) IWORK(COVREQ) = -IABS(IWORK(COVREQ))
      IF ((IVAPRX.LE.1) .OR. (IVAPRX.EQ.4) .OR. (IVAPRX.GE.7))
     &   IVCVPT = 1
      IF ((IVAPRX.EQ.2) .OR. (IVAPRX.EQ.5)) IVCVPT = 2
      IF ((IVAPRX.EQ.3) .OR. (IVAPRX.EQ.6)) IVCVPT = 3
!
!     INITIALIZE THE ITERATION COUNTER
!
      IWORK(NITER) = 0
!
!     SET NL2 PRINT CONTROL PARAMETERS
!
      IWORK(CNVCOD) = 0
      IWORK(COVPRT) = 0
      IWORK(OUTLEV) = 0
      IWORK(PRUNIT) = 0
      IWORK(SOLPRT) = 0
      IWORK(STATPR) = 0
      IWORK(X0PRT) = 0
!
      RETURN
!
      END
