!DEMODS
     subroutine demods (y, n, fd, fc, k, ampl, phas, ndem, nprt,&
     &  ldstak)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE USER CALLABLE ROUTINE TO DEMODULATE SERIES
!     Y AT FREQUENCY FD, TO APPLY A LOW PASS FILTER WITH CUTOFF
!     FREQUENCY FC, AND TO EXTRACT THE AMPLITUDE AND PHASE COMPONENTS
!     OF THE RESULTING FILTERED SERIES (LONG CALL).
!
!     WRITTEN BY  -  PETER BLOOMFIELD
!                    FOURIER ANALYSIS OF TIME SERIES- AN
!                       INTRODUCTION
!                    JOHN WILEY AND SONS, NEW YORK, 1976
!                    PAGE 147
!     ADAPTED FOR STARPAC BY  -  JANET R. DONALDSON
!                                STATISTICAL ENGINEERING DIVISION
!                                NATIONAL BUREAU OF STANDARDS
!                                BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 26, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     real(kind=wp) ::&
     &   fc,fd
     integer&
     &   k,ldstak,n,ndem,nprt
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   ampl(*),phas(*),y(*)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      real(kind=wp) :: dstak(12)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   temp
     integer&
     &   hlp,io,iprt,ldsmin,nall0,phase
     logical&
     &   err01,err02,err03,err04,err05,err06,err07,head
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   rstak(12)
     character&
    &   lfc(8)*1,lfd(8)*1,lk(8)*1,lkin(8)*1,llds(8)*1,ln(8)*1,&
     &   lnm1(8)*1,lone(8)*1,nmsub(6)*1
!
!  EXTERNAL FUNCTIONS
!      INTEGER
!     +   STKST
!      EXTERNAL STKST
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL DEMDRV,EISGE,EISII,ERIODD,ERSII,ERSLFS,IPRINT,LDSCMP,
!     +   DCOPY,STKCLR,STKSET
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!  EQUIVALENCES
      equivalence (dstak(1),rstak(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: AMPL(N)
!        THE ARRAY IN WHICH THE AMPLITUDES ARE STORED.
!     REAL(KIND=WP) :: DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     LOGICAL ERR01, ERR02, ERR03, ERR04, ERR05, ERR06, ERR07
!        VALUE(S) INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     REAL(KIND=WP) :: FC
!        THE CUTOFF FREQUENCY USED FOR THE LOW PASS FILTER.
!     REAL(KIND=WP) :: FD
!        THE DEMODULATION FREQUENCY.
!     LOGICAL HEAD
!        A FLAG INDICATING WHETHER THE HEADING SHOULD BE PRINTED
!        (TRUE) OR NOT (FALSE).  IF A HEADING IS PRINTED, THE VALUE
!        OF HEAD WILL BE CHANGED TO FALSE.
!     INTEGER HLP
!        THE STARTING LOCATION IN RSTAK/DSTAK OF
!        THE ARRAY IN WHICH THE LOW PASS FILTER COEFFICIENTS ARE
!        STORED.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED.
!     INTEGER IO
!        A VARIABLE USED TO DETERMINE THE AMOUNT OF STORAGE REQUIRED
!        BASED ON PRINTED OUTPUT REQUESTED.
!     INTEGER IPRT
!        THE UNIT NUMBER USED FOR OUTPUT.
!     INTEGER K
!        THE USER SUPPLIED NUMBER OF TERMS TO BE USED FOR THE LOW
!        PASS FILTER.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     CHARACTER*1 LFC(8), LFD(8), LK(8), LKIN(8), LLDS(8), LN(8),
!    *  LNM1(8), LONE(8)
!        THE ARRAY(S) CONTAINING THE NAME(S) OF INPUT PARAMETER(S)
!        CHECKED FOR ERRORS.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NALL0
!        THE NUMBER OF ALLOCATIONS OUTSTANDING AT THE TIME THIS ROUTINE
!        WAS CALLED.
!     INTEGER NDEM
!        THE NUMBER OF VALUES IN THE DEMODULATED SERIES, I.E., IN
!        THE AMPLITUDE AND PHASE ARRAYS.
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THIS SUBROUTINE.
!     INTEGER NPRT
!        THE INDICATOR VARIABLE USED TO SPECIFY WHETHER OR NOT
!        PRINTED OUTPUT IS TO BE GIVEN, WHERE IF THE VALUE OF NPRT
!        IS ZERO, NO OUTPUT IS GIVEN, OTHERWISE OUTPUT IS PROVIDED.
!     REAL(KIND=WP) :: PHAS(N)
!        THE ARRAY IN WHICH THE PRIMARY PHASE ESTIMATES ARE RETURNED.
!     INTEGER PHASE
!        THE STARTING LOCATION IN RSTAK/DSTAK OF
!        THE ARRAY CONTAINING THE PRIMARY AND SECONDARY PHASE ESTIMATES.
!     REAL(KIND=WP) :: RSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     REAL(KIND=WP) :: TEMP
!        A TEMPORARY VARIABLE USED FOR TYPE CONVERSION.
!     REAL(KIND=WP) :: Y(N)
!        THE INPUT ARRAY CONTAINING THE OBSERVED SERIES.
!
!     SET UP NAME ARRAYS
!
     data&
    &  nmsub(1),  nmsub(2),  nmsub(3),  nmsub(4),  nmsub(5),  nmsub(6)&
     & /     'D',       'E',       'M',       'O',       'D',       'S'/
     data&
    &  lfc(1), lfc(2), lfc(3), lfc(4), lfc(5), lfc(6), lfc(7), lfc(8)&
     & /  'F',   'C',   ' ',   ' ',   ' ',   ' ',   ' ',   ' '/
     data&
    &  lfd(1), lfd(2), lfd(3), lfd(4), lfd(5), lfd(6), lfd(7), lfd(8)&
     & /  'F',   'D',   ' ',   ' ',   ' ',   ' ',   ' ',   ' '/
     data&
    &  lk(1), lk(2), lk(3), lk(4), lk(5), lk(6), lk(7), lk(8)&
     & /  'K',   ' ',   ' ',   ' ',   ' ',   ' ',   ' ',   ' '/
     data&
    &  lkin(1), lkin(2), lkin(3), lkin(4), lkin(5), lkin(6), lkin(7),&
     &  lkin(8) /  '(',   '1',   '/',   'K',   ')',   ' ',   ' ',   ' '/
     data&
    &  llds(1), llds(2), llds(3), llds(4), llds(5), llds(6), llds(7),&
     &  llds(8) /  'L',   'D',   'S',   'T',   'A',   'K',   ' ',   ' '/
     data&
    &  ln(1), ln(2), ln(3), ln(4), ln(5), ln(6), ln(7), ln(8)&
     & /  'N',   ' ',   ' ',   ' ',   ' ',   ' ',   ' ',   ' '/
     data&
    &  lnm1(1), lnm1(2), lnm1(3), lnm1(4), lnm1(5), lnm1(6), lnm1(7),&
     &  lnm1(8) /  '(',   'N',   '-',   '1',   ')',   ' ',   ' ',   ' '/
     data&
    &  lone(1), lone(2), lone(3), lone(4), lone(5), lone(6), lone(7),&
     &  lone(8) /  'O',   'N',   'E',   ' ',   ' ',   ' ',   ' ',   ' '/
!
!     PERFORM ERROR CHECKING ON INPUT DATA.
!
      ierr = 0
      head = .true.
!
      if (nprt.eq.0) then
        io = 0
      else
        io = 1
      end if
!
      call eisge(nmsub, ln, n, 17, 1, head, err01, ln)
!
     call ersii(nmsub, lfd, fd,&
     &           0.0_wp, 0.5_wp, 2, head, err02, lfd, lfd)
!
      err03 = .true.
     if (.not. err01)&
     &  call eisii(nmsub, lk, k, 1, n-1, 1, head, err03, lone, lnm1)
!
      call eriodd(nmsub, lk, k, 1, head, err04)
!
      err05 = .true.
      if ((.not. err02) .and. (.not. err03) .and. (.not. err04)) then
         temp = k
        call ersii(nmsub, lfc, fc, 1.0_wp/temp, fd, 1, head, err05,&
     &              lkin, lfd)
      end if
!
      err06 = .true.
     if ((.not. err03) .and. (.not. err04) .and. (.not. err05))&
     &   call erslfs(nmsub, fc, k, head, err06)
!
      if (err01 .or. err06) go to 10
!
      call ldscmp(2, 0, 0, 0, 0, 0, 'D', k + io*2*n, ldsmin)
!
      call eisge(nmsub, llds, ldstak, ldsmin, 9, head, err07, llds)
!
!
      if (err02 .or. err03 .or. err04 .or. err05 .or. err07) go to 10
      go to 20
!
   10 continue
      ierr = 1
      call iprint (iprt)
      write (iprt, 1000)
      return
!
   20 continue
      call stkset (ldstak, 4)
      nall0 = stkst(1)
!
      hlp = stkget(k, 4)
      if (nprt.eq.0) then
         phase = 1
      else
         phase = stkget(2*n, 4)
      end if
!
      if (ierr .eq. 1) go to 10
!
      if (nprt .ne. 0) then
!
        call demdrv(y, n, fd, fc, k, rstak(hlp), ampl,&
     &      rstak(phase), n, ndem, nprt, nmsub)
         call dcopy(ndem, rstak(phase), 1, phas, 1)
      else
        call demdrv(y, n, fd, fc, k, rstak(hlp), ampl,&
     &      phas, n, ndem, nprt, nmsub)
      end if
!
      call stkclr(nall0)
!
      if (ierr .eq. 1) go to 10
!
      return
!
!     FORMAT STATEMENT
!
1000 format (/42h the correct form of the call statement is//&
    &   '       CALL DEMODS (Y, N, FD, FC, K,'/&
     &   '      +             AMPL, PHAS, NDEM, NPRT, LDSTAK)')
!
      end
