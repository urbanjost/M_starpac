!DIFC
      SUBROUTINE DIFC (Y, N, NFAC, ND, IOD, IAR, PHI, LPHI, YF, NYF,
     +   LDSTAK)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE EXPANDS THE DIFFERENCE FILTER SPECIFIED BY NFAC,
!     IOD AND ND INTO PHI AND PERFORMS THE DIFFERENCE FILTERING
!     OPERATION DEFINED BY PHI, RETURNING THE FILTERED SERIES
!     IN YF.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 26, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      INTEGER
     +   IAR,LDSTAK,LPHI,N,NFAC,NYF
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     +   PHI(*),Y(*),YF(*)
      INTEGER
     +   IOD(*),ND(*)
!
!  SCALARS IN COMMON
      INTEGER
     +   IERR
!
!  ARRAYS IN COMMON
      REAL(KIND=WP) :: DSTAK(12)
!
!  LOCAL SCALARS
      INTEGER
     +   I,IPRT,LDSMIN,NALL0,WORK
      LOGICAL
     +   ERR01,ERR02,ERR03,ERR04,HEAD
!
!  LOCAL ARRAYS
      REAL(KIND=WP) ::
     +   RSTAK(12)
      CHARACTER
     +   LLDS(8)*1,LLPHI(8)*1,LN(8)*1,NMSUB(6)*1
!
!  EXTERNAL FUNCTIONS
      INTEGER
     +   STKGET,STKST
      EXTERNAL STKGET,STKST
!
!  EXTERNAL SUBROUTINES
      EXTERNAL DCOEF,EISGE,ERDF,FLTAR,IPRINT,LDSCMP,STKCLR,STKSET
!
!  COMMON BLOCKS
      COMMON /CSTAK/DSTAK
      COMMON /ERRCHK/IERR
!
!  EQUIVALENCES
      EQUIVALENCE (DSTAK(1),RSTAK(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     LOGICAL ERR01, ERR02, ERR03, ERR04
!        VALUE(S) INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     LOGICAL HEAD
!        A FLAG INDICATING WHETHER THE HEADING SHOULD BE PRINTED
!        (TRUE) OR NOT (FALSE).  IF A HEADING IS PRINTED, THE VALUE
!        OF HEAD WILL BE CHANGED TO FALSE.
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IAR
!        THE NUMBER OF FILTER COEFFICIENTS.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED.
!     INTEGER IOD(NFAC)
!        THE ORDER OF EACH OF THE DIFFERENCE FACTORS.
!     INTEGER IPRT
!        THE UNIT NUMBER USED FOR OUTPUT.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     CHARACTER*1 LLDS(8), LLPHI(8), LN(8)
!        THE ARRAYS CONTAINING THE NAMES OF VARIOUS VARIABLES
!     INTEGER LPHI
!        THE LENGTH OF THE ARRAY PHI.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS IN THE SERIES Y.
!     INTEGER NALL0
!        THE NUMBER OF OUTSTANDING WORK AREA ALLOCATIONS.
!     INTEGER ND(NFAC)
!        THE ARRAY CONTAINING THE NUMBER OF TIMES THE DIFFERENCE
!        FACTORS ARE TO BE APPLIED.
!     INTEGER NFAC
!        THE NUMBER OF DIFFERENCE FACTORS.
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THIS SUBROUTINE.
!     INTEGER NYF
!        THE NUMBER OF OBSERVATIONS IN THE FILTERED SERIES YF.
!     REAL(KIND=WP) :: PHI(LPHI)
!        THE VECTOR CONTAINING THE FILTER COEFFICIENTS.
!     REAL(KIND=WP) :: RSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER WORK
!        THE STARTING LOCATION FOR THE WORK VECTOR NECESSARY TO
!        EXPAND THE DIFFERENCE FILTER.
!     REAL(KIND=WP) :: Y(N)
!        THE VECTOR CONTAINING THE OBSERVED TIME SERIES.
!     REAL(KIND=WP) :: YF(N)
!        THE VECTOR IN WHICH THE FILTERED SERIES IS RETURNED.
!
!     SET UP NAME ARRAYS
!
      DATA
     +  NMSUB(1),  NMSUB(2),  NMSUB(3),  NMSUB(4),  NMSUB(5),  NMSUB(6)
     + /     'D',       'I',       'F',       'C',       ' ',       ' '/
      DATA
     +  LLDS(1), LLDS(2), LLDS(3), LLDS(4), LLDS(5), LLDS(6),
     +  LLDS(7), LLDS(8)
     + /  'L',   'D',   'S',   'T',   'A',   'K',   ' ',   ' '/
      DATA
     +  LLPHI(1), LLPHI(2), LLPHI(3), LLPHI(4), LLPHI(5), LLPHI(6),
     +  LLPHI(7), LLPHI(8)
     + /  'L',   'P',   'H',   'I',   ' ',   ' ',   ' ',   ' '/
      DATA
     +  LN(1), LN(2), LN(3), LN(4), LN(5), LN(6), LN(7), LN(8)
     + /  'N',   ' ',   ' ',   ' ',   ' ',   ' ',   ' ',   ' '/
!
!     SET UP FOR ERROR CHECKING
!
      IERR = 0
      HEAD = .TRUE.
!
      ERR01 = .FALSE.
      ERR02 = .FALSE.
      ERR03 = .FALSE.
      ERR04 = .FALSE.
!
!     CALL ERROR CHECKING ROUTINES
!
      CALL EISGE(NMSUB,LN,N,3,1,HEAD,ERR01,LN)
!
      IAR = 0
!
      IF (NFAC.GE.1) THEN
!
         DO 10 I = 1, NFAC
            IAR = IAR + ND(I)*IOD(I)
   10    CONTINUE
!
         CALL ERDF(NMSUB,NFAC,ND,IOD,N,HEAD,ERR02)
!
         IF (.NOT.ERR02) THEN
            CALL EISGE(NMSUB,LLPHI,LPHI,IAR,9,HEAD,ERR03,LLPHI)
            CALL LDSCMP(1,0,0,0,0,0,'D',2*IAR,LDSMIN)
            CALL EISGE(NMSUB,LLDS,LDSTAK,LDSMIN,9,HEAD,ERR04,LLDS)
         END IF
      END IF
!
!
      IF (ERR01 .OR. ERR02 .OR. ERR03 .OR. ERR04) GO TO 20
      GO TO 30
!
   20 CONTINUE
      IERR = 1
      CALL IPRINT (IPRT)
      WRITE (IPRT, 1000)
      RETURN
!
   30 CONTINUE
!
      NYF = N
      DO 50 I = 1, NYF
         YF(I) = Y(I)
   50 CONTINUE
!
      IF (NFAC .LE. 0) RETURN
!
      CALL STKSET (LDSTAK, 4)
      NALL0 = STKST(1)
!
      DO 60 I = 1, LPHI
         PHI(I) = 0.0E0_WP
   60 CONTINUE
!
      WORK = STKGET(2*IAR, 4)
!
      IF (IERR .EQ. 1) GO TO 20
!
      CALL DCOEF (NFAC,ND,IOD,IAR,PHI,LPHI,RSTAK(WORK))
!
      CALL STKCLR(NALL0)
!
      IF (IERR .EQ. 1) GO TO 20
!
      CALL FLTAR (YF,NYF,IAR,PHI,YF,NYF)
!
      RETURN
!
!     FORMAT STATEMENTS
!
 1000 FORMAT (/42H THE CORRECT FORM OF THE CALL STATEMENT IS//
     +   '       CALL DIFC (Y, N,'/
     +   '      +           NFAC, ND, IOD, IAR, PHI, LPHI,'/
     +   '      +           YF, NYF, LDSTAK)')
      END
