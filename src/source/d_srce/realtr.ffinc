!REALTR
      SUBROUTINE REALTR(A, B, N, ISN)
!  IF ISN=1, THIS SUBROUTINE COMPLETES THE FOURIER TRANSFORM
!    OF 2*N DATA VALUES, WHERE THE ORIGINAL DATA VALUES ARE
!    STORED ALTERNATELY IN ARRAYS A AND B, AND ARE FIRST
!    TRANSFORMED BY A COMPLEX FOURIER TRANSFORM OF DIMENSION N.
!    THE COSINE COEFFICIENTS ARE IN A(1),A(2),...A(N+1) AND
!    THE SINE COEFFICIENTS ARE IN B(1),B(2),...B(N+1).
!    A TYPICAL CALLING SEQUENCE IS
!      CALL FFT(A,B,N,N,N,1)
!      CALL REALTR(A,B,N,1)
!    THE RESULTS SHOULD BE MULTIPLIED BY 0.5D0/N TO GIVE THE
!    USUAL SCALING OF COEFFICIENTS.
!  IFISN-1, THE INVERSE TRANSFORMATION IS DONE, THE FIRST STEP
!    IN EVALUATING A DOUBLE PRECISION FOURIER SERIES.
!    A TYPICAL CALLING SEQUENCE IS
!      CALL REALTRA(A,B,N,-1)
!      CALL FFT(A,B,N,N,N,-1)
!    THE RESULTS SHOULD BE MULTIPLIED BY 0.5D0 TO GIVE THE USUAL
!    SCALING, AND THE TIME DOMAIN RESULTS ALTERNATE IN ARRAYS A
!    AND B, I.E. A(1),B(1),A(2),B(2),...A(N),B(N).
!  THE DATA MAY ALTERNATIVELY BE STORED IN A SINGLE COMPLEX
!    ARRAY A, THEN THE MAGNITUDE OF ISN CHANGED TO TWO TO
!    GIVE THE CORRECT INDEXING INCREMENT AND A(2) USED TO
!    PASS THE INITIAL ADDRESS FOR THE SEQUENCE OF IMAGINARY
!    VALUES, E.G.
!      CALL FFT(A,A(2),N,N,N,2)
!      CALL REALTR(A,A(2),N,2)
!    IN THIS CASE, THE COSINE AND SINE COEFFICIENTS ALTERNATE IN A.
!  BY R. C. SINGLETON, STANFORD RESEARCH INSTITUTE, OCT. 1968
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      INTEGER
     +   ISN,N
!
!  ARRAY ARGUMENTS
      DOUBLE PRECISION
     +   A(1),B(1)
!
!  LOCAL SCALARS
      DOUBLE PRECISION
     +   AA,AB,BA,BB,CD,CN,IM,RE,SD,SN
      INTEGER
     +   INC,J,K,NH,NK
!
!  INTRINSIC FUNCTIONS
      INTRINSIC ATAN,IABS,SIN
!
!
!
      INC = IABS(ISN)
      NK = N*INC + 2
      NH = NK/2
      SD = 2.0D0*ATAN(1.0D0)/N
      CD = 2.0D0*SIN(SD)**2
      SD = SIN(SD+SD)
      SN = 0.0D0
      IF (ISN.LT.0) GO TO 30
      CN = 1.0D0
      A(NK-1) = A(1)
      B(NK-1) = B(1)
   10 DO 20 J=1,NH,INC
         K = NK - J
         AA = A(J) + A(K)
         AB = A(J) - A(K)
         BA = B(J) + B(K)
         BB = B(J) - B(K)
         RE = CN*BA + SN*AB
         IM = SN*BA - CN*AB
         B(K) = IM - BB
         B(J) = IM + BB
         A(K) = AA - RE
         A(J) = AA + RE
         AA = CN - (CD*CN+SD*SN)
         SN = (SD*CN-CD*SN) + SN
         CN = 0.5D0/(AA**2+SN**2) + 0.5D0
         SN = CN*SN
         CN = CN*AA
   20 CONTINUE
      RETURN
   30 CN = -1.0D0
      SD = -SD
      GO TO 10
      END
