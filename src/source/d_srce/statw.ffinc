!STATW
      SUBROUTINE STATW(Y, WT, N, LDSTAK)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE COMPUTES 53 DIFFERENT STATISTICS FOR A
!     VECTOR Y, WITH WEIGHTS SPECIFIED.  ONE PAGE OF AUTOMATIC
!     PRINTOUT IS PRODUCED.
!
!     WRITTEN BY - JANET R. DONALDSON, JOHN E. KOONTZ
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS
!
!     CREATION DATE  -  MAY 17, 1982
!        (EXTENSIVE REVISION OF OLDER VERSION)
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      INTEGER
     +   LDSTAK,N
!
!  ARRAY ARGUMENTS
      DOUBLE PRECISION
     +   WT(*),Y(*)
!
!  SCALARS IN COMMON
      INTEGER
     +   IERR
!
!  ARRAYS IN COMMON
      DOUBLE PRECISION DSTAK(12)
!
!  LOCAL SCALARS
      DOUBLE PRECISION
     +   ALPHA,SUM1,SUMD2,SUMD3,SUMD4,SUMDA,SUMDI,SUMT1,SUMW,SUMWD2,
     +   SUMWT1
      INTEGER
     +   IDP,IINT,IPRT,LSORT,MID,NALL0,NNZW
      LOGICAL
     +   STACK,WTS
!
!  LOCAL ARRAYS
      DOUBLE PRECISION
     +   STS(53)
      INTEGER
     +   ISTAK(12)
      CHARACTER
     +   NMSUB(6)*1
!
!  EXTERNAL FUNCTIONS
      INTEGER
     +   STKGET,STKST
      EXTERNAL STKGET,STKST
!
!  EXTERNAL SUBROUTINES
      EXTERNAL GENI,IPRINT,SRTIRR,SRTRRI,STAT1W,STAT2W,STATER,STKCLR,
     +   STKSET,SUMBS,SUMIDW,SUMOT,SUMWDS,SUMWSS,SUMWTS
!
!  COMMON BLOCKS
      COMMON /CSTAK/DSTAK
      COMMON /ERRCHK/IERR
!
!  EQUIVALENCES
      EQUIVALENCE (DSTAK(1),ISTAK(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     DOUBLE PRECISION ALPHA
!        THE PERCENTAGE OF POINTS TO BE TRIMMED FROM EITHER END OF
!        Y IN CALCULATING THE TRIMMED MEANS.
!     DOUBLE PRECISION DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER IDP
!        FRAMEWORK CODE VALUE FOR DOUBLE PRECISION NUMBERS.
!     INTEGER IERR
!        THE CODE INDICATING WHETHER OR NOT AN ERROR HAS
!        BEEN DISCOVERED.  0 MEANS NO ERROR, NOT 0 MEANS
!        SOME ERROR EXISTS.
!     INTEGER IINT
!        THE CODE VALUE FOR INTEGER FOR FRAMEWORK.
!     INTEGER IPRT
!        THE NUMBER OF THE STANDARD OUTPUT UNIT.
!     INTEGER ISTAK(12)
!        THE INTEGER VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER LDSTAK
!        INPUT PARAMETER.  THE NUMBER OF DOUBLE PRECISION
!        ELEMENTS DIMENSIONED FOR DSTAK IN THE USER PROGRAM.
!     INTEGER LSORT
!        THE STARTING LOCATION IN ISTAK OF THE PERMUTATION
!        VECTOR.
!     INTEGER MID
!        THE INDEX OF A ZERO ELEMENT IN THE SORTED Y, OR OF THE
!        ELEMENT CLOSEST TO ZERO.
!     INTEGER N
!        INPUT PARAMETER.  THE LENGTH OF Y.
!     INTEGER NALL0
!        THE NUMBER OF ALLOCATIONS OUTSTANDING AT THE TIME THIS ROUTINE
!        WAS CALLED.
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THIS SUBROUTINE.
!     INTEGER NNZW
!        NUMBER OF NONZERO WEIGHTS.
!     LOGICAL STACK
!        A FLAG INDICATING WHETHER THIS ROUTINE USES THE STACK (TRUE)
!        OR NOT (FALSE).
!     DOUBLE PRECISION STS(53)
!        THE VECTOR OF THE 53 STATISTICS COMPUTED.
!     DOUBLE PRECISION SUMDA
!        THE SUM OF THE ABSOLUTE DIFFERENCES FROM THE MEAN.
!     DOUBLE PRECISION SUMDI
!        THE SUM OF THE PRODUCTS OF THE INDICES AND THE
!        DIFFERENCES.
!     DOUBLE PRECISION SUMD2
!        THE SUM OF THE SQUARES OF THE DIFFERENCES.
!     DOUBLE PRECISION SUMD3
!        THE SUM OF THE CUBES OF THE DIFFERENCES.
!     DOUBLE PRECISION SUMD4
!        THE SUM OF THE 4TH POWERS OF THE DIFFERENCES.
!     DOUBLE PRECISION SUMT1
!        THE SUM OF THE ALPHA TRIMMED ARRAY Y.
!     DOUBLE PRECISION SUMW
!        THE SUM OF THE WEIGHTS VECTOR WT.
!     DOUBLE PRECISION SUMWD2
!        THE WEIGHTED SUM OF THE SQUARES OF THE DIFFERENCES.
!     DOUBLE PRECISION SUMWT1
!        THE WEIGHTED SUM OF THE ALPHA TRIMMED ARRAY.
!     DOUBLE PRECISION SUM1
!        THE UNWEIGHTED SUM OF THE ELEMENTS OF Y.
!     DOUBLE PRECISION WT(N)
!        INPUT PARAMETER.  THE WEIGHTS VECTOR.
!     LOGICAL WTS
!        A FLAG INDICATING WHETHER THERE ARE WEIGHTS (TRUE)
!        OR NOT (FALSE).
!     DOUBLE PRECISION Y(N)
!        INPUT PARAMETER.  THE VECTOR OF DATA POINTS ON WHICH
!        THE STATISTICS ARE COMPUTED.  Y IS SORTED, BUT RESTORED
!        TO ITS ORIGINAL ORDER AFTERWARDS.
!
!
!     INITIALIZE NAME VECTORS
!
      DATA  NMSUB(1), NMSUB(2), NMSUB(3), NMSUB(4), NMSUB(5), NMSUB(6)
     +   /       'S',      'T',      'A',      'T',      'W',      ' '/
!
      DATA ALPHA /0.25D0/
      DATA IDP /4/
      DATA IINT /2/
      DATA WTS /.TRUE./
      DATA STACK /.TRUE./
!
!     CHECK FOR ERRORS IN THE INPUT PARAMETERS.
!
      CALL STATER(NMSUB, WT, N, LDSTAK, WTS, NNZW, STACK, IERR)
      IF (IERR.NE.0) THEN
!
!     PRINT ERROR MESSAGE.
!
         CALL IPRINT(IPRT)
         WRITE (IPRT,1000)
         RETURN
      END IF
!
!     SET UP FRAMEWORK AREA.
!
      CALL STKSET (LDSTAK, IDP)
      NALL0 = STKST(1)
!
!     SET UP LSORT, THE PERMUTATION VECTOR.
!
      LSORT = STKGET(N,IINT)
      CALL GENI(ISTAK(LSORT), N, 1, 1)
!
!     SORT THE VECTOR Y.
!
      CALL SRTIRR(ISTAK(LSORT), WT, N, Y)
!
!     COMPUTE THE STATISTICS WHICH USE A SORTED ARRAY.
!
      CALL STAT1W(Y, WT, N, STS(5), STS(34), STS(35), STS(6),
     +   STS(11), 10, 0.0D0, 0.0D0, STS(44), NNZW)
!
!     COMPUTED VARIOUS SUMS IN THE SORTED ARRAY Y.
!
      CALL SUMBS(Y, N, 1, MID, N)
      CALL SUMWSS(Y, WT, N, 1, MID, N, NNZW, SUM1, STS(38), STS(39),
     +   STS(42), SUMW, STS(3), STS(4))
      CALL SUMWTS(Y, WT, N, NNZW, ALPHA, SUMT1, SUMWT1, STS(7),
     +   STS(8))
      CALL SUMWDS(Y, WT, N, 1, MID, N, STS(4), SUMDA, SUMWD2, SUMD2,
     +   SUMD3, SUMD4)
!
!     RESTORE THE VECTOR Y TO ITS ORIGINAL ORDER.
!
      CALL SRTRRI(Y, WT, N, ISTAK(LSORT))
!
!     COMPUTE REST OF STATISTICS.
!
      CALL SUMIDW(Y, WT, N, STS(4), SUMDI)
      CALL STAT2W(Y, WT, N, NNZW, STS, SUMDA, SUMDI, SUMWD2, SUMD2,
     +   SUMD3, SUMD4, SUMW)
      CALL SUMOT(STS, N, NNZW, WTS)
!
!     RETURN THE VECTOR LSORT.
!
      CALL STKCLR(NALL0)
      RETURN
!
!     FORMAT STATEMENTS.
!
 1000 FORMAT (/42H THE CORRECT FORM OF THE CALL STATEMENT IS//
     +   '       CALL STATW (Y, WT, N, LDSTAK)')
      END
