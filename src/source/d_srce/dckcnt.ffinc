!DCKCNT
     subroutine dckcnt(xm, n, m, ixm, mdl, drv, par, npar, neta, ntau,&
    &   scale, lscale, nrow, nprt, hdr, page, wide, isubhd, hlfrpt,&
     &   prtfxd, ifixed, lifixd)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE CONTROLS THE DERIVATIVE CHECKING PROCESS.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  APRIL 2, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   isubhd,ixm,lifixd,lscale,m,n,neta,npar,nprt,nrow,ntau
     logical&
     &   hlfrpt,page,prtfxd,wide
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   par(npar),scale(lscale),xm(ixm,m)
     integer&
     &   ifixed(lifixd)
!
!  SUBROUTINE ARGUMENTS
       external drv,hdr,mdl
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      real(kind=wp) :: dstak(12)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   d,eta,fplrs,pv,scl,tau
     integer&
    &   dtemp,ifixd,ifp,indxd,indxpv,j,lmsg,msg,nall0,ndd,ndgt1,&
     &   ndgt2,nrowu,partmp,pvtemp
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   rstak(12)
     integer&
     &   istak(12)
!
!  EXTERNAL FUNCTIONS
     real(kind=wp) ::&
     &   d1mach
     integer&
     &   stkst
!       EXTERNAL D1MACH,STKST
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL CPYVII,DCKMN,DCKOUT,ETAMDL,SETIV,SETROW,STKCLR
!
!  INTRINSIC FUNCTIONS
      intrinsic log10
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!  EQUIVALENCES
      equivalence (dstak(1),rstak(1))
      equivalence (dstak(1),istak(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: D
!        THE SCALAR IN WHICH ROW   NROWU   OF THE DERIVATIVE
!        MATRIX WITH RESPECT TO THE JTH UNKNOWN PARAMETER
!        IS STORED.
!     EXTERNAL DRV
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        ANALYTIC DERIVATIVES (JACOBIAN MATRIX) OF THE MODEL.
!     REAL(KIND=WP) :: DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER DTEMP
!        THE STARTING LOCATION IN THE WORK AREA IN WHICH
!        THE ARRAY IN WHICH THE ANALYTIC DERIVATIVES WITH
!        RESPECT TO EACH UNKNOWN PARAMETER ARE STORED.
!     REAL(KIND=WP) :: ETA
!        THE RELATIVE NOISE IN THE MODEL.
!     REAL(KIND=WP) :: FPLRS
!        THE FLOATING POINT LARGEST RELATIVE SPACING.
!     EXTERNAL HDR
!        THE NAME OF THE ROUTINE WHICH PRODUCES THE HEADING
!     LOGICAL HLFRPT
!        THE VARIABLE WHICH INDICATES WHETHER THE DERIVATIVE
!        CHECKING ROUTINE HAS ALREADY PRINTED PART OF THE
!        INITIAL SUMMARY (TRUE) OR NOT (FALSE).
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER IFIXD
!        THE STARTING LOCATION IN ISTAK OF
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.
!     INTEGER IFIXED(LIFIXD)
!        THE INDICATOR VALUES USED TO DESIGNATE WHETHER THE
!        PARAMETERS ARE TO BE OPTIMIZED OR ARE TO BE HELD FIXED.  IF
!        IFIXED(I).NE.0, THEN PAR(I) WILL BE OPTIMIZED.  IF
!        IFIXED(I).EQ.0, THEN PAR(I) WILL BE HELD FIXED.
!     INTEGER IFP
!        AN INDICATOR FOR STACK ALLOCATION TYPE, WHERE IFP=3 INDICATES
!        REAL AND IFP=4 INDICATES DOUBLE PRECISION.
!     INTEGER INDXD, INDXPV
!        THE INDEX IN THE WORK AREA OF
!        THE LOCATION OF THE VALUE OF THE
!        DERIVATIVE WITH RESPECT TO THE JTH PARAMETER AT ROW   NROWU
!        AND OF THE LOCATION OF THE PREDICTED VALUE FROM THE MODEL FOR R
!        ROW   NROWU   .
!     INTEGER ISTAK(12)
!        THE INTEGER VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER ISUBHD
!        AN INDICATOR VALUE SPECIFYING SUBHEADINGS TO BE PRINTED BY
!        ROUTINE HDR.
!     INTEGER IXM
!        THE FIRST DIMENSION OF THE INDEPENDENT VARIABLE ARRAY.
!     INTEGER J
!        AN INDEX VARIABLE.
!     INTEGER LIFIXD
!        THE LENGTH OF THE VECTOR IFIXED.
!     INTEGER LMSG
!        THE LENGTH OF THE VECTOR MSG.
!     INTEGER LSCALE
!        THE LENGTH OF VECTOR SCALE.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     EXTERNAL MDL
!        THE NAME OF THE USER SUPPLIED SUBROUTINE WHICH COMPUTES THE
!        PREDICTED VALUES BASED ON THE CURRENT PARAMETER ESTIMATES.
!     INTEGER MSG
!        THE STARTING LOCATION IN THE WORK AREA OF
!        AN ARRAY USED TO STORE MESSAGE PARAMETERS.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS OF DATA.
!     INTEGER NALL0
!        THE NUMBER OF STACK ALLOCATIONS ON ENTRY.
!     INTEGER NDD
!        THE NUMBER OF DECIMAL DIGITS CARRIED FOR A SINGLE
!        PRECISION DOUBLE PRECISION NUMBER.
!     INTEGER NDGT1
!        THE NUMBER OF RELIABLE DIGITS IN THE MODEL USED, EITHER
!        SET TO THE USER SUPPLIED VALUE OF NETA, OR COMPUTED
!        BY ETAMDL.
!     INTEGER NDGT2
!        THE ACTUAL NUMBER OF DIGITS OF AGREEMENT USED, EITHER
!        SET TO THE USER SUPPLIED VALUE OF NTAU, OR COMPUTED
!        FROM NDGT1.
!     INTEGER NETA
!        THE USER SUPPLIED NUMBER OF RELIABLE DIGITS IN THE MODEL.
!     INTEGER NPAR
!        THE NUMBER OF UNKNOWN PARAMETERS IN THE MODEL.
!     INTEGER NPRT
!        THE INDICATOR VARIABLE USED TO SPECIFY WHETHER OR NOT
!        PRINTED OUTPUT IS TO BE PROVIDED, WHERE IF THE VALUE OF
!        NPRT IS ZERO, NO PRINTED OUTPUT IS GIVEN.
!     INTEGER NROW, NROWU
!        THE USER-SUPPLIED NUMBER OF THE ROW OF THE INDEPENDENT
!        VARIABLE ARRAY AT WHICH THE DERIVATIVE IS TO BE CHECKED,
!        AND THE NUMBER OF THE ROW ACTUALLY USED.
!     INTEGER NTAU
!        THE NUMBER OF DIGITS OF AGREEMENT REQUIRED BETWEEN THE
!        NUMERICAL DERIVATIVES AND THE USER SUPPLIED DERIVATIVES.
!     LOGICAL PAGE
!        THE VARIABLE USED TO INDICATE WHETHER A GIVEN SECTION OF
!        THE OUTPUT IS TO BEGIN ON A NEW PAGE (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: PAR(NPAR)
!        THE ARRAY IN WHICH THE CURRENT ESTIMATES OF THE UNKNOWN
!        PARAMETERS ARE STORED.
!     INTEGER PARTMP
!        THE STARTING LOCATION IN THE WORK AREA OF
!        THE MODIFIED MODEL PARAMETERS
!     LOGICAL PRTFXD
!        THE INDICATOR VALUE USED TO DESIGNATE WHETHER THE
!        OUTPUT IS TO INCLUDE INFORMATION ON WHETHER THE
!        PARAMETER IS FIXED (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: PV
!        THE SCALAR IN WHICH THE PREDICTED VALUE FROM THE MODEL FOR
!        ROW   NROW   IS STORED.
!     INTEGER PVTEMP
!        THE STARTING LOCATION IN THE WORK AREA OF
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!     REAL(KIND=WP) :: RSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     REAL(KIND=WP) :: SCALE(LSCALE)
!        THE TYPICAL SIZE OF THE UNKNOWN PARAMETERS.
!     REAL(KIND=WP) :: SCL
!        THE ACTUAL TYPICAL SIZE USED.
!     REAL(KIND=WP) :: TAU
!        THE AGREEMENT TOLERANCE.
!     LOGICAL WIDE
!       THE VARIABLE USED TO INDICATE WHETHER THE HEADING SHOULD
!        FULL WIDTH (TRUE) OR NOT (FALSE).
!     REAL(KIND=WP) :: XM(IXM,M)
!        THE ARRAY IN WHICH ONE ROW OF THE INDEPENDENT VARIABLE ARRAY
!        IS STORED.
!
      nall0 = stkst(1)
!
      fplrs = d1mach(4)
!
!     SELECT FIRST ROW OF INDEPENDENT VARIABLES WHICH CONTAINS NO ZEROS
!
      call setrow(nrow, xm, n, m, ixm, nrowu)
!
!     SUBDIVIDE WORK AREA
!
      ifp = 4
!
      lmsg = npar + 1
!
      ifixd = stkget(npar,2)
      msg = stkget(lmsg,2)
      dtemp = stkget(n*npar,ifp)
      partmp = stkget(npar,ifp)
      pvtemp = stkget(n,ifp)
!
      if (ierr.eq.1) return
!
!     SET UP IFIXD
!
      if (ifixed(1).lt.0) call setiv(istak(ifixd), npar, 0)
      if (ifixed(1).ge.0) call cpyvii(npar, ifixed, 1, istak(ifixd), 1)
!
!     SET PARAMETERS NECESSARY FOR THE COMPUTATIONS
!
      ndd = -log10(fplrs)
!
      if ((neta.lt.2) .or. (neta.gt.ndd)) then
        call etamdl(mdl, par, npar, xm, n, m, ixm, eta, ndgt1,&
     &      rstak(partmp), rstak(pvtemp), nrowu)
      else
         eta = 10.0_wp**(-neta)
         ndgt1 = neta
      end if
!
      if ((ntau.lt.1) .or. (ntau.gt.(ndgt1-1)/2)) then
         ndgt2 = (ndgt1+3)/4
      else
         ndgt2 = ntau
      end if
!
      tau = 10.0_wp**(-ndgt2)
!
      indxpv = pvtemp + nrowu - 1
!
!     COMPUTE PREDICTED VALUE OF MODEL USING CURRENT PARAMETER
!     ESTIMATES, AND COMPUTE USER-SUPPLIED DERIVATIVE VALUES
!
      call mdl(par, npar, xm, n, m, ixm, rstak(pvtemp))
      pv = rstak(indxpv)
      call drv(par, npar, xm, n, m, ixm, rstak(dtemp))
!
      istak(msg) = 0
!
      do 30 j=1,npar
!
         if (scale(1).gt.0.0_wp) then
            scl = scale(j)
         else
            scl = par(j)
         end if
         if (scl.eq.0.0_wp) scl = 1.0_wp
!
!     CALL ROUTINE TO CHECK USER SUPPLIED NUMERICAL DERIVATIVES
!     WITH RESPECT TO THE JTH PARAMETER.
!
         indxd = dtemp - 1 + n*(j-1) + nrowu
!
         d = rstak(indxd)
        call dckmn(j, d, par, scl, npar, eta, tau, mdl, xm, n, nrowu,&
     &      m, ixm, pv, rstak(pvtemp), istak(msg), lmsg)
!
   30 continue
!
      if (istak(msg).ge.1) ierr = istak(msg) + 1
!
!     PRINT RESULTS IF THEY ARE DESIRED
!
      hlfrpt = .false.
!
      if ((nprt.ne.0) .or. (ierr.ne.0)) then
         hlfrpt = .true.
        call dckout(xm,ixm,n,m,nrowu,ndgt1,ndgt2,npar,istak(msg),&
    &      lmsg,par,scale,lscale,hdr,page,wide,isubhd,prtfxd,&
     &      istak(ifixd))
      end if
!
      call stkclr(nall0)
!
      return
!
      end
