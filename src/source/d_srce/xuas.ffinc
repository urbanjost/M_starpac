!XUAS
      subroutine xuas(ldstak,typ)
      real(kind=wp),intent(in) :: typ
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     ROUTINE TO TEST THE AUTOREGRESSIVE SPECTRUM ANALYSIS ROUTINES
!
!     SERIES Y IS THE FIRST 50 VALUES OF THE SERIES LISTED ON PAGE
!     318 OF JENKINS AND WATTS.  THE SPECTRUM OF THIS SERIES IS SHOWN
!     FOR VARIOUS BANDWIDTH ON PAGE 270 OF JENKINS AND WATTS.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  JUNE 10, 1982
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   ldstak
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      real(kind=wp) :: dstak(12)
!
!  LOCAL SCALARS
      real(kind=wp) :: fmax,fmin,ymiss
     integer&
     &   i,iar,iprt,lacov,lag,lagmax,lds,lyfft,nf,nprt,ny
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
    &   acov(101),freq(300),phi(101),spca(101),spcf(101),y(150),&
     &   yfft(400)
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL ACFS,IPRINT,DCOPY,SETRV,UAS,UASF,UASFS,UASS,UASV,UASVS
!
!  INTRINSIC FUNCTIONS
      intrinsic abs
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: ACOV(101)
!        THE AUTOCOVARIANCE VECTOR.
!     REAL(KIND=WP) :: DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     REAL(KIND=WP) :: FMAX, FMIN
!        THE MAXIMUM AND MINIMUM FREQUENCIES AT WHICH THE
!        SPECTRUM IS TO BE COMPUTED.
!     REAL(KIND=WP) :: FREQ(300)
!        THE VECTOR OF FREQUENCIES AT WHICH THE SPECTRUM IS COMPUTED.
!     INTEGER I
!        AN INDEX VARIABLE
!     INTEGER IAR
!        THE ORDER OF THE AUTOREGRESSIVE MODEL TO BE USED.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER IPRT
!        THE LOGICAL UNIT USED FOR PRINTED OUTPUT.
!     INTEGER LACOV
!        THE LENGTH OF THE VECTOR ACOV.
!     INTEGER LAG, LAGMAX
!        THE INDEXING VARIABLE INDICATING THE LAG VALUE OF THE
!        AUTOCOVARIANCE BEING COMPUTED AND THE MAXIMUM LAG TO BE USED,
!        RESPECTIVELY.
!     INTEGER LDS
!        THE LENGTH OF THE VECTOR DSTAK IN COMMON CSTAK.
!     INTEGER LYFFT
!        THE LENGTH OF THE VECTOR YFFT.
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES AT WHICH THE SPECTRUM IS
!        TO BE COMPUTED.
!     INTEGER NPRT
!        A CODE USED TO SPECIFY THE TYPE OF PLOT, WHERE IF
!        NPRT < 0 THE PLOT IS DECIBLES/LINEAR
!        NPRT = 0 THE PLOT IS SUPPRESSED
!        NPRT > 0 THE PLOT IS LOG/LINEAR
!     INTEGER NY
!        THE NUMBER OF OBSERVATIONS IN THE SERIES Y.
!     REAL(KIND=WP) :: PHI(101)
!        THE VECTOR OF THE ORDER IAR AUTOREGRESSIVE MODEL COEFFICIENTS.
!     REAL(KIND=WP) :: SPCA(101)
!        THE ARRAYS IN WHICH THE AUTOREGRESSIVE SPECTRUM IS STORED
!        FOR EACH LAG WINDOW.
!     REAL(KIND=WP) :: SPCF(101)
!        THE ARRAYS IN WHICH THE FOURIER SPECTRUM IS STORED
!        FOR EACH LAG WINDOW.
!     REAL(KIND=WP) :: Y(150)
!         THE ARRAY CONTAINING THE TIME SERIES FROM JENKINS AND WATTS.
!     REAL(KIND=WP) :: YFFT(400)
!        THE VECTOR OF THE OBSERVED TIME SERIES TO BE ANALYZED USING
!        THE FFT.
!     REAL(KIND=WP) :: YMISS
!        THE USER SUPPLIED CODE WHICH IS USED TO DETERMINE WHETHER OR
!        NOT AN OBSERVATION IN THE SERIES IS MISSING.  IF Y(I) = YMISS,
!        THE VALUE IS ASSUMED MISSING, OTHERWISE IT IS NOT.
!
!
     data   y(  1), y(  2), y(  3), y(  4), y(  5), y(  6)&
     &    /-0.88_wp, -0.12_wp, -0.89_wp, -1.38_wp, -0.07_wp,  1.03_wp/
     data   y(  7), y(  8), y(  9), y( 10), y( 11), y( 12)&
     &    / 2.14_wp,  0.35_wp, -1.10_wp, -1.78_wp, -2.76_wp, -1.77_wp/
     data   y( 13), y( 14), y( 15), y( 16), y( 17), y( 18)&
     &    / 0.98_wp,  1.00_wp, -0.70_wp, -1.01_wp, -1.30_wp, -0.85_wp/
     data   y( 19), y( 20), y( 21), y( 22), y( 23), y( 24)&
     &    /-0.46_wp,  1.63_wp,  0.06_wp, -0.17_wp, -1.01_wp, -1.04_wp/
     data   y( 25), y( 26), y( 27), y( 28), y( 29), y( 30)&
     &    /-0.66_wp, -1.12_wp, -0.51_wp, -0.71_wp, -0.20_wp, -0.13_wp/
     data   y( 31), y( 32), y( 33), y( 34), y( 35), y( 36)&
     &    / 0.14_wp,  1.59_wp, -0.76_wp, -1.08_wp, -1.77_wp, -1.20_wp/
     data   y( 37), y( 38), y( 39), y( 40), y( 41), y( 42)&
     &    / 0.45_wp, -0.07_wp, -0.63_wp, -0.35_wp, -0.87_wp, -0.62_wp/
     data   y( 43), y( 44), y( 45), y( 46), y( 47), y( 48)&
     &    / 0.28_wp,  1.90_wp,  2.14_wp,  1.05_wp,  0.31_wp,  1.07_wp/
     data   y( 49), y( 50)&
     &    / 2.67_wp,  2.44_wp/
!
!
      call iprint(iprt)
!
!     CHECK ERROR HANDLING
!
!        TEST 1  -  MISCELANEOUS ERROR CHECKING
!
      write (iprt, 2000)
      ymiss = 1.16_wp
      lagmax = -1
      ny = -10
      lacov = 101
      lag = -2
      iar = -2
      lyfft = -11
      nf = -5
      fmin = 0.5_wp
      fmax = 0.0_wp
      nprt = -1
      lds = 0
      write(iprt, 1001)
      call uas(y, ny)
      write (iprt, 1002) ierr
      write(iprt, 1003)
     call uass(y, ny, iar, phi, lagmax, lag, nf,&
     &   fmin, fmax, nprt,spca, spcf, freq, lds)
      write (iprt, 1002) ierr
      write(iprt, 1019)
      call uasf (yfft, ny, lyfft, lds)
      write (iprt, 1002) ierr
      write(iprt, 1020)
     call uasfs(yfft, ny, lyfft, lds, iar, phi, lagmax, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq)
      write (iprt, 1002) ierr
      write (iprt, 1007)
      call uasv(acov, lagmax, ny)
      write (iprt, 1002) ierr
      write (iprt, 1008)
     call uasvs(acov, lagmax, y, ny, iar, phi, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq, lds)
      write (iprt, 1002) ierr
!
!        TEST 2  -  MISCELANEOUS ERROR CHECKING (CONTINUED)
!
      write (iprt, 2010)
      ymiss = 1.16_wp
      ny = 50
      lagmax = 50
      lag = 101
      iar = 101
      call setrv(phi, iar, 2.0_wp)
      call setrv(acov, lagmax+1, 2.0_wp)
      acov(1) = 1.0_wp
      lyfft = -11
      nf = 51
      fmin = 0.0_wp
      fmax = 0.5_wp
      nprt = 5
      lds = 0
      write(iprt, 1003)
     call uass(y, ny, iar, phi, lagmax, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq, lds)
      write (iprt, 1002) ierr
      write(iprt, 1019)
      call uasf (yfft, ny, lyfft, lds)
      write (iprt, 1002) ierr
      write(iprt, 1020)
     call uasfs(yfft, ny, lyfft, lds, iar, phi, lagmax, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq)
      write (iprt, 1002) ierr
      write (iprt, 1007)
      call uasv(acov, lagmax, ny)
      write (iprt, 1002) ierr
      write (iprt, 1008)
     call uasvs(acov, lagmax, y, ny, iar, phi, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq, lds)
      write (iprt, 1002) ierr
!
!        TEST 3  -  LDS TOO SMALL
!
      write (iprt, 2030)
      ymiss = 1.16_wp
      ny = 50
      lagmax = 49
      lyfft = 400
      lag = 16
      iar = 2
      phi(1) = 1.0_wp
      phi(2) = -0.5_wp
      call acfs (y, ny, lagmax, lacov, acov, iar, phi, 0, 700)
      nf = 51
      fmin = 0.0_wp
      fmax = 0.5_wp
      nprt = 3
      lds = 0
      write(iprt, 1003)
     call uass(y, ny, iar, phi, lagmax, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq, lds)
      write (iprt, 1002) ierr
      write(iprt, 1019)
      call uasf (yfft, ny, lyfft, lds)
      write (iprt, 1002) ierr
      write(iprt, 1020)
     call uasfs(yfft, ny, lyfft, lds, iar, phi, lagmax, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq)
      write (iprt, 1002) ierr
      write (iprt, 1008)
     call uasvs(acov, lagmax, y, ny, iar, phi, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq, lds)
      write (iprt, 1002) ierr
!
!     CHECK RESULTS FROM VALID CALL
!
      ymiss = 1.16_wp
      ny = 50
      lagmax = 49
      lyfft = 400
      lag = 16
      iar = 2
      phi(1) = 1.0_wp
      phi(2) = -0.5_wp
      nf = 51
      fmin = 0.0_wp
      fmax = 0.5_wp
      nprt = 2
      lds = 700
!
!     TEST OF UAS
!
      write(iprt, 2020)
      write(iprt, 1001)
      call uas(y, ny)
      write (iprt, 1002) ierr
!
!     TEST OF UASS
!
      write(iprt, 2020)
      write(iprt, 1003)
     call uass(y, ny, iar, phi, lagmax, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq, lds)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM UASS
!
      write (iprt, 1004) (freq(i), spca(i), spcf(i), i=1,nf)
      write (iprt, 1005) iar, lag
      write (iprt, 1006) (phi(i), i=1,abs(iar))
!
!     TEST OF UASF
!
      write(iprt, 2020)
      write(iprt, 1019)
      call dcopy(ny, y, 1, yfft, 1)
      call uasf (yfft, ny, lyfft, lds)
      write (iprt, 1002) ierr
!
!     TEST OF UASFS
!
      write(iprt, 2020)
      write(iprt, 1020)
      call dcopy(ny, y, 1, yfft, 1)
     call uasfs(yfft, ny, lyfft, lds, iar, phi, lagmax, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM UASFS
!
      write (iprt, 1004) (freq(i), spca(i), spcf(i), i=1,nf)
      write (iprt, 1005) iar, lag
      write (iprt, 1006) (phi(i), i=1,abs(iar))
!
!     TEST OF UASV
!
      write(iprt, 2020)
      write (iprt, 1007)
      call uasv(acov, lagmax, ny)
      write (iprt, 1002) ierr
!
!     TEST OF UASVS
!
      write(iprt, 2020)
      write (iprt, 1008)
     call uasvs(acov, lagmax, y, ny, iar, phi, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq, lds)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM UASVS
!
      write (iprt, 1004) (freq(i), spca(i), spcf(i), i=1,nf)
      write (iprt, 1005) iar, lag
      write (iprt, 1006) (phi(i), i=1,abs(iar))
!
!     MINIMUM PROBLEM SIZE
!
      ymiss = 1.16_wp
      ny = 17
      lagmax = 1
      lyfft = 400
      lag = 1
      iar = -1
      phi(1) = 1.0_wp
      phi(2) = -0.5_wp
      nf = 1
      fmin = 0.0_wp
      fmax = 0.5_wp
      nprt = 2
      lds = ldstak
!
!     TEST OF UAS
!
      write (iprt, 2060)
      write(iprt, 1001)
      call uas(y, ny)
      write (iprt, 1002) ierr
!
!     TEST OF UASS
!
      write(iprt, 2060)
      write(iprt, 1003)
     call uass(y, ny, iar, phi, lagmax, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq, lds)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM UASS
!
      write (iprt, 1004) (freq(i), spca(i), spcf(i), i=1,nf)
      write (iprt, 1005) iar, lag
      write (iprt, 1006) (phi(i), i=1,abs(iar))
!
!     CHECK HANDLING OF FMIN AND FMAX, AND LAG.EQ.0 AND IAR.EQ.0
!
      ny = 50
      lagmax = 49
      lyfft = 400
      lag = 0
      iar = 0
      phi(1) = 1.0_wp
      phi(2) = -0.5_wp
      nf = 51
      fmin = 0.45_wp
      fmax = 0.5_wp
      nprt = 2
!
!     TEST OF UASS
!
      write(iprt, 2070)
      write(iprt, 1003)
     call uass(y, ny, iar, phi, lagmax, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq, lds)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM UASS
!
      write (iprt, 1004) (freq(i), spca(i), spcf(i), i=1,nf)
      write (iprt, 1005) iar, lag
      write (iprt, 1006) (phi(i), i=1,abs(iar))
!
!     WHITE NOISE SPECTRUM
!
      ymiss = 1.16_wp
      call setrv(yfft, ny, 0.0_wp)
      ny = 50
      lagmax = 49
      lyfft = 400
      lag = 16
      iar = 2
      phi(1) = 1.0_wp
      phi(2) = -0.5_wp
      nf = 51
      fmin = 0.0_wp
      fmax = 0.5_wp
      nprt = 2
!
!     TEST OF UASS
!
      write(iprt, 2080)
      write(iprt, 1003)
     call uass(yfft, ny, iar, phi, lagmax, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq, lds)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM UASS
!
      write (iprt, 1004) (freq(i), spca(i), spcf(i), i=1,nf)
      write (iprt, 1005) iar, lag
      write (iprt, 1006) (phi(i), i=1,abs(iar))
!
!     SUPPRESS OUTPUT AND
!     CHECK HANDLING OF LAG .LT.0 AND IAR .LT. 0
!
      ny = 50
      lagmax = 49
      lyfft = 400
      lag = 0
      iar = 0
      phi(1) = 1.0_wp
      phi(2) = -0.5_wp
      nf = 51
      fmin = 0.45_wp
      fmax = 0.5_wp
      nprt = 0
!
!     TEST OF UASS
!
      write(iprt, 2090)
      write(iprt, 1003)
     call uass(y, ny, iar, phi, lagmax, lag, nf,&
     &   fmin, fmax, nprt, spca, spcf, freq, lds)
      write (iprt, 1002) ierr
!
!     PRINT RETURNED VALUES FROM UASS
!
      write (iprt, 1004) (freq(i), spca(i), spcf(i), i=1,nf)
      write (iprt, 1005) iar, lag
      write (iprt, 1006) (phi(i), i=1,abs(iar))
!
      return
!
!     FORMAT STATEMENTS
!
 1001 format (12h test of uas)
 1002 format (/8h ierr is, i5/)
 1003 format (13h test of uass)
 1004 format (3(1x, e16.8))
 1005 format (/7h iar = , i5/7h lag = , i5)
 1006 format (/7h phi = , (1x, 5d21.8))
 1007 format (13h test of uasv)
 1008 format (14h test of uasvs)
 1019 format (13h test of uasf)
 1020 format (14h test of uasfs)
 2000 format (32h1check error handling  -  test 1)
 2010 format (32h1check error handling  -  test 2)
 2020 format (14h1valid problem)
 2030 format (14h1lds too small)
 2060 format (21h1minimum problem size)
2070 format (&
     &   59h1check handling of fmin and fmax, lag and iar equal to zero)
 2080 format (21h1white noise spectrum)
 2090 format (44h1suppress output, lag and iar less than zero)
      end
