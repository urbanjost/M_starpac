!FITPT1
      SUBROUTINE FITPT1(N, M, XM, Y, PV, SDPV, RES, SDRES, WT, IXM,
     +   NNZW, WEIGHT, IPTOUT)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBOUTINE PRINTS THE DATA SUMMARY FOR THE NONLINEAR
!     LEAST SQUARES SUBROUTINES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  APRIL 2, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      INTEGER
     +   IPTOUT,IXM,M,N,NNZW
      LOGICAL
     +   WEIGHT
!
!  ARRAY ARGUMENTS
      DOUBLE PRECISION
     +   PV(N),RES(N),SDPV(N),SDRES(N),WT(N),XM(IXM,M),Y(N)
!
!  SCALARS IN COMMON
      INTEGER
     +   IERR
!
!  LOCAL SCALARS
      DOUBLE PRECISION
     +   FPLM
      INTEGER
     +   I,IPRT,JCOL1,JCOLM,K,NMAX
!
!  EXTERNAL FUNCTIONS
      DOUBLE PRECISION
     +   D1MACH
      EXTERNAL D1MACH
!
!  EXTERNAL SUBROUTINES
      EXTERNAL IPRINT,OBSSUM
!
!  INTRINSIC FUNCTIONS
      INTRINSIC MIN
!
!  COMMON BLOCKS
      COMMON /ERRCHK/IERR
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     DOUBLE PRECISION FPLM
!        THE FLOATING POINT LARGEST MAGNITUDE.
!     INTEGER I
!        AN INDEXING VARIABLE.
!     INTEGER IERR
!        THE INTEGER VALUE DESIGNATING WHETHER ANY ERRORS HAVE
!        BEEN DETECTED.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .NE. 0, ERRORS HAVE BEEN DETECTED.
!     INTEGER IPTOUT
!        THE VARIABLE USED TO CONTROL PRINTED OUTPUT.
!     INTEGER IXM
!        THE FIRST DIMENSION OF THE INDEPENDENT VARIABLE ARRAY.
!     INTEGER JCOLM
!        THE LAST COLUMN OF THE INDEPENDENT VARIABLE TO BE PRINTED.
!     INTEGER JCOL1
!        THE FIRST COLUMN OF THE INDEPENDENT VARIABLE TO BE PRINTED.
!     INTEGER K
!        AN INDEX VARIABLE.
!     INTEGER M
!        THE NUMBER OF INDEPENDENT VARIABLES.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS.
!     INTEGER NMAX
!        THE MAXIMUM NUMBER OF ROWS TO BE PRINTED.
!     INTEGER NNZW
!        THE NUMBER OF NON ZERO WEIGHTS.
!     DOUBLE PRECISION PV(N)
!        THE PREDICTED VALUE BASED ON THE CURRENT PARAMETER ESTIMATES
!     DOUBLE PRECISION RES(N)
!        THE RESIDUALS FROM THE FIT.
!     DOUBLE PRECISION SDPV(N)
!        THE STANDARD DEVIATION OF THE PREDICTED VALUE.
!     DOUBLE PRECISION SDRES(N)
!        THE STANDARD DEVIATIONS OF THE RESIDUALS.
!     LOGICAL WEIGHT
!        THE VARIABLE USED TO INDICATE WHETHER WEIGHTED ANALYSIS IS TO
!        BE PERFORMED (TRUE) OR NOT (FALSE).
!     DOUBLE PRECISION WT(N)
!        THE USER SUPPLIED WEIGHTS.
!     DOUBLE PRECISION XM(IXM,M)
!        THE ARRAY IN WHICH ONE ROW OF THE INDEPENDENT VARIABLE ARRAY
!        IS STORED.
!     DOUBLE PRECISION Y(N)
!        THE ARRAY OF THE DEPENDENT VARIABLE.
!
      FPLM = D1MACH(2)
!
      CALL IPRINT(IPRT)
!
      WRITE (IPRT,1100)
!
      IF (WEIGHT) THEN
         WRITE (IPRT,1010)
      ELSE
         WRITE (IPRT,1000)
      END IF
      WRITE (IPRT, 1110)
!
!     TEST WHETHER COLUMN VECTOR XM(*, 1) = VECTOR 1.0D0
!
      DO 10 I=1,N
         IF (XM(I,1).NE.1.0D0) GO TO 20
   10 CONTINUE
      GO TO 30
!
!     NOT A UNIT VECTOR
!
   20 JCOL1 = 1
      JCOLM = MIN(M,3)
      GO TO 40
!
!     UNIT VECTOR
!
   30 JCOLM = MIN(M,4)
      JCOL1 = MIN(2,JCOLM)
   40 K = JCOLM - JCOL1 + 1
!
      NMAX = N
      IF ((IPTOUT.EQ.1) .AND. (N.GE.45)) NMAX = MIN(N,40)
!
!     PRINT OBSERVATION SUMMARY
!
      CALL OBSSUM(N, M, XM, Y, PV, SDPV, RES, SDRES, WT, IXM,
     +   WEIGHT, K, 1, NMAX, JCOL1, JCOLM)
!
      IF (NMAX.GE.N) GO TO 200
!
      DO 195 I = 1, 3
!
         GO TO (160, 170, 180), K
  160    WRITE (IPRT,1120)
         GO TO 190
  170    WRITE (IPRT,1130)
         GO TO 190
  180    WRITE (IPRT,1140)
!
  190    CONTINUE
         WRITE (IPRT, 1150)
         IF (WEIGHT) WRITE (IPRT, 1160)
!
  195 CONTINUE
!
!     PRINT LAST LINE OF OUTPUT
!
      CALL OBSSUM(N, M, XM, Y, PV, SDPV, RES, SDRES, WT, IXM,
     +   WEIGHT, K, N, N, JCOL1, JCOLM)
!
  200 CONTINUE
!
      IF ((NNZW.LT.N) .AND. (IERR.EQ.0)) WRITE (IPRT, 1060)
      IF ((NNZW.LT.N) .AND. (IERR.EQ.4)) WRITE (IPRT, 1070)
      IF ((NNZW.EQ.N) .AND. (IERR.EQ.4)) WRITE (IPRT, 1080)
      IF ((IERR.GT.0) .AND. (IERR.NE.4)) WRITE (IPRT, 1090)
!
      RETURN
!
!     FORMAT STATEMENTS
!
 1000 FORMAT (/53X, 9HDEPENDENT, 7X, 9HPREDICTED, 5X, 12H STD DEV OF ,
     +   24X, 4HSTD /
     +   2X, 3HROW, 13X, 16HPREDICTOR VALUES, 20X, 8HVARIABLE, 8X,
     +   6H VALUE, 8X, 12HPRED VALUE  , 6X, 9HRESIDUAL , 8X, 3HRES)
 1010 FORMAT (/53X, 9HDEPENDENT, 7X, 9HPREDICTED, 5X, 12H STD DEV OF ,
     +   24X, 4HSTD /
     +   2X, 3HROW, 13X, 16HPREDICTOR VALUES, 20X, 8HVARIABLE, 8X,
     +   6H VALUE, 8X, 12HPRED VALUE  , 6X, 9HRESIDUAL , 8X, 3HRES,
     +   4X, 6HWEIGHT)
 1060 FORMAT (// 37H *  NC  -  VALUE NOT COMPUTED BECAUSE,
     +   20H THE WEIGHT IS ZERO.)
 1070 FORMAT (// 44H *  NC  -  VALUE NOT COMPUTED BECAUSE EITHER,
     +   53H THE WEIGHT OR THE STANDARD DEVIATION OF THE RESIDUAL,
     +   9H IS ZERO.)
 1080 FORMAT (// 37H *  NC  -  VALUE NOT COMPUTED BECAUSE,
     +   48H THE STANDARD DEVIATION OF THE RESIDUAL IS ZERO.)
 1090 FORMAT (// 29H *  NC  -  VALUE NOT COMPUTED,
     +   54H BECAUSE CONVERGENCE PROBLEMS PREVENTED THE COVARIANCE,
     +   28H MATRIX FROM BEING COMPUTED.)
 1100 FORMAT (//31H RESULTS FROM LEAST SQUARES FIT/ 1X, 31('-'))
 1110 FORMAT (' ')
 1120 FORMAT (4X, '.', 25X, '.')
 1130 FORMAT (4X, '.', 3X, 2(14X, '.'))
 1140 FORMAT (4X, '.', 10X, '.', 2(14X, '.'))
 1150 FORMAT ('+', 49X, 11X, '.', 3(15X, '.'), 11X, '.')
 1160 FORMAT ('+', 130X, '.')
      END
