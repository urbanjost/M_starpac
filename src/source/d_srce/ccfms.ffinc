!CCFMS
      SUBROUTINE CCFMS (YM, YMMISS, N, M, IYM, LAGMAX, CCOV,
     &   CMISS, ICCOV, JCCOV, NLPPC, INLPPC, JNLPPC, NPRT, LDSTAK)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE USER CALLABLE ROUTINE FOR COMPUTING THE CROSS
!     CORRELATIONS AND COVARIANCES OF A MULTIVARIATE SERIES (LONG CALL).
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 21, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) ::
     &   CMISS
      INTEGER
     &   ICCOV,INLPPC,IYM,JCCOV,JNLPPC,LAGMAX,LDSTAK,M,N,NPRT
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     &   CCOV(*),YM(*),YMMISS(*)
      INTEGER
     &   NLPPC(*)
!
!  SCALARS IN COMMON
      INTEGER
     &   IERR
!
!  ARRAYS IN COMMON
      REAL(KIND=WP) :: DSTAK(12)
!
!  LOCAL SCALARS
      REAL(KIND=WP) ::
     &   FPLM
      INTEGER
     &   I,IFP,IO,IPRT,IYMFFT,J,K,LDSMIN,LGLST,LGLSTJ,LGLSTK,LYFFT,
     &   NALL0,NFFT,RHOC,SDRHOC,YMEAN,YMEANJ,YMEANK,YSD,YSDJ,YSDK
      LOGICAL
     &   ISFFT,ISLONG,NEWPG
!
!  LOCAL ARRAYS
      REAL(KIND=WP) ::
     &   RSTAK(12)
      INTEGER
     &   ISTAK(12)
      CHARACTER
     &   NMSUB(6)*1
!
!  EXTERNAL FUNCTIONS
!      REAL(KIND=WP) ::
!     +   D1MACH
!      INTEGER
!     +   STKST
!      EXTERNAL D1MACH,STKST
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL ACVFM,CCFER,CCFMNM,CCFOUT,IPRINT,LDSCMP,STKCLR,STKSET
!
!  INTRINSIC FUNCTIONS
      INTRINSIC MIN,SQRT
!
!  COMMON BLOCKS
      COMMON /CSTAK/DSTAK
      COMMON /ERRCHK/IERR
!
!  STATEMENT FUNCTIONS
      INTEGER
     &   I2,I3C,I3N
!
!  EQUIVALENCES
      EQUIVALENCE (DSTAK(1),ISTAK(1))
      EQUIVALENCE (DSTAK(1),RSTAK(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: CCOV(ICCOV, JCCOV, M)
!        THE CROSS COVARIANCE MATRIX.
!     REAL(KIND=WP) :: CMISS
!        THE MISSING VALUE CODE FOR THE CCVF ESTIMATES.
!     REAL(KIND=WP) :: DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     REAL(KIND=WP) :: FPLM
!        THE FLOATING POINT LARGEST MAGNITUDE.
!     INTEGER ICCOV
!        THE ACTUAL FIRST DIMENSION OF THE ARRAY CCOV, AS
!        SPECIFIED IN THE USERS PROGRAM.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER IFP
!        AN INDICATOR FOR STACK ALLOCATION TYPE, WHERE IFP=3 INDICATES
!        SINGLE PRECISION AND IFP=4 INDICATES DOUBLE PRECISION.
!     INTEGER INLPPC
!        THE ACTUAL FIRST DIMENSION OF THE ARRAY NLPPC AS SPECIFIEC
!        IN THE USERS PROGRAM.
!     INTEGER IO
!        A VARIABLE USED TO DETERMINE THE AMOUNT OF STORAGE REQUIRED,
!        BASED ON WHETHER PRINTED OUTPUT IS DESIRED.
!     INTEGER IPRT
!        THE UNIT NUMBER USED FOR OUTPUT.
!     LOGICAL ISFFT
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER THE CALLING
!        ROUTINE HAS SUFFIX F (ISFFT = TRUE) OR NOT (ISFFT = FALSE)
!     LOGICAL ISLONG
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER THE CALLING
!        ROUTINE HAS SUFFIX S (ISLONG = TRUE) OR NOT (ISLONG = FALSE)
!     INTEGER ISTAK(12)
!        THE INTEGER VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER IYM
!        THE ACTUAL FIRST DIMENSION OF THE MATRIX YM AS
!        SPECIFIED IN THE USERS PROGRAM.
!     INTEGER IYMFFT
!        THE ACTUAL FIRST DIMENSION OF THE MATRIX YMFFT AS
!        SPECIFIED IN THE USERS PROGRAM.
!     INTEGER I2
!        STATEMENT FUNCTION SPECIFYING THE DESIRED LOCATION WITHIN YM
!     INTEGER I3C
!        STATEMENT FUNCTION SPECIFYING THE DESIRED LOCATION WITHIN CCOV
!     INTEGER I3N
!        STATEMENT FUNCTION SPECIFYING THE DESIRED LOCATION WITHIN NLPPC
!     INTEGER J
!        THE INDEX OF -SERIES 1- IN THE ARRAY YM.
!     INTEGER JCCOV
!        THE ACTUAL SECOND DIMENSION OF THE ARRAY CCOV, AS
!        SPECIFIED IN THE USERS PROGRAM.
!     INTEGER JNLPPC
!        THE SECOND DIMENSION OF THE ARRAY NLPPC AS SPECIFIED
!        IN THE USERS PROGRAM.
!     INTEGER K
!        THE INDEX OF -SERIES 2- IN THE ARRAY YM.
!     INTEGER LAGMAX
!        THE MAXIMUM LAG VALUE REQUESTED.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     INTEGER LGLST, LGLSTJ, LGLSTK
!        THE STARTING LOCATION IN ISTAK FOR THE ARRAY LGLST,
!        AND THE LOCATIONS IN LGLST IN EHICH THE NUMBER OF THE
!        LAG OF THE LAST ACVF WHICH COULD BE COMPUTED FOR SERIES
!        J AND K, RESPECTIVELY, BEFORE A MISSNG ACVF (DUE TO MISSING
!        DATA).
!     INTEGER LYFFT
!        THE LENGTH OF THE VECTOR YFFT.
!     INTEGER M
!        THE NUMBER OF SERIES BEING COMPARED, IE THE
!        NUMBER OF COLUMNS OF DATA IN YM.
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS IN EACH SERIES
!     INTEGER NALL0
!        THE NUMBER OF OUTSTANDING STACK ALLOCATIONS
!     LOGICAL NEWPG
!        AN INDICATOR VARIABLE USED TO DETERMINE WHEN A NEW PAGE
!        IS APPROPRIATE FOR THE OUTPUT.
!     INTEGER NFFT
!        THE NUMBER OF OBSERVATIONS IN THE EXTENDED SERIES.
!     INTEGER NLPPC(INLPPC, JNLPPC, M)
!        THE ARRAY CONTAINING THE NUMBER OF LAGGED PRODUCT PAIRS
!        USED TO COMPUTE EACH ACVF ESTIMATE.
!     CHARACTER*1 NMSUB(6)
!        THE NAME OF THE SUBROUTINE CALLING THE ERROR CHECKING
!        SUBROUTINE.
!     INTEGER NPRT
!        THE INDICATOR VARIABLE USED TO SPEDIFY WHETHER OR NOT
!        PRINTED OUTPUT IS TO BE GIVEN, WHERE IF THE VALUE OF
!        NPRT IS ZERO, NO OUTPUT IS GIVEN.
!     INTEGER RHOC
!        THE STARTING LOCATION IN DSTAK OF THE ARRAY RHOC.
!     REAL(KIND=WP) :: RSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER SDRHOC
!        THE STARTING LOCATION IN THE WORK AREA FOR SDRHOC.
!     REAL(KIND=WP) :: YM(IYM, M)
!        THE MATRIX CONTAINING THE OBSERVED TIME SERIES
!     INTEGER YMEAN, YMEANJ, YMEANK
!        THE STARTING LOCATION FOR THE ARRAY CONTAINING THE
!        MEANS OF EACH OF THE SERIES, AND THE LOCATION IN
!        THE ARRAY FOR THE MEAN OF THE JTH AND KTH SERIES,
!        RESPECTIVELY.
!     REAL(KIND=WP) :: YMMISS(M)
!        THE MISSING VALUE CODES FOR EACH OF THE SERIES IN YM.
!     INTEGER YSD, YSDJ, YSDK
!        THE STARTING LOCATION FOR THE ARRAY CONTAINING THE
!        STANDARD DEVIATIONS OF EACH OF THE SERIES, AND THE
!        LOCATION IN THE ARRAY FOR THE STANDARD DEVIATION OF
!        THE JTH AND KTH SERIES, RESPECTIVELY.
!
!     SET UP NAME ARRAYS
!
      DATA
     &  NMSUB(1),  NMSUB(2),  NMSUB(3),  NMSUB(4),  NMSUB(5),  NMSUB(6)
     & /     'C',       'C',       'F',       'M',       'S',       ' '/
!
      I2(I,J) = I + (J-1)*IYM
      I3C(I,J,K) = I + (J-1)*ICCOV + (K-1)*JCCOV*ICCOV
      I3N(I,J,K) = I + (J-1)*INLPPC + (K-1)*JNLPPC*INLPPC
!
!     SET UP FOR ERROR CHECKING
!
      IERR = 0
      LYFFT = N + LAGMAX
      IYMFFT = LYFFT
      NFFT = N
      ISFFT = .FALSE.
      ISLONG = .TRUE.
!
      IO = 1
      IF (NPRT .EQ. 0) IO = 0
!
      CALL LDSCMP(3+2*IO, 0, M, 0, 0, 0, 'D',
     &            2*M+IO*(4*LAGMAX+2), LDSMIN)
!
      CALL CCFER(NMSUB, N, LAGMAX, LDSTAK, LDSMIN, ICCOV, JCCOV,
     &  INLPPC, JNLPPC, M, LYFFT, NFFT, IYM, IYMFFT, ISFFT, ISLONG)
!
!     CHECK WHETHER AN ERROR HAS BEEN DETECTED
!
      IF (IERR.EQ.0) THEN
!
        FPLM = D1MACH(2)
!
!       SET UP THE WORK AREA.
!
        CALL STKSET (LDSTAK, 4)
        NALL0 = STKST(1)

        IFP = 4
!
        YMEAN = STKGET(M, IFP)
        YSD = STKGET(M, IFP)
        LGLST = STKGET(M, 2)
        IF (NPRT.EQ.0) THEN
          RHOC = YSD
          SDRHOC = YSD
        ELSE
          RHOC = STKGET(2*LAGMAX+1, IFP)
          SDRHOC = STKGET(2*LAGMAX+1, IFP)
        END IF
!
        IF (IERR.EQ.0) THEN
!
!         BEGIN LOOP FOR COMPUTATIONS
!
          NEWPG = .FALSE.
!
          DO 40 K = 1, M
!
             YMEANK = YMEAN + K - 1
             YSDK = YSD + K - 1
             LGLSTK = LGLST + K - 1
!
             CALL ACVFM (YM(I2(1,K)), YMMISS(K), N, RSTAK(YMEANK),
     &                   CCOV(I3C(1,K,K)), LAGMAX, ISTAK(LGLSTK),
     &                   NLPPC(I3N(1,K,K)), LAGMAX+1)
             RSTAK(YSDK) = SQRT(CCOV(I3C(1,K,K)) * N / (N - 1))
!
             IF ((K-1).LE.0) GO TO 40
!
             DO 30 J = 1, (K-1)
!
                YMEANJ = YMEAN + J - 1
                YSDJ = YSD + J - 1
                LGLSTJ = LGLST + J - 1
!
                CALL CCFMNM (YM(I2(1,J)), YMMISS(J),
     &                       YM(I2(1,K)), YMMISS(K),
     &                       N,  LAGMAX, 2*LAGMAX+1,
     &                       CCOV(I3C(1,J,J)), CCOV(I3C(1,K,K)),
     &                       CCOV(I3C(1,J,K)), CCOV(I3C(1,K,J)), ICCOV,
     &                       NLPPC(I3N(1,J,J)), NLPPC(I3N(1,K,K)),
     &                       NLPPC(I3N(1,J,K)), NLPPC(I3N(1,K,J)),
     &                       INLPPC,
     &                       RSTAK(YMEANJ), RSTAK(YMEANK), RSTAK(RHOC),
     &                       RSTAK(SDRHOC),
     &                       NPRT, MIN(ISTAK(LGLSTJ), ISTAK(LGLSTK)))
!
                IF (NPRT .EQ. 0) GO TO 30
!
!         CALL ROUTINE TO PRINT OUT CORRELATIONS
!
                CALL CCFOUT (J, RSTAK(YMEANJ), RSTAK(YSDJ), N,
     &                       NLPPC(I3N(1,J,J)), K, RSTAK(YMEANK),
     &                       RSTAK(YSDK), N, NLPPC(I3N(1,K,K)), LAGMAX,
     &                       2*LAGMAX+1, RSTAK(RHOC), RSTAK(SDRHOC),
     &                       .TRUE., NLPPC(I3N(1,J,K)),
     &                       NLPPC(I3N(1,K,J)),
     &                       INLPPC, YMMISS(J), YMMISS(K), NEWPG)
!
                NEWPG = .TRUE.
!
   30        CONTINUE
   40     CONTINUE
!
          CMISS = FPLM
        END IF
!
        CALL STKCLR(NALL0)
      END IF
!
      IF (IERR.NE.0) THEN
!
!     PRINT PROPER CALL SEQUENCE AND RETURN
!
        IERR = 1
        CALL IPRINT (IPRT)
        WRITE (IPRT, 1000)
      END IF
!
      RETURN
!
!     FORMAT STATEMENTS
!
 1000 FORMAT(/42H THE CORRECT FORM OF THE CALL STATEMENT IS//
     &  '       CALL CCFMS (YM, YMMISS, N, M, IYM,'/
     &  '      +            LAGMAX, CCOV, CMISS, ICCOV, JCCOV,'/
     &  '      +            NLPPC, INLPPC, JNLPPC, NPRT, LDSTAK)')
      END
