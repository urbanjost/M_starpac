!RANDU
      REAL(KIND=WP) :: FUNCTION RANDU(JD)
!***BEGIN PROLOGUE  RANDU  (ORIGINALLY UNI)
!***DATE WRITTEN   810915
!***REVISION DATE  900315
!***CATEGORY NO.  L6A21
!***KEYWORDS  RANDOM NUMBERS, UNIFORM RANDOM NUMBERS
!***AUTHOR    BLUE, JAMES
!             KAHANER, DAVID
!             APPLIED AND COMPUTATIONAL MATHEMATICS DIVISTION, NIST
!
!             MARSAGLIA, GEORGE
!             COMPUTER SCIENCE DEPT., WASH STATE UNIV
!
!             MODIFIED BY -
!             DONALDSON, JANET
!             APPLIED AND COMPUTATIONAL MATHEMATICS DIVISTION, NIST
!
!***PURPOSE  THIS ROUTINE GENERATES QUASI UNIFORM RANDOM NUMBERS ON
!             (0,1] AND CAN BE USED ON ANY COMPUTER WHICH ALLOWS
!             INTEGERS AT LEAST AS LARGE AS 32767.
!***DESCRIPTION
!
!       THIS ROUTINE GENERATES QUASI UNIFORM RANDOM NUMBERS ON THE
!       INTERVAL (0,1].  IT CAN BE USED WITH ANY COMPUTER WHICH ALLOWS
!       INTEGERS AT LEAST AS LARGE AS 32767.
!
!
!   USE
!       FIRST TIME....
!                   Z = RANDU(JD)
!                     HERE JD IS ANY  N O N - Z E R O  INTEGER.
!                     THIS CAUSES INITIALIZATION OF THE PROGRAM
!                     AND THE FIRST RANDOM NUMBER TO BE RETURNED AS Z.
!       SUBSEQUENT TIMES...
!                   Z = RANDU(0)
!                     CAUSES THE NEXT RANDOM NUMBER TO BE RETURNED AS Z.
!
!
!===================================================================
!   NOTE: USERS WHO WISH TO TRANSPORT THIS PROGRAM FROM ONE COMPUTER
!         TO ANOTHER SHOULD READ THE FOLLOWING INFORMATION:
!
!   MACHINE DEPENDENCIES...
!      MDIG = A LOWER BOUND ON THE NUMBER OF BINARY DIGITS AVAILABLE
!              FOR REPRESENTING INTEGERS, INCLUDING THE SIGN BIT.
!              THIS VALUE MUST BE AT LEAST 16, BUT MAY BE INCREASED
!              IN LINE WITH REMARK A BELOW.
!
!   REMARKS...
!     A. THIS PROGRAM CAN BE USED IN TWO WAYS:
!        (1) TO OBTAIN REPEATABLE RESULTS ON DIFFERENT COMPUTERS,
!            SET 'MDIG' TO THE SMALLEST OF ITS VALUES ON EACH, OR,
!        (2) TO ALLOW THE LONGEST SEQUENCE OF RANDOM NUMBERS TO BE
!            GENERATED WITHOUT CYCLING (REPEATING) SET 'MDIG' TO THE
!            LARGEST POSSIBLE VALUE.
!     B. THE SEQUENCE OF NUMBERS GENERATED DEPENDS ON THE INITIAL
!          INPUT 'JD' AS WELL AS THE VALUE OF 'MDIG'.
!          IF MDIG=16 ONE SHOULD FIND THAT
!            THE FIRST EVALUATION
!              Z=RANDU(305) GIVES Z=.027832881...
!            THE SECOND EVALUATION
!              Z=RANDU(0) GIVES   Z=.56102176...
!            THE THIRD EVALUATION
!              Z=RANDU(0) GIVES   Z=.41456343...
!            THE THOUSANDTH EVALUATION
!              Z=RANDU(0) GIVES   Z=.19797357...
!
!***REFERENCES  MARSAGLIA G., "COMMENTS ON THE PERFECT UNIFORM RANDOM
!                 NUMBER GENERATOR", UNPUBLISHED NOTES, WASH S. U.
!***ROUTINES CALLED  I1MACH,XERROR
!***END PROLOGUE  RANDU
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      INTEGER
     +   JD
!
!  LOCAL SCALARS
      REAL(KIND=WP) ::
     +   ONE,ZERO
      INTEGER
     +   I,J,J0,J1,JSEED,K,K0,K1,M1,M2,MDIG
!
!  LOCAL ARRAYS
      INTEGER
     +   M(17)
!
!  EXTERNAL FUNCTIONS
      INTEGER
     +   I1MACH
      EXTERNAL I1MACH
!
!  EXTERNAL SUBROUTINES
      EXTERNAL XERROR
!
!  INTRINSIC FUNCTIONS
      INTRINSIC ABS,MIN,MOD,REAL
!
!  SAVE STATEMENT
      SAVE I,J,M,M1,M2
!
!
      DATA M(1),M(2),M(3),M(4),M(5),M(6),M(7),M(8),M(9),M(10),M(11),
     +     M(12),M(13),M(14),M(15),M(16),M(17)/30788,23052,2053,19346,
     +     10646,19427,23975,19049,10949,19693,29746,26748,2796,23890,
     +     29168,31924,16499/
      DATA M1,M2,I,J/32767,256,5,17/
      DATA ZERO,ONE /0.0E0_WP,1.0E0_WP/
!
!***FIRST EXECUTABLE STATEMENT  RANDU
      IF (JD.NE.0) THEN
!  FILL
          MDIG = I1MACH(8) + 1
!
!  MODIFICATION SO SAME NUMBERS WILL BE GENERATED ON ALL MACHINES
!  WITH I1MACH(8) AT LEAST 31
!
          MDIG = MIN(MDIG,32)
!
!  BE SURE THAT MDIG AT LEAST 16...
          IF (MDIG.LT.16) CALL XERROR('RANDU--MDIG LESS THAN 16',22,1,2)
          M1 = 2** (MDIG-2) + (2** (MDIG-2)-1)
          M2 = 2** (MDIG/2)
          JSEED = MIN(ABS(JD),M1)
          IF (MOD(JSEED,2).EQ.0) JSEED = JSEED - 1
          K0 = MOD(9069,M2)
          K1 = 9069/M2
          J0 = MOD(JSEED,M2)
          J1 = JSEED/M2
          DO 10 I = 1,17
              JSEED = J0*K0
              J1 = MOD(JSEED/M2+J0*K1+J1*K0,M2/2)
              J0 = MOD(JSEED,M2)
              M(I) = J0 + M2*J1
   10     CONTINUE
          I = 5
          J = 17
      END IF
!  BEGIN MAIN LOOP HERE
      K = M(I) - M(J)
      IF (K.LT.0) K = K + M1
      M(J) = K
      I = I - 1
      IF (I.EQ.0) I = 17
      J = J - 1
      IF (J.EQ.0) J = 17
      RANDU = DBLE(K)/DBLE(M1)
!
!  MODIFICATION SO RANDOM NUMBERS IN (0,1] RATHER THAN [0,1)
!
      IF (RANDU.EQ.ZERO) RANDU = ONE
      END
