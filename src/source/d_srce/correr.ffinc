!CORRER
      subroutine correr(nmsub, m, n, iym, ivcv, ldstak, icor, nprt)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE CHECKS FOR ERRORS IN THE INPUT
!     PARAMETERS.  IF ANY ARE FOUND A FLAG IS SET AND
!     COMPUTATION STOPS
!
!     WRITTEN BY -
!        LINDA L. MITCHELL
!        STATISTICAL ENGINEERING DIVISION
!        NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  MAY 17, 1982
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   icor,ivcv,iym,ldstak,m,n,nprt
!
!  ARRAY ARGUMENTS
     character&
     &   nmsub(6)*1
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  LOCAL SCALARS
     integer&
     &   ip,iprt,is,ldsmin
     logical&
     &   err01,err02,err03,err04,err05,head
!
!  LOCAL ARRAYS
     character&
    &   livcv(8)*1,liym(8)*1,llds(8)*1,lm(8)*1,ln(8)*1,&
     &   lthree(8)*1,ltwo(8)*1
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL EISGE,IPRINT,LDSCMP
!
!  INTRINSIC FUNCTIONS
      intrinsic max
!
!  COMMON BLOCKS
      common /errchk/ierr
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     LOGICAL ERR01, ERR02, ERR03, ERR04, ERR05
!                  VALUE(S) INDICATING WHETHER OR ERROR WAS DETECTED
!                  (TRUE) OR NOT (FALSE).
!     LOGICAL HEAD
!                  A FLAG INDICATING WHETHER THE HEADING SHOULD BE
!                  PRINTED (TRUE) OR NOT (FALSE).  IF A HEADING IS
!                  PRINTED, THE VALUE OF HEAD WILL BE CHANGED TO FALSE.
!     INTEGER ICOR
!                  DETERMINES WHICH SUBROUTINE CALLED CORRER
!                  IF =1, THEN CALLED BY CORR
!                     =2, THEN CALLED BY CORRS
!     INTEGER IERR
!                  A FLAG, THAT WHEN RETURNED BY THIS ROUTINE DESIGNATES
!                  WHETHER  ERRORS WERE DETECTED IN THE PARAMETER LIST
!                  IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!                  IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER IP
!                  A TEMPORARY VARIABLE USED FOR COMPUTING LDSMIN.
!     INTEGER IPRT
!                  THE LOGICAL OUTPUT UNIT
!     INTEGER IS
!                  A TEMPORARY VARIABLE USED FOR COMPUTING LDSMIN.
!     INTEGER IVCV
!                  THE DIMENSION OF SC
!     INTEGER IYM
!                  ACTUAL ROW DIMENSION OF YM
!     INTEGER LDSMIN
!                  THE MINIMUM LENGTH ALLOWED FOR DSTAK
!     INTEGER LDSTAK
!                  THE LENGTH OF THE VECTOR DSTAK IN COMMON CSTAK
!     CHARACTER*1 LIVCV(8), LIYM(8), LLDS(8), LM(8), LN(8), LTHREE(8),
!    *  LTWO(8)
!                  THE ARRAY(S) CONTAINING THE NAME(S) OF THE
!                  VARIABLE(S) CHECKED FOR ERRORS.
!     INTEGER M
!                  NUMBER OF VARIABLES
!     INTEGER N
!                  THE NUMBER OFOBSERVATIONS
!     CHARACTER*1 NMSUB(6)
!                  THE NAME OF THE CALLING SUBROUTINE.
!     INTEGER NPRT
!                  THE VARIABLE CONTROLLING THE PRINTED OUTPUT.
!                  IF NPRT=0, OUTPUT IS SUPPRESSED, OTHERWISE IT IS NOT
!
!
!     SET UP NAME ARRAYS
!
     data  livcv(1), livcv(2), livcv(3), livcv(4), livcv(5), livcv(6),&
     &      livcv(7), livcv(8) / 'I', 'V', 'C', 'V', ' ', ' ', ' ', ' '/
     data   liym(1),  liym(2),  liym(3),  liym(4),  liym(5),  liym(6),&
     &       liym(7),  liym(8) / 'I', 'Y', 'M', ' ', ' ', ' ', ' ', ' '/
     data   llds(1),  llds(2),  llds(3),  llds(4),  llds(5),  llds(6),&
     &       llds(7),  llds(8) / 'L', 'D', 'S', 'T', 'A', 'K', ' ', ' '/
     data     lm(1),    lm(2),    lm(3),    lm(4),    lm(5),    lm(6),&
     &         lm(7),    lm(8) / 'M', ' ', ' ', ' ', ' ', ' ', ' ', ' '/
     data     ln(1),    ln(2),    ln(3),    ln(4),    ln(5),    ln(6),&
     &         ln(7),    ln(8) / 'N', ' ', ' ', ' ', ' ', ' ', ' ', ' '/
     data lthree(1),lthree(2),lthree(3),lthree(4),lthree(5),lthree(6),&
     &     lthree(7),lthree(8) / 'T', 'H', 'R', 'E', 'E', ' ', ' ', ' '/
     data   ltwo(1),  ltwo(2),  ltwo(3),  ltwo(4),  ltwo(5),  ltwo(6),&
     &       ltwo(7),  ltwo(8) / 'T', 'W', 'O', ' ', ' ', ' ', ' ', ' '/
!
      call iprint(iprt)
!
      head = .true.
!
      ierr = 0
!
!     BEGIN ERROR CHECKING. THE COMMENTS STATE WHAT CONSTITUTES AN
!     ERROR. COMMENTS ENCLOSED BY STARS(**) INDICATE THE ERROR CONDITION
!
!     **NUMBER OF VARIABLES LESS THAN 2**
!
      call eisge(nmsub, lm, m, 2, 2, head, err01, ltwo)
!
!     **NUMBER OF OBSERVATIONS LESS THAN 3**
!
      call eisge(nmsub, ln, n, 3, 2, head, err02, lthree)
!
!     **OBSERVATION MATRIX DIMENSIONED LESS THAN N**
!
      err03 = .false.
     if (.not.err02) call eisge(nmsub, liym, iym, n, 3, head, err03,&
     &   ln)
!
!     **SC MATRIX DIMENSIONED LESS THAN M**
!
      err04 = .false.
     if ((icor.eq.2) .and. (.not.err01)) call eisge(nmsub, livcv,&
     &   ivcv, m, 3, head, err04, lm)
!
      if (err01 .or. err02) go to 40
      is = 0
      if (icor.eq.1) is = 1
!
      ip = 1
      if (nprt.eq.0) ip = 0
!
!
!     CHECK FOR ENOUGH COMMON FOR THIS PROBLEM
!
     call ldscmp(12, 0, ip*max(n,m), 0, 0, 0, 'D',&
     &   is*m*m + ip*(max(n,m)+m+n*(m+3)+6*m*m), ldsmin)
!
      call eisge(nmsub, llds, ldstak, ldsmin, 9, head, err05, llds)
!
      if (err01 .or. err02 .or. err03 .or. err04 .or. err05) go to 40
      return
!
!     SET IERR TO INDICATE AN ERROR
!
   40 continue
      ierr = 1
      return
      end
