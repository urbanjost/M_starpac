!DFBWM
      SUBROUTINE DFBWM (N, LAG, W, LW, NLPPA1, NLPPA2, LNLPPA, DF, BW)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE COMPUTES AND STORES THE ASSOCIATED DEGREES OF
!     FREEDOM AND BANDWIDTH FOR A GIVEN LAG WINDOW WHEN MISSING DATA ARE
!     INVOLVED.
!
!     WRITTEN BY - JANET R. DONALDSON
!                  STATISTICAL ENGINEERING DIVISION
!                  NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 7, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      REAL(KIND=WP) ::
     +   BW,DF
      INTEGER
     +   LAG,LNLPPA,LW,N
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     +   W(LW)
      INTEGER
     +   NLPPA1(LNLPPA),NLPPA2(LNLPPA)
!
!  LOCAL SCALARS
      INTEGER
     +   K
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: BW
!        THE BANDWIDTH.
!     REAL(KIND=WP) :: DF
!        THE EFFECTIVE DEGREES OF FREEDOM.
!     INTEGER K
!        AN INDEX VARIABLE
!     INTEGER LNLPPA
!        THE LENGTH OF THE VECTOR NLPPA.
!     INTEGER LW
!        THE LENGTH OF THE VECTOR W.
!     INTEGER LAG
!        THE LAG WINDOW TRUNCATION POINT USED FOR A SPECIFIC WINDOW.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS IN THE SERIES.
!     INTEGER NLPPA1(LNLPPA), NLPPA2(LNLPPA)
!        THE NUMBER OF LAGGED PRODUCT PAIRS USED FOR EACH ACVF
!        ESTIMATE.
!     REAL(KIND=WP) :: W(LW)
!        THE VECTOR OF LAG WINDOWS.
!
      BW = (W(1)*N)**2/NLPPA1(1)
      DO 10 K = 1, LAG
         BW = BW + (W(K+1)*(N-K))**2 *
     +      (1.0E0_WP/NLPPA1(K+1) + 1.0E0_WP/NLPPA2(K+1))
   10 CONTINUE
!
!
      BW = N / BW
      DF = 2.0E0_WP * BW * N
      RETURN
      END
