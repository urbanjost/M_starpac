!DCOEF
      subroutine dcoef (ndf, nd, iod, npardf, pardf, mbo, work)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE EXPANDS THE DIFFERENCE FILTER SPECIFIED BY NDF,
!     IOD AND ND INTO PARDF.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DEVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 26, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   mbo,ndf,npardf
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   pardf(*),work(*)
     integer&
     &   iod(*),nd(*)
!
!  LOCAL SCALARS
     integer&
     &   k,kk,l,ntimes,nwork1,nwork2
!
!  EXTERNAL FUNCTIONS
     integer&
     &   nchose
!       EXTERNAL NCHOSE
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL MULTBP
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     INTEGER IOD(NDF)
!        THE ORDER OF EACH OF THE DIFFERENCE FACTORS.
!     INTEGER K
!        AN INDEX VARIABLE.
!     INTEGER KK
!        AN INDEX VARIABLE.
!     INTEGER L
!        AN INDEX VARIABLE.
!     INTEGER MBO
!        THE MAXIMUM BACK ORDER OPERATOR.
!     INTEGER ND(NDF)
!        THE NUMBER OF TIMES EACH DIFFERENCE FACTOR IS TO BE APPLIED.
!     INTEGER NDF
!        THE NUMBER OF DIFFERENCE FACTORS
!     INTEGER NPARDF
!        THE ORDER OF THE EXPANDED DIFFERENCE FILTER.
!     INTEGER NTIMES
!        THE NUMBER OF TIMES A GIVEN DIFFERENCE FACTOR IS TO BE APPLIED.
!     INTEGER NWORK1
!        THE NUMBER OF TERMS IN THE FIRST COLUMN OF WORK.
!     INTEGER NWORK2
!        THE NUMBER OF TERMS IN THE SECOND COLUMN OF WORK
!     REAL(KIND=WP) :: PARDF(MBO)
!        THE VECTOR CONTAINING THE DIFFERENCE FILTER PARAMETERS.
!     REAL(KIND=WP) :: WORK(MBO,2)
!        A WORK ARRAY NECESSARY TO EXPAND THE DIFFERENCE FILTER.
!
      npardf = 0
!
      do 30 l = 1, ndf
         if (nd(l).eq.0) go to 30
         ntimes = nd(l)
         nwork1 = iod(l) * nd(l)
         do 10 k = 1, nwork1
            work(k) = 0.0_wp
   10    continue
         do 20 k = 1, ntimes
            kk = k * iod(l)
            work(kk) = ((-1)**(k+1)) * nchose(ntimes, k)
   20    continue
         nwork2 = nwork1 + npardf
        call multbp (work(1), nwork1, pardf, npardf, work(mbo+1),&
     &      nwork2, mbo)
   30 continue
      return
      end
