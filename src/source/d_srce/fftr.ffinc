!FFTR
      SUBROUTINE FFTR (YFFT, N, NFFT, IEXTND, NF, AB, LAB)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS IS THE USER CALLABLE ROUTINE FOR COMPUTING
!     THE FOURIER TRANSFORM OF A SERIES.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 7, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      INTEGER
     &   IEXTND,LAB,N,NF,NFFT
!
!  ARRAY ARGUMENTS
      REAL(KIND=WP) ::
     &   AB(*),YFFT(*)
!
!  SCALARS IN COMMON
      INTEGER
     &   IERR
!
!  LOCAL SCALARS
      REAL(KIND=WP) ::
     &   YEXTND
      INTEGER
     &   I,IPRT,ISN,N1,NFFT1,NFFT2
      LOGICAL
     &   ERR01,ERR02,ERR03,HEAD
!
!  LOCAL ARRAYS
      CHARACTER
     &   LLAB(8)*1,LN(8)*1,NMSUB(6)*1
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL AMEAN,EISGE,ENFFT,FFT,IPRINT,REALTR
!
!  COMMON BLOCKS
      COMMON /ERRCHK/IERR
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: AB(LAB)
!        THE VECTOR OF THE NF REAL AND IMAGINARY COMPONENTS OF THE
!        FOURIER COEFFICIENTS.
!     LOGICAL ERR01, ERR02, ERR03
!        VALUE(S) INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     LOGICAL HEAD
!        A VARIABLE USED TO INDICATE WHETHER A HEADING IS NEEDED FOR
!        ERROR MESSAGES (TRUE) OR NOT (FALSE).
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED
!     INTEGER IEXTND
!        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER ZERO
!        (IEXTND .EQ. 0) OR THE SERIES MEAN (IEXTND .NE. 0) IS TO BE
!        USED TO EXTEND THE SERIES.
!     INTEGER IPRT
!        THE LOGICAL UNIT USED FOR PRINTED OUTPUT.
!     INTEGER LAB
!        THE LENGTH OF THE VECTOR AB.
!     CHARACTER*1 LLAB(8), LN(8)
!        THE ARRAY(S) CONTAINING THE NAME(S) OF THE PARAMETER(S) CHECKED
!        FOR ERRORS.
!     INTEGER N
!        THE INTEGER NUMBER OF OBSERVATIONS.
!     INTEGER N1
!        THE VALUE N+1.
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES AT WHICH THE PERIODOGRAM IS
!        TO BE COMPUTED.
!     INTEGER NFFT
!        THE EFFECTIVE LENGTH OF THE SERIES TO BE TRANSFORMED.
!     INTEGER NFFT1
!        THE EFFECTIVE SERIES LENGTH ACTUALLY USED.
!     INTEGER NFFT2
!        THE EFFECTIVE LENGTH OF THE SERIES STORED AS A COMPLEX
!        VARIABLE.
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THIS SUBROUTINE.
!     REAL(KIND=WP) :: YEXTND
!        THE VALUE USED TO EXTEND THE SERIES.
!     REAL(KIND=WP) :: YFFT(N)
!        THE ARRAY CONTAINING THE OBSERVED TIME SERIES.
!
!     SET UP NAME ARRAYS
!
      DATA
     &  NMSUB(1),  NMSUB(2),  NMSUB(3),  NMSUB(4),  NMSUB(5),  NMSUB(6)
     & /     'F',       'F',       'T',       'R',       ' ',       ' '/
      DATA
     &   LLAB(1),   LLAB(2),   LLAB(3),   LLAB(4),   LLAB(5),   LLAB(6)
     & /     'L',       'A',       'B',       ' ',       ' ',       ' '/
      DATA
     &   LLAB(7),   LLAB(8)
     & /     ' ',       ' '/
      DATA
     &     LN(1),     LN(2),     LN(3),     LN(4),     LN(5),     LN(6)
     & /     'N',       ' ',       ' ',       ' ',       ' ',       ' '/
      DATA
     &     LN(7),     LN(8)
     & /     ' ',       ' '/
!
!     SET UP FOR ERROR CHECKING
!
      IERR = 0
      HEAD = .TRUE.
!
!     CALL ERROR CHECKING ROUTINES
!
      CALL EISGE(NMSUB, LN, N, 17, 1, HEAD, ERR01, LN)
      IF (ERR01) GO TO 5
!
      CALL ENFFT(NMSUB, NFFT, 2, N, LAB, NFFT1, HEAD, ERR02 ) !LN
      NF = NFFT1/2
!
      CALL EISGE(NMSUB, LLAB, LAB, NFFT1, 9, HEAD, ERR03, LLAB)
!
      IF (ERR02 .OR. ERR03) GO TO 5
      GO TO 10
!
    5 CONTINUE
      IERR = 1
      CALL IPRINT (IPRT)
      WRITE (IPRT, 1000)
      RETURN
!
   10 CONTINUE
!
!     COPY THE INPUT SERIES TO AB, EXTENDING APPROPRIATELY.
!
      YEXTND = 0.0_WP
      IF (IEXTND .NE. 0) CALL AMEAN (YFFT, N, YEXTND)
!
      DO 20 I = 1, N
         AB(I) = YFFT(I)
   20 CONTINUE
!
      N1 = N+1
      DO 30 I = N1, NFFT1
         AB(I) = YEXTND
   30 CONTINUE
!
      NFFT2 = (NFFT1-2) / 2
      ISN = 2
!
      CALL FFT (AB(1), AB(2), NFFT2, NFFT2, NFFT2, ISN)
      CALL REALTR (AB(1), AB(2), NFFT2, ISN)
!
      RETURN
!
!     FORMAT STATEMENTS
!
 1000 FORMAT (/42H THE CORRECT FORM OF THE CALL STATEMENT IS//
     &   53H       CALL FFTR (YFFT, N, NFFT, IEXTND, NF, AB, LAB))
      END
