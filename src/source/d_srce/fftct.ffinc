!FFTCT
      subroutine fftct(x, n2, ix)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     COSINE TRANSFORM OF N=2*N2 SYMMETRIC DATA POINTS
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   ix,n2
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   x(ix)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   a2,aa,ab,cd,cn,ex,pi,save,sd,sn
     integer&
     &   i,isn,j,k,m,m1,n1,nk
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL FFT,GETPI,REALTR
!
!  INTRINSIC FUNCTIONS
      intrinsic sin
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: AA, AB, A2
!     REAL(KIND=WP) :: CD, CN
!     REAL(KIND=WP) :: EX
!     INTEGER I, ISN
!     INTEGER IX
!        THE DIMENSION OF X.
!     INTEGER J
!     INTEGER K
!     INTEGER M, M1
!     INTEGER NK, N1
!     INTEGER N2
!        THE HALF LENGTH OF THE SYMMETRIC DATA ARRAY.  N2 MUST BE EVEN.
!     REAL(KIND=WP) :: PI
!        THE VALUE OF PI.
!     REAL(KIND=WP) :: SAVE, SD, SN
!     REAL(KIND=WP) :: X(IX)
!        THE N2+2 VECTOR WITH FIRST HALF OF SYMMETRIC DATA STORED IN
!        THE FIRST N2+1 LOCATIONS.  LOCATION N2+2 USED ONLY FOR
!        WORKSPACE.  THE COSINE TRANSFORM COEFFICIENTS ARE RETURNED
!        IN THE FIRST N2+1 LOCATIONS OF X.
!
      call getpi(pi)
!
      a2 = 0.0_wp
      n1 = n2 + 1
      do 10 j=2,n2,2
         a2 = a2 + x(j)
   10 continue
      a2 = 2.0_wp*a2
      m = n2/2
      m1 = m + 1
      ex = x(2)
      x(2) = 0.0_wp
      if (n1.lt.4) go to 30
      do 20 i=4,n1,2
         save = ex - x(i)
         ex = x(i)
         x(i) = save
   20 continue
   30 x(n2+2) = 0.0_wp
      isn = -2
      call realtr(x, x(2), m, isn)
      call fft(x, x(2), m, m, m, isn)
      sd = pi / (2*n2)
      cd = 2.0_wp*sin(sd)**2
      sd = sin(sd+sd)
      sn = 0.0_wp
      cn = 1.0_wp
      nk = n2 + 2
      do 40 j=2,m1
         k = nk - j
         aa = x(j) + x(k)
         ab = (x(j)-x(k))*0.5_wp
         ex = cn - (cd*cn+sd*sn)
         sn = (sd*cn-cd*sn) + sn
         cn = 0.5_wp/(ex*ex+sn*sn) + 0.5_wp
         sn = cn*sn
         cn = cn*ex
         ex = ab/sn
         x(j) = (aa+ex)*0.5_wp
         x(k) = (aa-ex)*0.5_wp
   40 continue
      ex = x(1)
      x(1) = ex + a2
      x(n2+1) = ex - a2
      x(n2+2) = 0.0_wp
      return
      end
