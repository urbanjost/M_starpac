!DIFMC
     subroutine difmc (y, ymiss, n, nfac, nd, iod, iar, phi, lphi, yf,&
     &   yfmiss, nyf, ldstak)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS SUBROUTINE EXPANDS THE DIFFERENCE FILTER SPECIFIED BY NFAC,
!     IOD AND ND INTO PHI AND PERFORMS THE DIFFERENCE FILTERING
!     OPERATION DEFINED BY PHI ON A SERIES CONTAINING MISSING DATA,
!     RETURNING THE FILTERED SERIES IN YF.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  NOVEMBER 26, 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      real(kind=wp) :: yfmiss,ymiss
     integer&
     &   iar,ldstak,lphi,n,nfac,nyf
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   phi(*),y(*),yf(*)
     integer&
     &   iod(*),nd(*)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      real(kind=wp) :: dstak(12)
!
!  LOCAL SCALARS
     integer&
     &   i,iprt,ldsmin,nall0,work
     logical&
     &   err01,err02,err03,err04,head
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   rstak(12)
     character&
     &   llds(8)*1,llphi(8)*1,ln(8)*1,nmsub(6)*1
!
!  EXTERNAL FUNCTIONS
!      INTEGER
!     +   STKST
!      EXTERNAL STKST
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL DCOEF,EISGE,ERDF,FLTARM,IPRINT,LDSCMP,STKCLR,STKSET
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!  EQUIVALENCES
      equivalence (dstak(1),rstak(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     LOGICAL ERR01, ERR02, ERR03, ERR04
!        VALUES INDICATING WHETHER AN ERROR WAS DETECTED (TRUE) OR NOT
!        (FALSE).
!     LOGICAL HEAD
!        A FLAG INDICATING WHETHER THE HEADING SHOULD BE PRINTED
!        (TRUE) OR NOT (FALSE).  IF A HEADING IS PRINTED, THE VALUE
!        OF HEAD WILL BE CHANGED TO FALSE.
!     INTEGER I
!        AN INDEX VARIABLE.
!     INTEGER IAR
!        THE NUMBER OF FILTER COEFFICIENTS.
!     INTEGER IERR
!        THE INTEGER VALUE RETURNED BY THIS ROUTINE DESIGNATING
!        WHETHER ANY ERRORS WERE DETECTED IN THE PARAMETER LIST.
!        IF IERR .EQ. 0, NO ERRORS WERE DETECTED.
!        IF IERR .EQ. 1, ERRORS HAVE BEEN DETECTED.
!     INTEGER IOD(NFAC)
!        THE ORDER OF EACH OF THE DIFFERENCE FACTORS.
!     INTEGER IPRT
!        THE UNIT NUMBER USED FOR OUTPUT.
!     INTEGER LDSMIN
!        THE MINIMUM LENGTH ALLOWED FOR THE ARRAY DSTAK.
!     INTEGER LDSTAK
!        THE LENGTH OF THE ARRAY DSTAK.
!     CHARACTER*1 LLDS(8), LLPHI(8), LN(8)
!        THE ARRAYS CONTAINING THE NAMES OF THE VARIABLES LDSTAK, N
!        AND LPHI, RESPECTIVELY.
!     INTEGER LPHI
!        THE LENGTH OF THE VECTOR PHI.
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS IN THE SERIES Y.
!     INTEGER NALL0
!        THE NUMBER OF OUTSTANDING STACK ALLOCATIONS.
!     INTEGER ND(NFAC)
!        THE ARRAY CONTAINING THE NUMBER OF TIMES THE DIFFERENCE
!        FACTORS ARE TO BE APPLIED.
!     INTEGER NFAC
!        THE NUMBER OF DIFFERENCE FACTORS.
!     CHARACTER*1 NMSUB(6)
!        THE ARRAY CONTAINING THE NAME OF THIS SUBROUTINE.
!     INTEGER NYF
!        THE NUMBER OF OBSERVATIONS IN THE FILTERED SERIES YF.
!     REAL(KIND=WP) :: PHI(LPHI)
!        THE VECTOR CONTAINING THE FILTER COEFFICIENTS.
!     REAL(KIND=WP) :: RSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER WORK
!        THE STARTING LOCATION FOR THE WORK VECTOR NECESSARY TO
!        EXPAND THE DIFFERENCE FILTER.
!     REAL(KIND=WP) :: Y(N)
!        THE VECTOR CONTAINING THE OBSERVED TIME SERIES.
!     REAL(KIND=WP) :: YF(N)
!        THE VECTOR IN WHICH THE FILTERED SERIES IS RETURNED.
!     REAL(KIND=WP) :: YFMISS
!        THE MISSING VALUE CODE USED IN THE FILTERED SERIES TO
!        INDICATE THE VALUE COULD NOT BE COMPUTED DUE TO MISSING DATA.
!     REAL(KIND=WP) :: YMISS
!        THE MISSING VALUE CODE USED IN THE INPUT SERIES TO INDICATE
!        AN OBSERVATION IS MISSING.
!
!     SET UP NAME ARRAYS
!
     data&
    &  nmsub(1),  nmsub(2),  nmsub(3),  nmsub(4),  nmsub(5),  nmsub(6)&
     & /     'D',       'I',       'F',       'M',       'C',       ' '/
     data&
    &  llds(1), llds(2), llds(3), llds(4), llds(5), llds(6),&
    &  llds(7), llds(8)&
     & /  'L',   'D',   'S',   'T',   'A',   'K',   ' ',   ' '/
     data&
    &  llphi(1), llphi(2), llphi(3), llphi(4), llphi(5), llphi(6),&
    &  llphi(7), llphi(8)&
     & /  'L',   'P',   'H',   'I',   ' ',   ' ',   ' ',   ' '/
     data&
    &  ln(1), ln(2), ln(3), ln(4), ln(5), ln(6), ln(7), ln(8)&
     & /  'N',   ' ',   ' ',   ' ',   ' ',   ' ',   ' ',   ' '/
!
!     SET UP FOR ERROR CHECKING
!
      ierr = 0
      head = .true.
!
      err01 = .false.
      err02 = .false.
      err03 = .false.
      err04 = .false.
!
!     CALL ERROR CHECKING ROUTINES
!
      call eisge(nmsub,ln,n,3,1,head,err01,ln)
!
      iar = 0
!
      if (nfac.ge.1) then
!
         do 10 i = 1, nfac
            iar = iar + nd(i)*iod(i)
   10    continue
!
         call erdf(nmsub,nfac,nd,iod,n,head,err02)
!
         if (.not.err02) then
            call eisge(nmsub,llphi,lphi,iar,9,head,err03,llphi)
            call ldscmp(1,0,0,0,0,0,'D',2*iar,ldsmin)
            call eisge(nmsub,llds,ldstak,ldsmin,9,head,err04,llds)
         end if
      end if
!
      if (err01 .or. err02 .or. err03 .or. err04) go to 20
      go to 30
!
   20 continue
      ierr = 1
      call iprint (iprt)
      write (iprt, 1000)
      return
!
   30 continue
!
      nyf = n
      do 50 i = 1, nyf
         yf(i) = y(i)
   50 continue
!
      yfmiss = ymiss
!
      if (nfac .le. 0) return
!
      call stkset (ldstak, 4)
      nall0 = stkst(1)
!
      do 60 i = 1, lphi
         phi(i) = 0.0_wp
   60 continue
!
      work = stkget(2*iar,4)
!
      if (ierr .eq. 1) go to 20
!
      call dcoef (nfac,nd,iod,iar,phi,lphi,rstak(work))
!
      call stkclr(nall0)
!
      if (ierr .eq. 1) go to 20
!
      call fltarm (yf,ymiss,nyf,iar,phi,yf,yfmiss,nyf)
!
      return
!
!     FORMAT STATEMENTS
!
1000 format (/42h the correct form of the call statement is//&
    &   '       CALL DIFMC (Y, YMISS, N,'/&
    &   '      +            NFAC, ND, IOD, IAR, PHI, LPHI,'/&
     &   '      +            YF, YFMISS, NYF, LDSTAK)')
      end
