!AOV1
      subroutine aov1(y, tag, n, ldstak)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE -
!     1. CALLS OTHER ROUTINES TO CHECK THE INPUT PARAMETERS
!     2. SETS UP THE NEEDED STORAGE LOCATIONS, AND
!     3. CALLS AOV1MN TO COMPUTE A COMPREHENSIVE SET OF RESULTS FOR A
!     ONEWAY ANALYSIS OF VARIANCE WITH AUTOMATIC PRINTOUT.
!
!     WRITTEN BY -
!       LINDA MITCHELL
!       STATISTICAL ENGINEERING DIVISION
!       NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  MAY 17, 1982
!                       BASED ON EARLIER VERSION BY J. R. DONALDSON
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   ldstak,n
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   tag(*),y(*)
!
!  SCALARS IN COMMON
     integer&
     &   ierr
!
!  ARRAYS IN COMMON
      real(kind=wp) :: dstak(12)
!
!  LOCAL SCALARS
     integer&
    &   b10,dtmean,dtsd,dtsize,gpmax,gpmin,ifp,index,int,iprt,&
     &   itemp,nall0,ng,nprt,nztags,ranks,srank,tval
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   rstak(12)
     integer&
     &   istak(12)
     character&
     &   nmsub(6)*1
!
!  EXTERNAL FUNCTIONS
!
!  EXTERNAL SUBROUTINES
!      EXTERNAL AOV1ER,AOV1HD,AOV1MN,IPRINT,STKCLR
!
!  COMMON BLOCKS
      common /cstak/dstak
      common /errchk/ierr
!
!  EQUIVALENCES
      equivalence (dstak(1),rstak(1))
      equivalence (dstak(1),istak(1))
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     INTEGER B10
!        STARTING LOCATION IN THE STACK AREA FOR B10
!     REAL(KIND=WP) :: DSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER DTMEAN
!        THE STARTING LOCATION IN THE STACK AREA FOR THE MEANS
!        OF EACH GROUP
!     INTEGER DTSD
!        THE STARTING LOCATION IN THE STACK AREA OF THE
!        STANDARD DEVIATIONS
!     INTEGER DTSIZE
!        THE STARTING LOCATION IN THE STACK AREA OF THE SIZE OF THE
!        DIFFERENT GROUPS
!     INTEGER GPMAX
!        THE STARTING LOCATION IN THE STACK AREA OF MAXIMUM
!        OBSERVATION
!     INTEGER GPMIN
!        THE STARTING LOCATION IN THE STACK AREA OF THE MINUMUM
!        OBSERVATION
!     INTEGER IERR
!        A COMMON VARIABLE USED AS A FLAG INDICATING WHETHER THERE
!        ARE ANY ERRORS, IF = 0 THEN NO ERRORS
!     INTEGER IFP
!        AN INDICATOR FOR STACK ALLOCATION TYPE, WHERE IFP=3 INDICATES
!        SINGLE PRECISION AND IFP=4 INDICATES DOUBLE PRECISION.
!     INTEGER INDEX
!        THE STARTING LOCATION IN THE STACK ARRAY OF THE INDEX FOR
!        THE SORTED TAGS
!     INTEGER INT
!        FRAMEWORK CODE VALUE FOR INTEGER NUMBERS
!     INTEGER IPRT
!        THE OUTPUT LOGICAL UNIT NUMBER
!     INTEGER ISTAK(12)
!        THE INTEGER VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER ITEMP
!        STARTING LOCATION IN THE STACK FOR THE
!        TEMPORARY STORAGE ARRAY
!     INTEGER LDSTAK
!        SIZE OF THE STACK AREA ALLOCATED IN THE USERS MAIN PROGRAM
!     INTEGER N
!        THE NUMBER OF OBSERVATIONS TO BE ANALYZED
!     INTEGER NALL0
!        THE NUMBER OF ALLOCATIONS OUTSTANDING AT THE TIME THAT THIS
!        ROUTINE WAS CALLED.
!     INTEGER NG
!        THE NUMBER OF GROUPS WITH DIFFERENT POSITIVE TAG VALUES
!     CHARACTER*1 NMSUB(6)
!        SUBROUTINE NAME
!     INTEGER NPRT
!        THE VARIABLE CONTROLLING AUTOMATIC PRINTOUT
!        IF =0, PRINTOUT IS SUPRESSED
!        OTHERWISE PRINTOUT IS PROVIDED
!     INTEGER NZTAGS
!        THE NUMBER OF OBSERVATIONS WITH POSITIVE NON-ZERO WIEGHTS
!     INTEGER RANKS
!        THE STARTING LOCATION IN WORK AREA FOR THE RANKS OF Y
!     REAL(KIND=WP) :: RSTAK(12)
!        THE DOUBLE PRECISION VERSION OF THE /CSTAK/ WORK AREA.
!     INTEGER SRANK
!        THE STARTING LOCATION IN STACK FOR THE SUM OF RANKS
!     REAL(KIND=WP) :: TAG(N)
!        THE VECTOR OF TAG VALUES
!     INTEGER TVAL
!        THE STARTING LOCATION IN THE STACK FOR THE VECTOR OF
!        THE DIFFERENT POSITIVE TAG VALUES, FOR AOV1
!     REAL(KIND=WP) :: Y(N)
!        THE VECTOR OF OBSERVATIONS
!
     data   nmsub(1), nmsub(2), nmsub(3), nmsub(4), nmsub(5), nmsub(6)&
     &     /      'A',      'O',      'V',      '1',      ' ',      ' '/
!
      call iprint(iprt)
!
!     SET UP FRAMEWORK VARIABLES FOR NUMBER TYPES
!
      int = 2
      ifp = 4
!
!     CHECK FOR ERRORS IN PARAMETERS, INITIALIZE STACK, AND SET NALL0.
!
     call aov1er(y, tag, n, n, nztags, ng, ldstak, nmsub, index, 1,&
     &   nall0)
!
      if (ierr.eq.0) go to 20
!
!     PRINT CORRECT FORM OF CALL STATEMENT AND RETURN TO CALLER
!
      ierr = 1
      write (iprt,1000)
      return
!
!     PRINT HEADING
!
   20 call aov1hd(iprt)
!
!     SET UP ADDITIONAL WORK VECTORS FOR AOV1MN AS CALLED FROM AOV1
!
      tval = stkget(ng,ifp)
      dtsize = stkget(ng,ifp)
      dtmean = stkget(ng,ifp)
      dtsd = stkget(ng,ifp)
      srank = stkget(ng,ifp)
      gpmin = stkget(ng,ifp)
      gpmax = stkget(ng,ifp)
      b10 = stkget(ng,ifp)
      ranks = stkget(nztags,ifp)
      itemp = stkget(nztags,int)
!
      nprt = 1
!
     call aov1mn(y, tag, n, rstak(tval), rstak(dtsize), rstak(dtmean),&
    &   rstak(dtsd), nprt, istak(index), rstak(srank), rstak(gpmin),&
    &   rstak(gpmax), rstak(b10), rstak(ranks),&
     &   istak(itemp), ng, nztags)
!
!     RELEASE THE STACK AREA
!
      call stkclr(nall0)
!
      return
!
!     FORMAT STATEMENT
!
1000 format(/42h the correct form of the call statement is//&
     &   '       CALL AOV1 (Y, TAG, N, LDSTAK)')
      end
