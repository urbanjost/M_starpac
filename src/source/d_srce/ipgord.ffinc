!IPGORD
     subroutine ipgord (peri, nf, n, freq, xaxis, yaxis, isym, npts,&
     &   lpcv)
!
!     LATEST REVISION  -  03/15/90  (JRD)
!
!     THIS ROUTINE PRODUCES CO-ORDINATES FOR THE SPECTRAL PLOTS.
!
!     WRITTEN BY  -  JANET R. DONALDSON
!                    STATISTICAL ENGINEERING DIVISION
!                    NATIONAL BUREAU OF STANDARDS, BOULDER, COLORADO
!
!     CREATION DATE  -  DECEMBER 7, 1981
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
     integer&
     &   lpcv,n,nf,npts
!
!  ARRAY ARGUMENTS
     real(kind=wp) ::&
     &   freq(nf),peri(nf),xaxis(lpcv),yaxis(lpcv)
     integer&
     &   isym(lpcv)
!
!  LOCAL SCALARS
     real(kind=wp) ::&
     &   ci,cimid
     integer&
     &   i,ii,nlim
!
!  LOCAL ARRAYS
     real(kind=wp) ::&
     &   s(40)
!
!  INTRINSIC FUNCTIONS
      intrinsic mod,dble,sqrt
!
!     VARIABLE DEFINITIONS (ALPHABETICALLY)
!
!     REAL(KIND=WP) :: CI, CIMID
!        THE WIDTH AND MIDPOINT OF THE TEST INTERVAL FOR WHITE NOISE.
!     REAL(KIND=WP) :: FREQ(NF)
!        THE ARRAY IN WHICH THE FREQUENCIES AT WHICH THE PERIODOGRAM
!        WAS ESTIMATED ARE STORED.
!     INTEGER I
!        AN INDEX VARIABLE
!     INTEGER II
!        AN INDEX VARIABLE
!     INTEGER ISYM(LPCV)
!        THE ARRAY CONTAINING THE CODE FOR THE PLOT SYMBOLS.
!     INTEGER LPCV
!        THE LENGTH OF THE PLOT CO-ORDINATE VECTORS.
!     INTEGER N
!        THE ACTUAL NUMBER OF OBSERVATIONS IN THE SERIES FROM WHICH
!        THE PERIODOGRAM WAS COMPUTED.
!     INTEGER NF
!        THE NUMBER OF FREQUENCIES FOR WHICH THE SPECTRAL ESTIMATES
!        ARE ESTIMATED.
!     INTEGER NLIM
!        THE NUMBER OF POINTS AT WHICH THE WHITE NOISE LIMITS ARE TO
!        PLOTTED.
!     INTEGER NPTS
!        THE NUMBER OF X, Y CO-ORDINATES TO BE PLOTTED.
!     REAL(KIND=WP) :: PERI(NF)
!        THE ARRAY CONTAINING THE INTEGRATED PERIODOGRAM VALUES.
!     REAL(KIND=WP) :: S(40)
!        VALUES USED TO COMPUTE THE CONFIDENCE LIMITS.
!     REAL(KIND=WP) :: XAXIS(LPCV), YAXIS(LPCV)
!        THE X, Y CO-ORDINATES FOR THE SPECTRAL PLOTS.
!
      data s(1)/0.975_wp/, s(2)/0.842_wp/, s(3)/0.708_wp/
      data s(4)/0.624_wp/, s(5)/0.563_wp/
      data s(6)/0.519_wp/, s(7)/0.483_wp/, s(8)/0.454_wp/
      data s(9)/0.430_wp/, s(10)/0.409_wp/
      data s(11)/0.391_wp/, s(12)/0.375_wp/, s(13)/0.361_wp/
      data s(14)/0.349_wp/, s(15)/0.338_wp/
      data s(16)/0.327_wp/, s(17)/0.318_wp/, s(18)/0.309_wp/
      data s(19)/0.301_wp/, s(20)/0.294_wp/
      data s(21)/0.287_wp/, s(22)/0.281_wp/, s(23)/0.275_wp/
      data s(24)/0.269_wp/, s(25)/0.264_wp/
      data s(26)/0.259_wp/, s(27)/0.254_wp/, s(28)/0.250_wp/
      data s(29)/0.246_wp/, s(30)/0.242_wp/
      data s(31)/0.238_wp/, s(32)/0.234_wp/, s(33)/0.231_wp/
      data s(34)/0.227_wp/, s(35)/0.224_wp/
      data s(36)/0.221_wp/, s(37)/0.218_wp/, s(38)/0.215_wp/
      data s(39)/0.213_wp/, s(40)/0.210_wp/
!
      i = n + mod(n,2) - 1
!
      if (i .le. 40) then
         ci = s(i)
      else
         ci = 1.36_wp/ sqrt(dble(i))
      end if
!
      do 10 i = 1, nf
         xaxis(i) = freq(i)
         yaxis(i) = peri(i)
         isym(i) = 1
   10 continue
!
      nlim = 101
!
      ii = nf
!
      do 30 i = 1, nlim, 2
         cimid = dble(i-1) / dble(nlim-1)
         if (cimid - ci .lt. 0.0_wp) go to 20
         ii = ii + 1
         xaxis(ii) = cimid / 2.0_wp
         yaxis(ii) = cimid - ci
         isym(ii) = 2
   20    if (cimid + ci .gt. 1.0_wp) go to 30
         ii = ii + 1
         xaxis(ii) = cimid / 2.0_wp
         yaxis(ii) = cimid + ci
         isym(ii) = 2
   30 continue
!
      npts = ii
!
      return
      end
