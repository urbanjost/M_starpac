!R1MACH
      real function r1mach(i)
!
!     MODIFIED JANUARY 22, 1990 TO ACCORD WITH CMLIB AND PORT VERSIONS
!
!  SINGLE-PRECISION MACHINE CONSTANTS
!
!  R1MACH(1) = B**(EMIN-1), THE SMALLEST POSITIVE MAGNITUDE.
!
!  R1MACH(2) = B**EMAX*(1 - B**(-T)), THE LARGEST MAGNITUDE.
!
!  R1MACH(3) = B**(-T), THE SMALLEST RELATIVE SPACING.
!
!  R1MACH(4) = B**(1-T), THE LARGEST RELATIVE SPACING.
!
!  R1MACH(5) = LOG10(B)
!
!  TO ALTER THIS FUNCTION FOR A PARTICULAR ENVIRONMENT,
!  THE DESIRED SET OF DATA STATEMENTS SHOULD BE ACTIVATED BY
!  REMOVING THE C FROM COLUMN 1.
!
!  FOR IEEE-ARITHMETIC MACHINES (BINARY STANDARD), THE FIRST
!  SET OF CONSTANTS BELOW SHOULD BE APPROPRIATE.
!
!  WHERE POSSIBLE, OCTAL OR HEXADECIMAL CONSTANTS HAVE BEEN USED
!  TO SPECIFY THE CONSTANTS EXACTLY WHICH HAS IN SOME CASES
!  REQUIRED THE USE OF EQUIVALENT INTEGER ARRAYS.
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      integer i
!
!  LOCAL ARRAYS
      real rmach(5)
      integer diver(2),large(2),log10(2),right(2),small(2)
!
!  EXTERNAL FUNCTIONS
!      integer i1mach
!      external i1mach
!
!  EXTERNAL SUBROUTINES
!      external seterr
!
!  EQUIVALENCES
      equivalence (rmach(1),small(1))
      equivalence (rmach(2),large(1))
      equivalence (rmach(3),right(1))
      equivalence (rmach(4),diver(1))
      equivalence (rmach(5),log10(1))
!
!     MACHINE CONSTANTS FOR IEEE ARITHMETIC MACHINES, SUCH AS THE AT&T
!     3B SERIES, MOTOROLA 68000 BASED MACHINES (E.G. SUN 3 AND AT&T
!     PC 7300), AND 8087 BASED MICROS (E.G. IBM PC AND AT&T 6300).
!
!      DATA SMALL(1) /     8388608 /
!      DATA LARGE(1) /  2139095039 /
!      DATA RIGHT(1) /   864026624 /
!      DATA DIVER(1) /   872415232 /
!      DATA LOG10(1) /  1050288283 /
!
!     MACHINE CONSTANTS FOR AMDAHL MACHINES.
!
!      DATA SMALL(1) /    1048576 /
!      DATA LARGE(1) / 2147483647 /
!      DATA RIGHT(1) /  990904320 /
!      DATA DIVER(1) / 1007681536 /
!      DATA LOG10(1) / 1091781651 /
!
!     MACHINE CONSTANTS FOR THE BURROUGHS 1700 SYSTEM
!
!     DATA RMACH(1) / Z400800000 /
!     DATA RMACH(2) / Z5FFFFFFFF /
!     DATA RMACH(3) / Z4E9800000 /
!     DATA RMACH(4) / Z4EA800000 /
!     DATA RMACH(5) / Z500E730E8 /
!
!     MACHINE CONSTANTS FOR THE BURROUGHS 5700/6700/7700 SYSTEMS
!
!     DATA RMACH(1) / O1771000000000000 /
!     DATA RMACH(2) / O0777777777777777 /
!     DATA RMACH(3) / O1311000000000000 /
!     DATA RMACH(4) / O1301000000000000 /
!     DATA RMACH(5) / O1157163034761675 /
!
!     MACHINE CONSTANTS FOR THE CDC CYBER 170/180 SERIES USING NOS
!
!     DATA RMACH(1) / O"00014000000000000000" /
!     DATA RMACH(2) / O"37767777777777777777" /
!     DATA RMACH(3) / O"16404000000000000000" /
!     DATA RMACH(4) / O"16414000000000000000" /
!     DATA RMACH(5) / O"17164642023241175720" /
!
!     MACHINE CONSTANTS FOR THE CDC CYBER 170/180 SERIES USING NOS/VE
!
!     DATA RMACH(1) / Z"3001800000000000" /
!     DATA RMACH(2) / Z"4FFEFFFFFFFFFFFE" /
!     DATA RMACH(3) / Z"3FD2800000000000" /
!     DATA RMACH(4) / Z"3FD3800000000000" /
!     DATA RMACH(5) / Z"3FFF9A209A84FBCF" /
!
!     MACHINE CONSTANTS FOR THE CDC CYBER 200 SERIES
!
!     DATA RMACH(1) / X'9000400000000000' /
!     DATA RMACH(2) / X'6FFF7FFFFFFFFFFF' /
!     DATA RMACH(3) / X'FFA3400000000000' /
!     DATA RMACH(4) / X'FFA4400000000000' /
!     DATA RMACH(5) / X'FFD04D104D427DE8' /
!
!     MACHINE CONSTANTS FOR THE CDC 6000/7000 SERIES (FTN5 COMPILER)
!
!     DATA RMACH(1) / O"00014000000000000000" /
!     DATA RMACH(2) / O"37767777777777777777" /
!     DATA RMACH(3) / O"16404000000000000000" /
!     DATA RMACH(4) / O"16414000000000000000" /
!     DATA RMACH(5) / O"17164642023241175720" /
!
!     MACHINE CONSTANTS FOR THE CDC 6000/7000 SERIES (FTN COMPILER)
!
!     DATA RMACH(1) / 00564000000000000000B /
!     DATA RMACH(2) / 37767777777777777776B /
!     DATA RMACH(3) / 16414000000000000000B /
!     DATA RMACH(4) / 16424000000000000000B /
!     DATA RMACH(5) / 17164642023241175720B /
!
!     MACHINE CONSTANTS FOR CONVEX C-1.
!
!      DATA RMACH(1) / '00800000'X /
!      DATA RMACH(2) / '7FFFFFFF'X /
!      DATA RMACH(3) / '34800000'X /
!      DATA RMACH(4) / '35000000'X /
!      DATA RMACH(5) / '3F9A209B'X /
!
!     MACHINE CONSTANTS FOR THE CRAY 1, XMP2 AND XMP3
!
!     DATA RMACH(1) / 200034000000000000000B /
!     DATA RMACH(2) / 577767777777777777776B /
!     DATA RMACH(3) / 377224000000000000000B /
!     DATA RMACH(4) / 377234000000000000000B /
!     DATA RMACH(5) / 377774642023241175720B /
!
!     MACHINE CONSTANTS FOR THE DATA GENERAL ECLIPSE S/200
!
!     NOTE - IT MAY BE APPROPRIATE TO INCLUDE THE FOLLOWING CARD -
!     STATIC RMACH(5)
!
!     DATA SMALL/20K,0/,LARGE/77777K,177777K/
!     DATA RIGHT/35420K,0/,DIVER/36020K,0/
!     DATA LOG10/40423K,42023K/
!
!     MACHINE CONSTANTS FOR THE HARRIS 220
!
!     DATA SMALL(1),SMALL(2) / '20000000, '00000201 /
!     DATA LARGE(1),LARGE(2) / '37777777, '00000177 /
!     DATA RIGHT(1),RIGHT(2) / '20000000, '00000352 /
!     DATA DIVER(1),DIVER(2) / '20000000, '00000353 /
!     DATA LOG10(1),LOG10(2) / '23210115, '00000377 /
!
!     MACHINE CONSTANTS FOR THE HONEYWELL DPS 8/70 SERIES
!                           THE HONEYWELL 600/6000 SERIES
!
!     DATA RMACH(1) / O402400000000 /
!     DATA RMACH(2) / O376777777777 /
!     DATA RMACH(3) / O714400000000 /
!     DATA RMACH(4) / O716400000000 /
!     DATA RMACH(5) / O776464202324 /
!
!     MACHINE CONSTANTS FOR THE HP 2100
!     3 WORD DOUBLE PRECISION WITH FTN4
!
!     DATA SMALL(1), SMALL(2) / 40000B,       1 /
!     DATA LARGE(1), LARGE(2) / 77777B, 177776B /
!     DATA RIGHT(1), RIGHT(2) / 40000B,    325B /
!     DATA DIVER(1), DIVER(2) / 40000B,    327B /
!     DATA LOG10(1), LOG10(2) / 46420B,  46777B /
!
!     MACHINE CONSTANTS FOR THE HP 2100
!     4 WORD DOUBLE PRECISION WITH FTN4
!
!     DATA SMALL(1), SMALL(2) / 40000B,       1 /
!     DATA LARGE91), LARGE(2) / 77777B, 177776B /
!     DATA RIGHT(1), RIGHT(2) / 40000B,    325B /
!     DATA DIVER(1), DIVER(2) / 40000B,    327B /
!     DATA LOG10(1), LOG10(2) / 46420B,  46777B /
!
!     MACHINE CONSTANTS FOR THE IBM 360/370 SERIES
!                           THE XEROX SIGMA 5/7/9
!                           THE SEL SYSTEMS 85/86
!                           THE PERKIN ELMER 3230
!                           THE PERKIN ELMER (INTERDATA) 3230
!
!     DATA RMACH(1) / Z00100000 /
!     DATA RMACH(2) / Z7FFFFFFF /
!     DATA RMACH(3) / Z3B100000 /
!     DATA RMACH(4) / Z3C100000 /
!     DATA RMACH(5) / Z41134413 /
!
!     MACHINE CONSTANTS FOR THE INTERDATA 8/32 WITH THE UNIX SYSTEM
!     FORTRAN 77 COMPILER
!
!     FOR THE INTERDATA FORTRAN VII COMPILER REPLACE THE Z'S
!     SPECIFYING HEX CONSTANTS WITH Y'S
!
!     DATA RMACH(1) / Z'00100000' /
!     DATA RMACH(2) / Z'7EFFFFFF' /
!     DATA RMACH(3) / Z'3B100000' /
!     DATA RMACH(4) / Z'3C100000' /
!     DATA RMACH(5) / Z'41134413' /
!
!     MACHINE CONSTANTS FOR THE PDP-10 (KA OR KI PROCESSOR)
!
!     DATA RMACH(1) / "000400000000 /
!     DATA RMACH(2) / "377777777777 /
!     DATA RMACH(3) / "146400000000 /
!     DATA RMACH(4) / "147400000000 /
!     DATA RMACH(5) / "177464202324 /
!
!     MACHINE CONSTANTS FOR PDP-11 FORTRAN'S SUPPORTING
!     32-BIT INTEGERS (EXPRESSED IN INTEGER AND OCTAL)
!
!     DATA SMALL(1) /    8388608 /
!     DATA LARGE(1) / 2147483647 /
!     DATA RIGHT(1) /  880803840 /
!     DATA DIVER(1) /  889192448 /
!     DATA LOG10(1) / 1067065499 /
!
!     DATA RMACH(1) / O00040000000 /
!     DATA RMACH(2) / O17777777777 /
!     DATA RMACH(3) / O06440000000 /
!     DATA RMACH(4) / O06500000000 /
!     DATA RMACH(5) / O07746420233 /
!
!     MACHINE CONSTANTS FOR PDP-11 FORTRAN'S SUPPORTING
!     16-BIT INTEGERS  (EXPRESSED IN INTEGER AND OCTAL)
!
!     DATA SMALL(1),SMALL(2) /   128,     0 /
!     DATA LARGE(1),LARGE(2) / 32767,    -1 /
!     DATA RIGHT(1),RIGHT(2) / 13440,     0 /
!     DATA DIVER(1),DIVER(2) / 13568,     0 /
!     DATA LOG10(1),LOG10(2) / 16282,  8347 /
!
!     DATA SMALL(1),SMALL(2) / O000200, O000000 /
!     DATA LARGE(1),LARGE(2) / O077777, O177777 /
!     DATA RIGHT(1),RIGHT(2) / O032200, O000000 /
!     DATA DIVER(1),DIVER(2) / O032400, O000000 /
!     DATA LOG10(1),LOG10(2) / O037632, O020233 /
!
!     MACHINE CONSTANTS FOR THE SEQUENT BALANCE 8000.
!
!      DATA SMALL(1) / $00800000 /
!      DATA LARGE(1) / $7F7FFFFF /
!      DATA RIGHT(1) / $33800000 /
!      DATA DIVER(1) / $34000000 /
!      DATA LOG10(1) / $3E9A209B /
!
!     MACHINE CONSTANTS FOR THE SUN-3/160
!     (SEE ALSO IEEE CONSTANTS ABOVE)
!
!     DATA SMALL(1) / X'00800000' /
!     DATA LARGE(1) / X'7F7FFFFF' /
!     DATA RIGHT(1) / X'33800000' /
!     DATA DIVER(1) / X'34000000' /
!     DATA LOG10(1) / X'3E9A209B' /
!
!     MACHINE CONSTANTS FOR THE UNIVAC 1100 SERIES
!
!     DATA RMACH(1) / O000400000000 /
!     DATA RMACH(2) / O377777777777 /
!     DATA RMACH(3) / O146400000000 /
!     DATA RMACH(4) / O147400000000 /
!     DATA RMACH(5) / O177464202324 /
!
!     MACHINE CONSTANTS FOR THE VAX 11/780
!     (EXPRESSED IN INTEGER AND HEXADECIMAL)
!     ***THE HEX FORMAT BELOW MAY NOT BE SUITABLE FOR UNIX SYSTEMS***
!     *** THE INTEGER FORMAT SHOULD BE OK FOR UNIX SYSTEMS***
!
!     DATA SMALL(1) /       128 /
!     DATA LARGE(1) /    -32769 /
!     DATA RIGHT(1) /     13440 /
!     DATA DIVER(1) /     13568 /
!     DATA LOG10(1) / 547045274 /
!
!     DATA SMALL(1) / Z00000080 /
!     DATA LARGE(1) / ZFFFF7FFF /
!     DATA RIGHT(1) / Z00003480 /
!     DATA DIVER(1) / Z00003500 /
!     DATA LOG10(1) / Z209B3F9A /
!
!     MACHINE CONSTANTS FOR THE VAX/VMS VERSION 2.2
!
!     DATA RMACH(1) / '00000080'X /
!     DATA RMACH(2) / 'FFFF7FFF'X /
!     DATA RMACH(3) / '00003480'X /
!     DATA RMACH(4) / '00003500'X /
!     DATA RMACH(5) / '209B3F9A'X /
!
!     MACHINE CONSTANTS FOR THE Z80 MICROPROCESSOR
!
!     DATA SMALL(1),SMALL(2) /     0,    256/
!     DATA LARGE(1),LARGE(2) /    -1,   -129/
!     DATA RIGHT(1),RIGHT(2) /     0,  26880/
!     DATA DIVER(1),DIVER(2) /     0,  27136/
!     DATA LOG10(1),LOG10(2) /  8347,  32538/
!
      integer,parameter       :: b = radix(0.0e0)
      integer,parameter       :: t = digits (0.0e0 )
      real,parameter :: emin=minexponent(0.0e0)
      real,parameter :: emax=maxexponent(0.0e0)

      select case(i)
      case(1); r1mach = tiny(0.0e0)                ! B**(EMIN-1), the smallest positive magnitude.
      case(2); r1mach = huge(0.0e0)                ! B**EMAX*(1-B**(-T)), the largest magnitude.
                                                   ! calculating this by formula could cause overflow without using a larger type
      case(3); r1mach = real(b)**(-t)              ! B**(-T), the smallest relative spacing.
      case(4); r1mach = epsilon(0.0e0)             ! B**(1-T), the largest relative spacing.
      case(5); 
      block
      intrinsic log10
      r1mach = log10(real(b))             ! log10(B).
      endblock
      case default
         call seterr('R1MACH - I OUT OF BOUNDS',24,1,2)
      end select
!
      end function r1mach
