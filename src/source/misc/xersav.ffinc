!XERSAV
      subroutine xersav(messg,nmessg,nerr,level,icount)
!
!     ABSTRACT
!        RECORD THAT THIS ERROR OCCURRED.
!
!     DESCRIPTION OF PARAMETERS
!     --INPUT--
!       MESSG, NMESSG, NERR, LEVEL ARE AS IN XERROR,
!       EXCEPT THAT WHEN NMESSG=0 THE TABLES WILL BE
!       DUMPED AND CLEARED, AND WHEN NMESSG IS LESS THAN ZERO THE
!       TABLES WILL BE DUMPED AND NOT CLEARED.
!     --OUTPUT--
!       ICOUNT WILL BE THE NUMBER OF TIMES THIS MESSAGE HAS
!       BEEN SEEN, OR ZERO IF THE TABLE HAS OVERFLOWED AND
!       DOES NOT CONTAIN THIS MESSAGE SPECIFICALLY.
!       WHEN NMESSG=0, ICOUNT WILL NOT BE ALTERED.
!
!     WRITTEN BY RON JONES, WITH SLATEC COMMON MATH LIBRARY SUBCOMMITTEE
!     LATEST REVISION ---  19 MAR 1980
!
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      integer icount,level,nerr,nmessg
!
!  ARRAY ARGUMENTS
      character messg(nmessg)*4
!
!  LOCAL SCALARS
      integer i,ii,iunit,kountx,kunit,nchar,ncol,nunit
!
!  LOCAL ARRAYS
      integer kount(10),levtab(10),lun(5),nertab(10)
      character f(17)*1,mestab(10)*4
!
!  EXTERNAL FUNCTIONS
!      INTEGER I1MACH
!       EXTERNAL I1MACH
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL S88FMT,XGETUA
!
!     NEXT THREE DATA STATEMENTS ARE NEEDED MERELY TO SATISFY
!     CERTAIN CONVENTIONS FOR COMPILERS WHICH DYNAMICALLY
!     ALLOCATE STORAGE.
     data mestab(1),mestab(2),mestab(3),mestab(4),mestab(5),&
    &     mestab(6),mestab(7),mestab(8),mestab(9),mestab(10)&
     &     /'0','0','0','0','0','0','0','0','0','0'/
     data nertab(1),nertab(2),nertab(3),nertab(4),nertab(5),&
    &     nertab(6),nertab(7),nertab(8),nertab(9),nertab(10)&
     &     /0,0,0,0,0,0,0,0,0,0/
     data levtab(1),levtab(2),levtab(3),levtab(4),levtab(5),&
    &     levtab(6),levtab(7),levtab(8),levtab(9),levtab(10)&
     &     /0,0,0,0,0,0,0,0,0,0/
!     NEXT TWO DATA STATEMENTS ARE NECESSARY TO PROVIDE A BLANK
!     ERROR TABLE INITIALLY
     data kount(1),kount(2),kount(3),kount(4),kount(5),&
    &     kount(6),kount(7),kount(8),kount(9),kount(10)&
     &     /0,0,0,0,0,0,0,0,0,0/
      data kountx/0/
!     NEXT DATA STATEMENT SETS UP OUTPUT FORMAT
     data f(1),f(2),f(3),f(4),f(5),f(6),f(7),f(8),f(9),f(10),&
    &     f(11),f(12),f(13),f(14),f(15),f(16),f(17)&
    &     /'(' ,'1' ,'X' ,',' ,'A' ,' ' ,' ' ,',' ,'I' ,' ' ,&
     &      ' ' ,',' ,'2' ,'I' ,'1' ,'0' ,')' /
      if (nmessg.gt.0) go to 80
!     DUMP THE TABLE
         if (kount(1).eq.0) return
!        PREPARE FORMAT
         nchar = i1mach(6)
         call s88fmt(2,nchar,f(6))
         ncol = 20 - nchar
         call s88fmt(2,ncol,f(10))
!        PRINT TO EACH UNIT
         call xgetua(lun,nunit)
         do 60 kunit=1,nunit
            iunit = lun(kunit)
            if (iunit.eq.0) iunit = i1mach(4)
!           PRINT TABLE HEADER
            write (iunit,10)
  10       format ('0          ERROR MESSAGE SUMMARY'/&
     &              ' FIRST WORD      NERR     LEVEL     COUNT')
!           PRINT BODY OF TABLE
            do 20 i=1,10
               if (kount(i).eq.0) go to 30
               write (iunit,f) mestab(i),nertab(i),levtab(i),kount(i)
   20       continue
   30       continue
!           PRINT NUMBER OF OTHER ERRORS
            if (kountx.ne.0) write (iunit,40) kountx
   40       format (/' OTHER ERRORS NOT INDIVIDUALLY TABULATED=',i10)
            write (iunit,50)
   50       format (1x)
   60    continue
         if (nmessg.lt.0) return
!        CLEAR THE ERROR TABLES
         do 70 i=1,10
   70       kount(i) = 0
         kountx = 0
         return
   80 continue
!     PROCESS A MESSAGE...
!     SEARCH FOR THIS MESSG, OR ELSE AN EMPTY SLOT FOR THIS MESSG,
!     OR ELSE DETERMINE THAT THE ERROR TABLE IS FULL.
      do 90 i=1,10
         ii = i
         if (kount(i).eq.0) go to 110
         if (messg(1).ne.mestab(i)) go to 90
         if (nerr.ne.nertab(i)) go to 90
         if (level.ne.levtab(i)) go to 90
         go to 100
   90 continue
!     THREE POSSIBLE CASES...
!     TABLE IS FULL
         kountx = kountx+1
         icount = 1
         return
!     MESSAGE FOUND IN TABLE
  100    kount(ii) = kount(ii) + 1
         icount = kount(ii)
         return
!     EMPTY SLOT FOUND FOR NEW MESSAGE
  110    mestab(ii) = messg(1)
         nertab(ii) = nerr
         levtab(ii) = level
         kount(ii)  = 1
         icount = 1
         return
      end
