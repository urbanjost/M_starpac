!E9RINT
      subroutine e9rint(messg,nw,nerr,save)
!
!  THIS ROUTINE STORES THE CURRENT ERROR MESSAGE OR PRINTS THE OLD ONE,
!  IF ANY, DEPENDING ON WHETHER OR NOT SAVE = .TRUE. .
!
!     CHARACTER*4 MESSG(NW)
!     LOGICAL SAVE
!
!  MESSGP STORES AT LEAST THE FIRST 72 CHARACTERS OF THE PREVIOUS
!  MESSAGE. ITS LENGTH IS MACHINE DEPENDENT AND MUST BE AT LEAST
!
!       1 + 71/(THE NUMBER OF CHARACTERS STORED PER INTEGER WORD).
!
!     CHARACTER*4 MESSGP(36),FMT(14),CCPLUS
!
!  VARIABLE DECLARATIONS
!
!  SCALAR ARGUMENTS
      integer nerr,nw
      logical save
!
!  ARRAY ARGUMENTS
      character messg(nw)*4
!
!  LOCAL SCALARS
      integer i,iwunit,nerrp,nwp
      character ccplus*4
!
!  LOCAL ARRAYS
      character fmt(14)*4,messgp(36)*4
!
!  EXTERNAL FUNCTIONS
!      INTEGER I1MACH,I8SAVE
!       EXTERNAL I1MACH,I8SAVE
!
!  EXTERNAL SUBROUTINES
!       EXTERNAL S88FMT
!
!
!  START WITH NO PREVIOUS MESSAGE.
!
      data messgp(1)/'1'/, nwp/0/, nerrp/0/
!
!  SET UP THE FORMAT FOR PRINTING THE ERROR MESSAGE.
!  THE FORMAT IS SIMPLY (A1,14X,72AXX) WHERE XX=I1MACH(6) IS THE
!  NUMBER OF CHARACTERS STORED PER INTEGER WORD.
!
      data ccplus  / '+' /
!
      data fmt( 1) / '(' /
      data fmt( 2) / 'A' /
      data fmt( 3) / '1' /
      data fmt( 4) / ',' /
      data fmt( 5) / '1' /
      data fmt( 6) / '4' /
      data fmt( 7) / 'X' /
      data fmt( 8) / ',' /
      data fmt( 9) / '7' /
      data fmt(10) / '2' /
      data fmt(11) / 'A' /
      data fmt(12) / 'X' /
      data fmt(13) / 'X' /
      data fmt(14) / ')' /
!
      if (.not.save) go to 20
!
!  SAVE THE MESSAGE.
!
        nwp=nw
        nerrp=nerr
        do 10 i=1,nw
 10     messgp(i)=messg(i)
!
        go to 30
!
 20   if (i8save(1,0,.false.).eq.0) go to 30
!
!  PRINT THE MESSAGE.
!
        iwunit=i1mach(4)
        write(iwunit,9000) nerrp
 9000   format(' ERROR ',i4,' IN ')
!
        call s88fmt(2,i1mach(6),fmt(12))
        write(iwunit,fmt) ccplus,(messgp(i),i=1,nwp)
!
 30   return
!
      end
